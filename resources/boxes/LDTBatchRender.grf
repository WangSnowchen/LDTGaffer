import Gaffer
import GafferArnold
import GafferDispatch
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 8, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["LDTArnoldRender"] = GafferArnold.ArnoldRender( "LDTArnoldRender" )
parent.addChild( __children["LDTArnoldRender"] )
__children["LDTArnoldRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader_Aovs"] = GafferImage.ImageReader( "ImageReader_Aovs" )
parent.addChild( __children["ImageReader_Aovs"] )
__children["ImageReader_Aovs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CollectImages_Aovs"] = GafferImage.CollectImages( "CollectImages_Aovs" )
parent.addChild( __children["CollectImages_Aovs"] )
__children["CollectImages_Aovs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"] = Gaffer.Expression( "Expression7" )
parent.addChild( __children["Expression7"] )
__children["Expression7"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"] = GafferImage.Shuffle( "Shuffle_beautyToRGBA" )
parent.addChild( __children["Shuffle_beautyToRGBA"] )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeleteChannels_beauty"] = GafferImage.DeleteChannels( "DeleteChannels_beauty" )
parent.addChild( __children["DeleteChannels_beauty"] )
__children["DeleteChannels_beauty"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LDTImageWriter"] = GafferImage.ImageWriter( "LDTImageWriter" )
parent.addChild( __children["LDTImageWriter"] )
__children["LDTImageWriter"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LDTImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LDTImageWriter"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot67"] = Gaffer.Dot( "Dot67" )
parent.addChild( __children["Dot67"] )
__children["Dot67"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot67"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut4"] = Gaffer.BoxOut( "BoxOut4" )
parent.addChild( __children["BoxOut4"] )
__children["BoxOut4"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["task"] = GafferDispatch.TaskNode.TaskPlug( "task", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["task"] )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["ContextVariablesTask"] = Gaffer.ContextVariables( "ContextVariablesTask" )
parent.addChild( __children["ContextVariablesTask"] )
__children["ContextVariablesTask"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["ContextVariablesTask"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Render"] = GafferDispatch.TaskList( "Render" )
parent.addChild( __children["Render"] )
__children["Render"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Render"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out_file_name"] = Gaffer.StringPlug( "out_file_name", defaultValue = '/home/ezequielm/Documents/renders/${shot}_${layer}/merged_${version}.####.exr', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out_file_name"] )
__children["Dot69"] = Gaffer.Dot( "Dot69" )
parent.addChild( __children["Dot69"] )
__children["Dot69"].setup( GafferImage.ImagePlug( "in", ) )
__children["Dot69"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot69"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot69"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot73"] = Gaffer.Dot( "Dot73" )
parent.addChild( __children["Dot73"] )
__children["Dot73"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["Dot73"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot73"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["version"] = Gaffer.StringPlug( "version", defaultValue = 'v001', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["version"] )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot74"] = Gaffer.Dot( "Dot74" )
parent.addChild( __children["Dot74"] )
__children["Dot74"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot74"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"] = GafferDispatch.Wedge( "WedgeLayer" )
parent.addChild( __children["WedgeLayer"] )
__children["WedgeLayer"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"]["ramp"].clearPoints()
__children["WedgeLayer"]["ramp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"]["ramp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"]["ramp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"]["ramp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"]["ramp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"]["ramp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["WedgeLayer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"] = GafferDispatch.Wedge( "ShotsWedge" )
parent.addChild( __children["ShotsWedge"] )
__children["ShotsWedge"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"]["ramp"].clearPoints()
__children["ShotsWedge"]["ramp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"]["ramp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"]["ramp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"]["ramp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"]["ramp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"]["ramp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShotsWedge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["shot_list"] = Gaffer.StringVectorDataPlug( "shot_list", defaultValue = IECore.StringVectorData( [ '0001', '0002', '0003', '0004', '0005', '0006', '0007', '0008', '0009', '0010', '0011' ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["shot_list"] )
__children["frames"] = Gaffer.StringPlug( "frames", defaultValue = 'CurrentFrame', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["frames"] )
__children["render"] = Gaffer.BoolPlug( "render", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["render"] )
Gaffer.Metadata.registerValue( __children["LDTArnoldRender"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["LDTArnoldRender"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["LDTArnoldRender"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["LDTArnoldRender"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["LDTArnoldRender"]["in"].setInput( __children["Dot67"]["out"] )
__children["LDTArnoldRender"]["fileName"].setValue( '${project:rootDirectory}/asses/${script:name}/${script:name}.####.ass' )
__children["LDTArnoldRender"]["__uiPosition"].setValue( imath.V2f( 209.357864, 57.7391853 ) )
__children["ImageReader_Aovs"]["fileName"].setInput( __children["Expression7"]["__out"]["p1"] )
__children["ImageReader_Aovs"]["refreshCount"].setValue( 880 )
__children["ImageReader_Aovs"]["missingFrameMode"].setValue( 1 )
__children["ImageReader_Aovs"]["__uiPosition"].setValue( imath.V2f( 239.185089, 56.9666405 ) )
Gaffer.Metadata.registerValue( __children["CollectImages_Aovs"], 'icon', 'noun_Layers_white_688694.png' )
__children["CollectImages_Aovs"]["in"].setInput( __children["ImageReader_Aovs"]["out"] )
__children["CollectImages_Aovs"]["rootLayers"].setInput( __children["Expression7"]["__out"]["p0"] )
__children["CollectImages_Aovs"]["layerVariable"].setValue( 'collect:aov' )
__children["CollectImages_Aovs"]["__uiPosition"].setValue( imath.V2f( 239.185089, 51.1346016 ) )
Gaffer.Metadata.registerValue( __children["Expression7"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["Expression7"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["Expression7"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["Expression7"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["Expression7"]["__in"]["p0"].setInput( __children["Dot67"]["out"]["globals"] )
__children["Expression7"]["__uiPosition"].setValue( imath.V2f( 253.973755, 60.3112907 ) )
__children["Shuffle_beautyToRGBA"]["in"].setInput( __children["CollectImages_Aovs"]["out"] )
__children["Shuffle_beautyToRGBA"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel"]["in"].setValue( 'beauty.R' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel1"]["in"].setValue( 'beauty.G' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel2"]["in"].setValue( 'beauty.B' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel3"]["in"].setValue( 'beauty.A' )
__children["Shuffle_beautyToRGBA"]["__uiPosition"].setValue( imath.V2f( 239.185089, 45.3026314 ) )
__children["DeleteChannels_beauty"]["in"].setInput( __children["Shuffle_beautyToRGBA"]["out"] )
__children["DeleteChannels_beauty"]["channels"].setValue( 'beauty.[RGBA]' )
__children["DeleteChannels_beauty"]["__uiPosition"].setValue( imath.V2f( 239.185089, 39.6385765 ) )
__children["LDTImageWriter"]["preTasks"][0].setInput( __children["Dot73"]["out"] )
__children["LDTImageWriter"]["in"].setInput( __children["Dot69"]["out"] )
__children["LDTImageWriter"]["fileName"].setInput( __children["out_file_name"] )
__children["LDTImageWriter"]["colorSpace"].setValue( 'scene_linear' )
__children["LDTImageWriter"]["openexr"]["compression"].setValue( 'dwaa' )
__children["LDTImageWriter"]["__uiPosition"].setValue( imath.V2f( 211.557861, 12.4542093 ) )
__children["Dot67"]["labelType"].setValue( 3 )
__children["Dot67"]["label"].setValue( 'globals:options' )
__children["Dot67"]["in"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot67"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot67"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot67"]["__uiPosition"].setValue( imath.V2f( 210.857864, 81.4811859 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'connectionGadget:color', imath.Color3f( 0.649999976, 0.649999976, 0.649999976 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 180.552399, 88.9811707 ) )
__children["BoxOut4"]["in"].setInput( __children["Dot74"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'connectionGadget:color', imath.Color3f( 0.649999976, 0.649999976, 0.649999976 ) )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'description', 'The processed output scene.' )
__children["BoxOut4"]["passThrough"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut4"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut4"]["__uiPosition"].setValue( imath.V2f( 179.052399, 69.9811707 ) )
__children["out"].setInput( __children["BoxOut4"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["BoxOut"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["BoxOut"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["BoxOut"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["BoxOut"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["BoxOut"]["name"].setValue( 'task' )
__children["BoxOut"]["in"].setInput( __children["Render"]["task"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.644999981, 0.248300001, 0.248300001 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'connectionGadget:color', imath.Color3f( 0.314999998, 0.0786999986, 0.0786999986 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'Output connections to downstream nodes which must\nnot be executed until after this node.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 215.157852, -26.0340538 ) )
__children["task"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["task"], 'nodule:color', imath.Color3f( 0.644999981, 0.248300001, 0.248300001 ) )
Gaffer.Metadata.registerValue( __children["task"], 'connectionGadget:color', imath.Color3f( 0.314999998, 0.0786999986, 0.0786999986 ) )
Gaffer.Metadata.registerValue( __children["task"], 'description', 'Output connections to downstream nodes which must\nnot be executed until after this node.' )
Gaffer.Metadata.registerValue( __children["task"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["task"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["task"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["task"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["task"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["task"], 'noduleLayout:index', 0 )
__children["Backdrop"]["title"].setValue( '1 Scene Read' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -45.0999985 ), imath.V2f( 26.3310547, -23.861351 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 197.748947, 116.771805 ) )
__children["Backdrop1"]["title"].setValue( '3 Read' )
__children["Backdrop1"]["description"].setValue( 'Read Outputs aovs ' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -45.0999985 ), imath.V2f( 21.6901245, -8.11372375 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 235.402191, 77.4717865 ) )
__children["Backdrop3"]["title"].setValue( '2 Render' )
__children["Backdrop3"]["description"].setValue( 'Render the individual AOVs' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -30.6615276 ), imath.V2f( 25.9998016, 6.3070755 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( 197.984955, 62.981884 ) )
__children["Backdrop4"]["title"].setValue( '4 & 6 ImageWrite' )
__children["Backdrop4"]["description"].setValue( 'Write a single exr of all aos.\nIf Denoising is On, we denoise the exrs, and read them a second time to write to a different merged file' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -26.6843052 ), imath.V2f( 48.8252411, 26.345953 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( 198.252853, 4.93479919 ) )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 8 )
__children["ContextVariablesTask"]["variables"]["member1"]["name"].setValue( 'version' )
__children["ContextVariablesTask"]["variables"]["member1"]["value"].setInput( __children["version"] )
__children["ContextVariablesTask"]["in"].setInput( __children["LDTImageWriter"]["task"] )
Gaffer.Metadata.registerValue( __children["ContextVariablesTask"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariablesTask"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariablesTask"]["__uiPosition"].setValue( imath.V2f( 211.557861, 4.29014683 ) )
__children["Render"]["preTasks"][0].setInput( __children["ShotsWedge"]["task"] )
__children["Render"]["__uiPosition"].setValue( imath.V2f( 213.657852, -17.7020226 ) )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'description', "The name of the file to be written. File sequences with\narbitrary padding may be specified using the '#' character\nas a placeholder for the frame numbers." )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'plugValueWidget:type', 'GafferUI.FileSystemPathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'path:leaf', True )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'path:bookmarks', 'image' )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'fileSystemPath:extensions', 'bmp cin dds dpx fits hdr rgbe ico iff z jpg jpe jpeg jif jfif jfi exr sxr mxr png ppm pgm pbm pnm pfm psd pdd psb bay bmq cr2 crw cs1 dc2 dcr dng erf fff k25 kdc mdc mos mrw nef orf pef pxn raf raw rdc sr2 srf x3f arw 3fr cine ia kc2 mef nrw qtk rw2 sti rwl srw drf dsc ptx cap iiq rwz rla sgi rgb rgba bw int inta socket pic tiff tif tx env sm vsm tga tpic zfile' )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'fileSystemPath:extensionsLabel', 'Show only image files' )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'fileSystemPath:includeSequences', True )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out_file_name"], 'layout:index', 7 )
__children["Dot69"]["labelType"].setValue( 2 )
__children["Dot69"]["in"].setInput( __children["DeleteChannels_beauty"]["out"] )
__children["Dot69"]["__uiPosition"].setValue( imath.V2f( 239.185089, 34.8065453 ) )
__children["Dot69"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["Dot73"]["labelType"].setValue( 2 )
__children["Dot73"]["in"].setInput( __children["LDTArnoldRender"]["task"] )
__children["Dot73"]["__uiPosition"].setValue( imath.V2f( 209.357864, 17.2862473 ) )
Gaffer.Metadata.registerValue( __children["version"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["version"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["version"], 'layout:index', 5 )
__children["Expression"]["__in"]["p0"].setInput( __children["Dot67"]["out"]["globals"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 216.746552, 78.0704041 ) )
__children["Dot74"]["in"].setInput( __children["Dot67"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot74"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot74"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot74"]["__uiPosition"].setValue( imath.V2f( 210.857864, 77.4811859 ) )
Gaffer.Metadata.registerValue( __children["WedgeLayer"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["WedgeLayer"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["WedgeLayer"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["WedgeLayer"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["WedgeLayer"]["preTasks"][0].setInput( __children["ContextVariablesTask"]["out"] )
__children["WedgeLayer"]["variable"].setValue( 'layer' )
__children["WedgeLayer"]["indexVariable"].setValue( 'layerIndex' )
__children["WedgeLayer"]["mode"].setValue( 5 )
__children["WedgeLayer"]["strings"].setInput( __children["Expression"]["__out"]["p0"] )
__children["WedgeLayer"]["__uiPosition"].setValue( imath.V2f( 212.257858, -3.87390804 ) )
__children["ShotsWedge"]["preTasks"][0].setInput( __children["WedgeLayer"]["task"] )
__children["ShotsWedge"]["variable"].setValue( 'shot' )
__children["ShotsWedge"]["indexVariable"].setValue( 'shotIndex' )
__children["ShotsWedge"]["mode"].setValue( 5 )
__children["ShotsWedge"]["strings"].setInput( __children["shot_list"] )
__children["ShotsWedge"]["__uiPosition"].setValue( imath.V2f( 212.957855, -9.53797054 ) )
Gaffer.Metadata.registerValue( __children["shot_list"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["shot_list"], 'description', 'The list of values used when in "String List"\nmode. Has no effect in other modes.' )
Gaffer.Metadata.registerValue( __children["shot_list"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["shot_list"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["frames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["frames"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["frames"], 'presetsPlugValueWidget:allowCustom', True )
Gaffer.Metadata.registerValue( __children["frames"], 'preset:Full Range', 'FullRange' )
Gaffer.Metadata.registerValue( __children["frames"], 'preset:Current Frame', 'CurrentFrame' )
Gaffer.Metadata.registerValue( __children["frames"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["frames"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["frames"], 'presetsPlugValueWidget:isCustom', True )
Gaffer.Metadata.registerValue( __children["render"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["render"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["render"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["render"], 'buttonPlugValueWidget:clicked', 'import IECore\nimport GafferDispatch\n\nnode = plug.node()\ndispatcher = GafferDispatch.LocalDispatcher()\n\ndispatcher["jobsDirectory"].setValue( \'${project:rootDirectory}/dispatcher/local\' )\ndispatcher["executeInBackground"].setValue( True )\n\nframes = node[\'frames\'].getValue()\nprint ("LDTGaffer:LDTRender: framesMode %s"%frames)\n\nif frames == \'CurrentFrame\':\n\tdispatcher["framesMode"].setValue( GafferDispatch.Dispatcher.FramesMode.CurrentFrame )\nelif frames == \'FullRange\':\n\tdispatcher["framesMode"].setValue( GafferDispatch.Dispatcher.FramesMode.FullRange )\nelse:\n\tdispatcher["framesMode"].setValue( GafferDispatch.Dispatcher.FramesMode.CustomRange )\n\tframeList = IECore.FrameList.parse( frames )\n\n\ndispatcher.dispatch([node[\'Render\']])' )
Gaffer.Metadata.registerValue( __children["render"], 'layout:index', 3 )
__children["Expression7"]["__engine"].setValue( 'python' )
__children["Expression7"]["__expression"].setValue( 'import IECore\nimport os\n# Globals\nglobals = parent["__in"]["p0"]\n\n# Batch aovs dict {"outputname":"/path/To/file"}\noutput_batch_aovs = {}\noutput_batch_aovs_denoised = {}\n\n# denoise and albedo needed for oidn\ndenoise_albedo_path = None\nN_path = None\n\nfor option in globals.items():\n\tif option[0].startswith("output") and "Batch" in option[0]:\n\t\taov_name = os.path.basename(option[0]).lower()\n\t\taov_path = option[1].getName()\n\t\taov_basename =  os.path.basename(option[1].getName())\n\t\taov_basename_denoise =  aov_basename.replace(aov_name, aov_name + "_denoised")\n\t\taov_dirname = os.path.dirname(option[1].getName())\n\t\taov_path_denoise = os.path.join(aov_dirname,aov_basename_denoise)\n\n\t\toutput_batch_aovs[aov_name] = aov_path\n\t\toutput_batch_aovs_denoised[aov_name] = aov_path_denoise\n\n\t\tif aov_name == "denoise_albedo":\n\t\t\tdenoise_albedo_path = aov_path\n\t\tif aov_name == "n":\n\t\t\tN_path = aov_path\n\n#Collect aov\nparent["__out"]["p0"] = IECore.StringVectorData(output_batch_aovs.keys())\n\n#Collect aov denoiser\n#Only populate list if both denoise_albedo and n are found in the outputs\nif all(elem in output_batch_aovs.keys() for elem in ["denoise_albedo","n"]):\n\tdenoise_aovs = output_batch_aovs.keys()\n\t#make sure we remove data aovs from denoisining list\n\tdenoise_aovs.remove("z")\n\tdenoise_aovs.remove("n")\n\tdenoise_aovs.remove("p")\n\tdenoise_aovs.remove("denoise_albedo")\n\tdenoise_aovs.remove("denoise_albedo_surfaces")\n\tparent["__out"]["p3"] = IECore.StringVectorData(denoise_aovs)\nelse:\n\tparent["__out"]["p3"] = IECore.StringVectorData()\n\n\n# Contexts\ncurrent_aov = context.get("collect:aov","beauty")\n# Reader\nparent["__out"]["p1"] = output_batch_aovs[current_aov]\n\n#denoiser\ncommand = parent["__in"]["p1"]\nfull_command = \'%s --hdr "%s" --alb "%s" --nrm "%s" -o "%s"\'  %(command,output_batch_aovs[current_aov], denoise_albedo_path, N_path, output_batch_aovs[current_aov] )\nparent["__out"]["p2"] = full_command' )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'globals = parent["__in"]["p0"]\n\nif \'option:LDT:layers\' in globals.keys():\n\tLDT_layers = globals[\'option:LDT:layers\']\nelse:\n\tLDT_layers = IECore.StringVectorData( [  ] )\nparent["__out"]["p0"] = LDT_layers' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'frames', 'presetsPlugValueWidget:allowCustom' )
Gaffer.Metadata.registerValue( parent, 'icon', 'noun_Layers_white_175012.png' )


del __children

