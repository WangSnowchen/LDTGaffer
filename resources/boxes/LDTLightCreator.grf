import Gaffer
import GafferArnold
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 58, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

__children["CollectScenes"] = GafferScene.CollectScenes( "CollectScenes" )
parent.addChild( __children["CollectScenes"] )
__children["CollectScenes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["group"] = Gaffer.StringPlug( "group", defaultValue = 'master', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["group"] )
__children["parent"] = Gaffer.StringPlug( "parent", defaultValue = '/', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parent"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["QuadLight"] = GafferArnold.ArnoldLight( "QuadLight" )
parent.addChild( __children["QuadLight"] )
__children["QuadLight"].loadShader( "quad_light" )
__children["QuadLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"] = Gaffer.Switch( "lightTypeSwitch" )
parent.addChild( __children["lightTypeSwitch"] )
__children["lightTypeSwitch"].setup( GafferScene.ScenePlug( "in", ) )
__children["lightTypeSwitch"]["user"].addChild( Gaffer.IntPlug( "light_type", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"]["in"].addChild( GafferScene.ScenePlug( "in6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["lightTypeSwitch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SkydomeLight"] = GafferArnold.ArnoldLight( "SkydomeLight" )
parent.addChild( __children["SkydomeLight"] )
__children["SkydomeLight"].loadShader( "skydome_light" )
__children["SkydomeLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DistantLight"] = GafferArnold.ArnoldLight( "DistantLight" )
parent.addChild( __children["DistantLight"] )
__children["DistantLight"].loadShader( "distant_light" )
__children["DistantLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PointLight"] = GafferArnold.ArnoldLight( "PointLight" )
parent.addChild( __children["PointLight"] )
__children["PointLight"].loadShader( "point_light" )
__children["PointLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SpotLight"] = GafferArnold.ArnoldLight( "SpotLight" )
parent.addChild( __children["SpotLight"] )
__children["SpotLight"].loadShader( "spot_light" )
__children["SpotLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CylinderLight"] = GafferArnold.ArnoldLight( "CylinderLight" )
parent.addChild( __children["CylinderLight"] )
__children["CylinderLight"].loadShader( "cylinder_light" )
__children["CylinderLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SpreadsheetLights"] = Gaffer.Spreadsheet( "SpreadsheetLights" )
parent.addChild( __children["SpreadsheetLights"] )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.IntPlug( "light_type", defaultValue = 0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.TransformPlug( "transform", ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.StringPlug( "sets", defaultValue = '', ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.Color3fPlug( "color", defaultValue = imath.Color3f( 1, 1, 1 ), ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "exposure", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.BoolPlug( "normalize", defaultValue = True, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.StringPlug( "aov", defaultValue = 'default', ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "roundness", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "soft_edge", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "spread", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.IntPlug( "samples", defaultValue = 1, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.IntPlug( "volume_samples", defaultValue = 2, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "camera", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "transmission", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "diffuse", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "specular", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "sss", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "indirect", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "volume", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.IntPlug( "max_bounces", defaultValue = 999, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "roundness1", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "radius", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "lens_radius", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "cone_angle", defaultValue = 65.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "penumbra_angle", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "cosine_power", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "aspect_ratio", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "radius1", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "angle", defaultValue = 0.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.FloatPlug( "radius2", defaultValue = 1.0, ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.NameValuePlug( "gl:visualiser:scale", Gaffer.FloatPlug( "value", defaultValue = 1.0, minValue = 0.009999999776482582, ), False, "scale", Gaffer.Plug.Flags.Default ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.NameValuePlug( "gl:visualiser:maxTextureResolution", Gaffer.IntPlug( "value", defaultValue = 512, minValue = 2, maxValue = 2048, ), False, "maxTextureResolution", Gaffer.Plug.Flags.Default ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.NameValuePlug( "gl:visualiser:frustum", Gaffer.StringPlug( "value", defaultValue = 'whenSelected', ), False, "frustum", Gaffer.Plug.Flags.Default ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.NameValuePlug( "gl:light:frustumScale", Gaffer.FloatPlug( "value", defaultValue = 1.0, minValue = 0.009999999776482582, ), False, "lightFrustumScale", Gaffer.Plug.Flags.Default ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.NameValuePlug( "gl:light:drawingMode", Gaffer.StringPlug( "value", defaultValue = 'texture', ), False, "lightDrawingMode", Gaffer.Plug.Flags.Default ) )
__children["SpreadsheetLights"]["rows"].addColumn( Gaffer.BoolPlug( "intensity", defaultValue = True, ) )
__children["SpreadsheetLights"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["rows"] = Gaffer.Spreadsheet.RowsPlug( "rows", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["rows"] )
__children["rows"].addColumn( Gaffer.IntPlug( "light_type", defaultValue = 0, ) )
__children["rows"].addColumn( Gaffer.TransformPlug( "transform", ) )
__children["rows"].addColumn( Gaffer.StringPlug( "sets", defaultValue = '', ) )
__children["rows"].addColumn( Gaffer.Color3fPlug( "color", defaultValue = imath.Color3f( 1, 1, 1 ), ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "exposure", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.BoolPlug( "normalize", defaultValue = True, ) )
__children["rows"].addColumn( Gaffer.StringPlug( "aov", defaultValue = 'default', ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "roundness", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "soft_edge", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "spread", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.IntPlug( "samples", defaultValue = 1, ) )
__children["rows"].addColumn( Gaffer.IntPlug( "volume_samples", defaultValue = 2, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "camera", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "transmission", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "diffuse", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "specular", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "sss", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "indirect", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "volume", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.IntPlug( "max_bounces", defaultValue = 999, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "roundness1", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "radius", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "lens_radius", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "cone_angle", defaultValue = 65.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "penumbra_angle", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "cosine_power", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "aspect_ratio", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "radius1", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "angle", defaultValue = 0.0, ) )
__children["rows"].addColumn( Gaffer.FloatPlug( "radius2", defaultValue = 1.0, ) )
__children["rows"].addColumn( Gaffer.NameValuePlug( "gl:visualiser:scale", Gaffer.FloatPlug( "value", defaultValue = 1.0, minValue = 0.009999999776482582, ), False, "scale", Gaffer.Plug.Flags.Default ) )
__children["rows"].addColumn( Gaffer.NameValuePlug( "gl:visualiser:maxTextureResolution", Gaffer.IntPlug( "value", defaultValue = 512, minValue = 2, maxValue = 2048, ), False, "maxTextureResolution", Gaffer.Plug.Flags.Default ) )
__children["rows"].addColumn( Gaffer.NameValuePlug( "gl:visualiser:frustum", Gaffer.StringPlug( "value", defaultValue = 'whenSelected', ), False, "frustum", Gaffer.Plug.Flags.Default ) )
__children["rows"].addColumn( Gaffer.NameValuePlug( "gl:light:frustumScale", Gaffer.FloatPlug( "value", defaultValue = 1.0, minValue = 0.009999999776482582, ), False, "lightFrustumScale", Gaffer.Plug.Flags.Default ) )
__children["rows"].addColumn( Gaffer.NameValuePlug( "gl:light:drawingMode", Gaffer.StringPlug( "value", defaultValue = 'texture', ), False, "lightDrawingMode", Gaffer.Plug.Flags.Default ) )
__children["rows"].addColumn( Gaffer.BoolPlug( "intensity", defaultValue = True, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = 'group', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.BoolPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 'group', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CollectScenes"]["in"].setInput( __children["Transform"]["out"] )
__children["CollectScenes"]["rootNames"].setInput( __children["SpreadsheetLights"]["activeRowNames"] )
__children["CollectScenes"]["sourceRoot"].setValue( '/${collect:rootName}' )
__children["CollectScenes"]["__uiPosition"].setValue( imath.V2f( 589.811646, 101.46772 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 2 )
__children["BoxOut"]["in"].setInput( __children["Parent"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["BoxOut"]["passThrough"].setInput( __children["Dot"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 542.43103, 75.0929108 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 538.68103, 95.9716263 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 4 )
__children["Parent"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Parent"]["parent"].setInput( __children["parent"] )
__children["Parent"]["children"][0].setInput( __children["Group"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( 540.93103, 87.639595 ) )
__children["Group"]["enabled"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Group"]["in"][0].setInput( __children["CollectScenes"]["out"] )
__children["Group"]["name"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 591.311646, 95.8036575 ) )
Gaffer.Metadata.registerValue( __children["group"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["group"], 'description', 'The name of the group to be created. All the input\nscenes will be parented under this group.' )
Gaffer.Metadata.registerValue( __children["group"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["group"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["parent"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["parent"], 'plugValueWidget:type', 'GafferSceneUI.ScenePathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["parent"], 'description', 'The location which the children are parented under. This is\nignored when a filter is connected, in which case the children\nare parented under all the locations matched by the filter.' )
Gaffer.Metadata.registerValue( __children["parent"], 'userDefault', '/' )
Gaffer.Metadata.registerValue( __children["parent"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["parent"], 'layout:index', 1 )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 543.93103, 80.0929031 ) )
__children["Dot"]["__uiInputConnectionsMinimised"].setValue( True )
__children["QuadLight"]["name"].setValue( '${collect:rootName}' )
__children["QuadLight"]["sets"].setInput( __children["SpreadsheetLights"]["out"]["sets"] )
__children["QuadLight"]["transform"]["translate"].setValue( imath.V3f( -1.47801554, 0.892509162, 1.91737509 ) )
__children["QuadLight"]["parameters"]["color"].setInput( __children["SpreadsheetLights"]["out"]["color"] )
__children["QuadLight"]["parameters"]["intensity"].setInput( __children["SpreadsheetLights"]["out"]["intensity"] )
__children["QuadLight"]["parameters"]["exposure"].setInput( __children["SpreadsheetLights"]["out"]["exposure"] )
__children["QuadLight"]["parameters"]["samples"].setInput( __children["SpreadsheetLights"]["out"]["samples"] )
__children["QuadLight"]["parameters"]["normalize"].setInput( __children["SpreadsheetLights"]["out"]["normalize"] )
__children["QuadLight"]["parameters"]["camera"].setInput( __children["SpreadsheetLights"]["out"]["camera"] )
__children["QuadLight"]["parameters"]["transmission"].setInput( __children["SpreadsheetLights"]["out"]["transmission"] )
__children["QuadLight"]["parameters"]["diffuse"].setInput( __children["SpreadsheetLights"]["out"]["diffuse"] )
__children["QuadLight"]["parameters"]["specular"].setInput( __children["SpreadsheetLights"]["out"]["specular"] )
__children["QuadLight"]["parameters"]["sss"].setInput( __children["SpreadsheetLights"]["out"]["sss"] )
__children["QuadLight"]["parameters"]["indirect"].setInput( __children["SpreadsheetLights"]["out"]["indirect"] )
__children["QuadLight"]["parameters"]["max_bounces"].setInput( __children["SpreadsheetLights"]["out"]["max_bounces"] )
__children["QuadLight"]["parameters"]["volume_samples"].setInput( __children["SpreadsheetLights"]["out"]["volume_samples"] )
__children["QuadLight"]["parameters"]["volume"].setInput( __children["SpreadsheetLights"]["out"]["volume"] )
__children["QuadLight"]["parameters"]["aov"].setInput( __children["SpreadsheetLights"]["out"]["aov"] )
__children["QuadLight"]["parameters"]["roundness"].setInput( __children["SpreadsheetLights"]["out"]["roundness"] )
__children["QuadLight"]["parameters"]["soft_edge"].setInput( __children["SpreadsheetLights"]["out"]["soft_edge"] )
__children["QuadLight"]["parameters"]["spread"].setInput( __children["SpreadsheetLights"]["out"]["spread"] )
__children["QuadLight"]["visualiserAttributes"]["scale"].setInput( __children["SpreadsheetLights"]["out"]["scale"] )
__children["QuadLight"]["visualiserAttributes"]["maxTextureResolution"].setInput( __children["SpreadsheetLights"]["out"]["maxTextureResolution"] )
__children["QuadLight"]["visualiserAttributes"]["frustum"].setInput( __children["SpreadsheetLights"]["out"]["frustum"] )
__children["QuadLight"]["visualiserAttributes"]["lightFrustumScale"].setInput( __children["SpreadsheetLights"]["out"]["lightFrustumScale"] )
__children["QuadLight"]["visualiserAttributes"]["lightDrawingMode"].setInput( __children["SpreadsheetLights"]["out"]["lightDrawingMode"] )
__children["QuadLight"]["__uiPosition"].setValue( imath.V2f( 560.614685, 120.959908 ) )
__children["lightTypeSwitch"]["user"]["light_type"].setInput( __children["SpreadsheetLights"]["out"]["light_type"] )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'preset:quad', 0 )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'preset:spot', 1 )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'preset:point', 2 )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'preset:distant', 3 )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'preset:skydome', 4 )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["user"]["light_type"], 'preset:cylinder', 5 )
__children["lightTypeSwitch"]["index"].setInput( __children["lightTypeSwitch"]["user"]["light_type"] )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["in"], 'noduleLayout:section', 'top' )
__children["lightTypeSwitch"]["in"][0].setInput( __children["QuadLight"]["out"] )
__children["lightTypeSwitch"]["in"][1].setInput( __children["SpotLight"]["out"] )
__children["lightTypeSwitch"]["in"][2].setInput( __children["PointLight"]["out"] )
__children["lightTypeSwitch"]["in"][3].setInput( __children["DistantLight"]["out"] )
__children["lightTypeSwitch"]["in"][4].setInput( __children["SkydomeLight"]["out"] )
__children["lightTypeSwitch"]["in"][5].setInput( __children["CylinderLight"]["out"] )
Gaffer.Metadata.registerValue( __children["lightTypeSwitch"]["out"], 'noduleLayout:section', 'bottom' )
__children["lightTypeSwitch"]["__uiPosition"].setValue( imath.V2f( 589.811646, 112.795845 ) )
__children["SkydomeLight"]["name"].setValue( '${collect:rootName}' )
__children["SkydomeLight"]["sets"].setInput( __children["SpreadsheetLights"]["out"]["sets"] )
__children["SkydomeLight"]["parameters"]["color"].setInput( __children["SpreadsheetLights"]["out"]["color"] )
__children["SkydomeLight"]["parameters"]["intensity"].setInput( __children["SpreadsheetLights"]["out"]["intensity"] )
__children["SkydomeLight"]["parameters"]["exposure"].setInput( __children["SpreadsheetLights"]["out"]["exposure"] )
__children["SkydomeLight"]["parameters"]["samples"].setInput( __children["SpreadsheetLights"]["out"]["samples"] )
__children["SkydomeLight"]["parameters"]["normalize"].setInput( __children["SpreadsheetLights"]["out"]["normalize"] )
__children["SkydomeLight"]["parameters"]["camera"].setInput( __children["SpreadsheetLights"]["out"]["camera"] )
__children["SkydomeLight"]["parameters"]["transmission"].setInput( __children["SpreadsheetLights"]["out"]["transmission"] )
__children["SkydomeLight"]["parameters"]["diffuse"].setInput( __children["SpreadsheetLights"]["out"]["diffuse"] )
__children["SkydomeLight"]["parameters"]["specular"].setInput( __children["SpreadsheetLights"]["out"]["specular"] )
__children["SkydomeLight"]["parameters"]["sss"].setInput( __children["SpreadsheetLights"]["out"]["sss"] )
__children["SkydomeLight"]["parameters"]["indirect"].setInput( __children["SpreadsheetLights"]["out"]["indirect"] )
__children["SkydomeLight"]["parameters"]["max_bounces"].setInput( __children["SpreadsheetLights"]["out"]["max_bounces"] )
__children["SkydomeLight"]["parameters"]["volume_samples"].setInput( __children["SpreadsheetLights"]["out"]["volume_samples"] )
__children["SkydomeLight"]["parameters"]["volume"].setInput( __children["SpreadsheetLights"]["out"]["volume"] )
__children["SkydomeLight"]["parameters"]["aov"].setInput( __children["SpreadsheetLights"]["out"]["aov"] )
__children["SkydomeLight"]["parameters"]["aov_indirect"].setValue( True )
__children["SkydomeLight"]["visualiserAttributes"]["scale"].setInput( __children["SpreadsheetLights"]["out"]["scale"] )
__children["SkydomeLight"]["visualiserAttributes"]["maxTextureResolution"].setInput( __children["SpreadsheetLights"]["out"]["maxTextureResolution"] )
__children["SkydomeLight"]["visualiserAttributes"]["frustum"].setInput( __children["SpreadsheetLights"]["out"]["frustum"] )
__children["SkydomeLight"]["visualiserAttributes"]["lightFrustumScale"].setInput( __children["SpreadsheetLights"]["out"]["lightFrustumScale"] )
__children["SkydomeLight"]["visualiserAttributes"]["lightDrawingMode"].setInput( __children["SpreadsheetLights"]["out"]["lightDrawingMode"] )
__children["SkydomeLight"]["__uiPosition"].setValue( imath.V2f( 608.429504, 120.983513 ) )
__children["DistantLight"]["name"].setValue( '${collect:rootName}' )
__children["DistantLight"]["sets"].setInput( __children["SpreadsheetLights"]["out"]["sets"] )
__children["DistantLight"]["parameters"]["color"].setInput( __children["SpreadsheetLights"]["out"]["color"] )
__children["DistantLight"]["parameters"]["intensity"].setInput( __children["SpreadsheetLights"]["out"]["intensity"] )
__children["DistantLight"]["parameters"]["exposure"].setInput( __children["SpreadsheetLights"]["out"]["exposure"] )
__children["DistantLight"]["parameters"]["samples"].setInput( __children["SpreadsheetLights"]["out"]["samples"] )
__children["DistantLight"]["parameters"]["normalize"].setInput( __children["SpreadsheetLights"]["out"]["normalize"] )
__children["DistantLight"]["parameters"]["diffuse"].setInput( __children["SpreadsheetLights"]["out"]["diffuse"] )
__children["DistantLight"]["parameters"]["specular"].setInput( __children["SpreadsheetLights"]["out"]["specular"] )
__children["DistantLight"]["parameters"]["sss"].setInput( __children["SpreadsheetLights"]["out"]["sss"] )
__children["DistantLight"]["parameters"]["indirect"].setInput( __children["SpreadsheetLights"]["out"]["indirect"] )
__children["DistantLight"]["parameters"]["max_bounces"].setInput( __children["SpreadsheetLights"]["out"]["max_bounces"] )
__children["DistantLight"]["parameters"]["volume_samples"].setInput( __children["SpreadsheetLights"]["out"]["volume_samples"] )
__children["DistantLight"]["parameters"]["volume"].setInput( __children["SpreadsheetLights"]["out"]["volume"] )
__children["DistantLight"]["parameters"]["aov"].setInput( __children["SpreadsheetLights"]["out"]["aov"] )
__children["DistantLight"]["parameters"]["angle"].setInput( __children["SpreadsheetLights"]["out"]["angle"] )
__children["DistantLight"]["visualiserAttributes"]["scale"].setInput( __children["SpreadsheetLights"]["out"]["scale"] )
__children["DistantLight"]["visualiserAttributes"]["maxTextureResolution"].setInput( __children["SpreadsheetLights"]["out"]["maxTextureResolution"] )
__children["DistantLight"]["visualiserAttributes"]["frustum"].setInput( __children["SpreadsheetLights"]["out"]["frustum"] )
__children["DistantLight"]["visualiserAttributes"]["lightFrustumScale"].setInput( __children["SpreadsheetLights"]["out"]["lightFrustumScale"] )
__children["DistantLight"]["visualiserAttributes"]["lightDrawingMode"].setInput( __children["SpreadsheetLights"]["out"]["lightDrawingMode"] )
__children["DistantLight"]["__uiPosition"].setValue( imath.V2f( 596.329529, 121.283539 ) )
__children["PointLight"]["name"].setValue( '${collect:rootName}' )
__children["PointLight"]["sets"].setInput( __children["SpreadsheetLights"]["out"]["sets"] )
__children["PointLight"]["transform"]["translate"].setValue( imath.V3f( 3.58639979, 1.48664188, -0.771442115 ) )
__children["PointLight"]["parameters"]["color"].setInput( __children["SpreadsheetLights"]["out"]["color"] )
__children["PointLight"]["parameters"]["intensity"].setInput( __children["SpreadsheetLights"]["out"]["intensity"] )
__children["PointLight"]["parameters"]["exposure"].setInput( __children["SpreadsheetLights"]["out"]["exposure"] )
__children["PointLight"]["parameters"]["samples"].setInput( __children["SpreadsheetLights"]["out"]["samples"] )
__children["PointLight"]["parameters"]["normalize"].setInput( __children["SpreadsheetLights"]["out"]["normalize"] )
__children["PointLight"]["parameters"]["camera"].setInput( __children["SpreadsheetLights"]["out"]["camera"] )
__children["PointLight"]["parameters"]["transmission"].setInput( __children["SpreadsheetLights"]["out"]["transmission"] )
__children["PointLight"]["parameters"]["diffuse"].setInput( __children["SpreadsheetLights"]["out"]["diffuse"] )
__children["PointLight"]["parameters"]["specular"].setInput( __children["SpreadsheetLights"]["out"]["specular"] )
__children["PointLight"]["parameters"]["sss"].setInput( __children["SpreadsheetLights"]["out"]["sss"] )
__children["PointLight"]["parameters"]["indirect"].setInput( __children["SpreadsheetLights"]["out"]["indirect"] )
__children["PointLight"]["parameters"]["max_bounces"].setInput( __children["SpreadsheetLights"]["out"]["max_bounces"] )
__children["PointLight"]["parameters"]["volume_samples"].setInput( __children["SpreadsheetLights"]["out"]["volume_samples"] )
__children["PointLight"]["parameters"]["volume"].setInput( __children["SpreadsheetLights"]["out"]["volume"] )
__children["PointLight"]["parameters"]["aov"].setInput( __children["SpreadsheetLights"]["out"]["aov"] )
__children["PointLight"]["parameters"]["radius"].setInput( __children["SpreadsheetLights"]["out"]["radius1"] )
__children["PointLight"]["visualiserAttributes"]["scale"].setInput( __children["SpreadsheetLights"]["out"]["scale"] )
__children["PointLight"]["visualiserAttributes"]["maxTextureResolution"].setInput( __children["SpreadsheetLights"]["out"]["maxTextureResolution"] )
__children["PointLight"]["visualiserAttributes"]["frustum"].setInput( __children["SpreadsheetLights"]["out"]["frustum"] )
__children["PointLight"]["visualiserAttributes"]["lightFrustumScale"].setInput( __children["SpreadsheetLights"]["out"]["lightFrustumScale"] )
__children["PointLight"]["visualiserAttributes"]["lightDrawingMode"].setInput( __children["SpreadsheetLights"]["out"]["lightDrawingMode"] )
__children["PointLight"]["__uiPosition"].setValue( imath.V2f( 584.011658, 121.18351 ) )
__children["SpotLight"]["name"].setValue( '${collect:rootName}' )
__children["SpotLight"]["sets"].setInput( __children["SpreadsheetLights"]["out"]["sets"] )
__children["SpotLight"]["parameters"]["color"].setInput( __children["SpreadsheetLights"]["out"]["color"] )
__children["SpotLight"]["parameters"]["intensity"].setInput( __children["SpreadsheetLights"]["out"]["intensity"] )
__children["SpotLight"]["parameters"]["exposure"].setInput( __children["SpreadsheetLights"]["out"]["exposure"] )
__children["SpotLight"]["parameters"]["samples"].setInput( __children["SpreadsheetLights"]["out"]["samples"] )
__children["SpotLight"]["parameters"]["normalize"].setInput( __children["SpreadsheetLights"]["out"]["normalize"] )
__children["SpotLight"]["parameters"]["diffuse"].setInput( __children["SpreadsheetLights"]["out"]["diffuse"] )
__children["SpotLight"]["parameters"]["specular"].setInput( __children["SpreadsheetLights"]["out"]["specular"] )
__children["SpotLight"]["parameters"]["sss"].setInput( __children["SpreadsheetLights"]["out"]["sss"] )
__children["SpotLight"]["parameters"]["indirect"].setInput( __children["SpreadsheetLights"]["out"]["indirect"] )
__children["SpotLight"]["parameters"]["max_bounces"].setInput( __children["SpreadsheetLights"]["out"]["max_bounces"] )
__children["SpotLight"]["parameters"]["volume_samples"].setInput( __children["SpreadsheetLights"]["out"]["volume_samples"] )
__children["SpotLight"]["parameters"]["volume"].setInput( __children["SpreadsheetLights"]["out"]["volume"] )
__children["SpotLight"]["parameters"]["aov"].setInput( __children["SpreadsheetLights"]["out"]["aov"] )
__children["SpotLight"]["parameters"]["radius"].setInput( __children["SpreadsheetLights"]["out"]["radius"] )
__children["SpotLight"]["parameters"]["lens_radius"].setInput( __children["SpreadsheetLights"]["out"]["lens_radius"] )
__children["SpotLight"]["parameters"]["cone_angle"].setInput( __children["SpreadsheetLights"]["out"]["cone_angle"] )
__children["SpotLight"]["parameters"]["penumbra_angle"].setInput( __children["SpreadsheetLights"]["out"]["penumbra_angle"] )
__children["SpotLight"]["parameters"]["cosine_power"].setInput( __children["SpreadsheetLights"]["out"]["cosine_power"] )
__children["SpotLight"]["parameters"]["aspect_ratio"].setInput( __children["SpreadsheetLights"]["out"]["aspect_ratio"] )
__children["SpotLight"]["parameters"]["roundness"].setInput( __children["SpreadsheetLights"]["out"]["roundness1"] )
__children["SpotLight"]["visualiserAttributes"]["scale"].setInput( __children["SpreadsheetLights"]["out"]["scale"] )
__children["SpotLight"]["visualiserAttributes"]["maxTextureResolution"].setInput( __children["SpreadsheetLights"]["out"]["maxTextureResolution"] )
__children["SpotLight"]["visualiserAttributes"]["frustum"].setInput( __children["SpreadsheetLights"]["out"]["frustum"] )
__children["SpotLight"]["visualiserAttributes"]["lightFrustumScale"].setInput( __children["SpreadsheetLights"]["out"]["lightFrustumScale"] )
__children["SpotLight"]["visualiserAttributes"]["lightDrawingMode"].setInput( __children["SpreadsheetLights"]["out"]["lightDrawingMode"] )
__children["SpotLight"]["__uiPosition"].setValue( imath.V2f( 572.445007, 120.959915 ) )
__children["CylinderLight"]["name"].setValue( '${collect:rootName}' )
__children["CylinderLight"]["sets"].setInput( __children["SpreadsheetLights"]["out"]["sets"] )
__children["CylinderLight"]["parameters"]["color"].setInput( __children["SpreadsheetLights"]["out"]["color"] )
__children["CylinderLight"]["parameters"]["intensity"].setInput( __children["SpreadsheetLights"]["out"]["intensity"] )
__children["CylinderLight"]["parameters"]["exposure"].setInput( __children["SpreadsheetLights"]["out"]["exposure"] )
__children["CylinderLight"]["parameters"]["samples"].setInput( __children["SpreadsheetLights"]["out"]["samples"] )
__children["CylinderLight"]["parameters"]["normalize"].setInput( __children["SpreadsheetLights"]["out"]["normalize"] )
__children["CylinderLight"]["parameters"]["camera"].setInput( __children["SpreadsheetLights"]["out"]["camera"] )
__children["CylinderLight"]["parameters"]["transmission"].setInput( __children["SpreadsheetLights"]["out"]["transmission"] )
__children["CylinderLight"]["parameters"]["diffuse"].setInput( __children["SpreadsheetLights"]["out"]["diffuse"] )
__children["CylinderLight"]["parameters"]["specular"].setInput( __children["SpreadsheetLights"]["out"]["specular"] )
__children["CylinderLight"]["parameters"]["sss"].setInput( __children["SpreadsheetLights"]["out"]["sss"] )
__children["CylinderLight"]["parameters"]["indirect"].setInput( __children["SpreadsheetLights"]["out"]["indirect"] )
__children["CylinderLight"]["parameters"]["max_bounces"].setInput( __children["SpreadsheetLights"]["out"]["max_bounces"] )
__children["CylinderLight"]["parameters"]["volume_samples"].setInput( __children["SpreadsheetLights"]["out"]["volume_samples"] )
__children["CylinderLight"]["parameters"]["volume"].setInput( __children["SpreadsheetLights"]["out"]["volume"] )
__children["CylinderLight"]["parameters"]["aov"].setInput( __children["SpreadsheetLights"]["out"]["aov"] )
__children["CylinderLight"]["parameters"]["radius"].setInput( __children["SpreadsheetLights"]["out"]["radius2"] )
__children["CylinderLight"]["visualiserAttributes"]["scale"].setInput( __children["SpreadsheetLights"]["out"]["scale"] )
__children["CylinderLight"]["visualiserAttributes"]["maxTextureResolution"].setInput( __children["SpreadsheetLights"]["out"]["maxTextureResolution"] )
__children["CylinderLight"]["visualiserAttributes"]["frustum"].setInput( __children["SpreadsheetLights"]["out"]["frustum"] )
__children["CylinderLight"]["visualiserAttributes"]["lightFrustumScale"].setInput( __children["SpreadsheetLights"]["out"]["lightFrustumScale"] )
__children["CylinderLight"]["visualiserAttributes"]["lightDrawingMode"].setInput( __children["SpreadsheetLights"]["out"]["lightDrawingMode"] )
__children["CylinderLight"]["__uiPosition"].setValue( imath.V2f( 620.229492, 120.983528 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["SpreadsheetLights"]["selector"].setValue( '${collect:rootName}' )
__children["SpreadsheetLights"]["rows"].setInput( __children["rows"] )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:common:index', 0 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:quad:index', 2 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:adv:index', 1 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:spot:index', 3 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:point:index', 4 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:sky:index', 5 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"], 'spreadsheet:section:cyl:index', 6 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"], 'spreadsheet:columnWidth', 34 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"], 'spreadsheet:columnIndex', 0 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"], 'spreadsheet:columnLabel', 'type' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'preset:quad', 0 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'preset:spot', 1 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'preset:point', 2 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'preset:distant', 3 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'preset:skydome', 4 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["light_type"]["value"], 'preset:cylinder', 5 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"], 'spreadsheet:columnWidth', 73 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"], 'spreadsheet:columnIndex', 8 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"], 'description', 'The transform to be applied.' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["translate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["translate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["translate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["translate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["rotate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["rotate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["rotate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["rotate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["scale"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["scale"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["scale"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["scale"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["pivot"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["pivot"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["pivot"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transform"]["value"]["pivot"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sets"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sets"], 'spreadsheet:columnIndex', 5 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sets"], 'spreadsheet:columnWidth', 33 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sets"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sets"]["value"], 'description', 'A list of sets to include the object in. The\nnames should be separated by spaces.' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"], 'spreadsheet:columnIndex', 2 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"], 'spreadsheet:columnWidth', 72 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'label', 'Color' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'noduleLayout:label', 'Color' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["r"], 'noduleLayout:label', 'Color.r' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["g"], 'noduleLayout:label', 'Color.g' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["b"], 'noduleLayout:label', 'Color.b' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["color"]["value"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"], 'spreadsheet:columnIndex', 4 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"], 'spreadsheet:columnLabel', 'exp' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"], 'spreadsheet:columnWidth', 29 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["exposure"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"], 'spreadsheet:columnIndex', 7 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"], 'spreadsheet:columnLabel', 'norm' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"], 'spreadsheet:columnWidth', 38 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'label', 'Normalize' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'noduleLayout:label', 'Normalize' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["normalize"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"], 'spreadsheet:columnIndex', 6 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"], 'spreadsheet:columnWidth', 43 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'label', 'Aov' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:label', 'Aov' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aov"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"], 'spreadsheet:section', 'quad' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"], 'spreadsheet:columnWidth', 70 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'noduleLayout:label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"], 'spreadsheet:section', 'quad' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"], 'spreadsheet:columnWidth', 65 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'label', 'Soft Edge' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'noduleLayout:label', 'Soft Edge' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["soft_edge"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"], 'spreadsheet:section', 'quad' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"], 'spreadsheet:columnWidth', 48 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'label', 'Spread' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'noduleLayout:label', 'Spread' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["spread"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"], 'spreadsheet:columnWidth', 56 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'label', 'Samples' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'noduleLayout:label', 'Samples' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["samples"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"], 'spreadsheet:columnWidth', 77 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'label', 'Volume Samples' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'noduleLayout:label', 'Volume Samples' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume_samples"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"], 'spreadsheet:columnWidth', 33 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"], 'spreadsheet:columnLabel', 'Cam' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'label', 'Camera' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'noduleLayout:label', 'Camera' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["camera"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"], 'spreadsheet:columnWidth', 27 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"], 'spreadsheet:columnLabel', 'Tra' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'label', 'Transmission' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'noduleLayout:label', 'Transmission' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["transmission"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"], 'spreadsheet:columnWidth', 26 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"], 'spreadsheet:columnLabel', 'Dif' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'label', 'Diffuse' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'noduleLayout:label', 'Diffuse' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["diffuse"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"], 'spreadsheet:columnWidth', 30 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"], 'spreadsheet:columnLabel', 'Spe' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'label', 'Specular' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'noduleLayout:label', 'Specular' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["specular"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"], 'spreadsheet:columnWidth', 28 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'label', 'Sss' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'noduleLayout:label', 'Sss' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["sss"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"], 'spreadsheet:columnWidth', 26 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"], 'spreadsheet:columnLabel', 'Ind' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'label', 'Indirect' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'noduleLayout:label', 'Indirect' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["indirect"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"], 'spreadsheet:columnLabel', 'Vol' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"], 'spreadsheet:columnWidth', 27 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'label', 'Volume' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'noduleLayout:label', 'Volume' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["volume"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"], 'spreadsheet:section', 'adv' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"], 'spreadsheet:columnWidth', 83 )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'label', 'Max Bounces' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'noduleLayout:label', 'Max Bounces' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["max_bounces"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"], 'spreadsheet:columnLabel', 'roundness' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'noduleLayout:label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["roundness1"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'label', 'Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'noduleLayout:label', 'Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'label', 'Lens Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'noduleLayout:label', 'Lens Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["lens_radius"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'label', 'Cone Angle' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'noduleLayout:label', 'Cone Angle' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cone_angle"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'label', 'Penumbra Angle' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'noduleLayout:label', 'Penumbra Angle' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["penumbra_angle"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'label', 'Cosine Power' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'noduleLayout:label', 'Cosine Power' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["cosine_power"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'label', 'Aspect Ratio' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'noduleLayout:label', 'Aspect Ratio' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["aspect_ratio"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"], 'spreadsheet:section', 'point' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"], 'spreadsheet:columnLabel', 'radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'label', 'Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'noduleLayout:label', 'Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius1"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"], 'spreadsheet:section', 'sky' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'label', 'Angle' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'noduleLayout:label', 'Angle' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["angle"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"], 'spreadsheet:section', 'cyl' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"], 'spreadsheet:columnLabel', 'radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'label', 'Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'noduleLayout:label', 'Radius' )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["SpreadsheetLights"]["rows"][0]["cells"]["radius2"]["value"], 'userDefault', None )
__children["SpreadsheetLights"]["__uiPosition"].setValue( imath.V2f( 549.201355, 108.299988 ) )
__children["Transform"]["in"].setInput( __children["lightTypeSwitch"]["out"] )
__children["Transform"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Transform"]["transform"].setInput( __children["SpreadsheetLights"]["out"]["transform"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( 589.811646, 107.131783 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/...' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 608.479004, 111.019241 ) )
__children["rows"][0]["cells"]["exposure"]["value"].setValue( 13.0 )
__children["rows"][0]["cells"]["normalize"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["roundness"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["soft_edge"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["spread"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["samples"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["volume_samples"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["camera"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["transmission"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["diffuse"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["specular"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["sss"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["indirect"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["volume"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["max_bounces"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["roundness1"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["radius"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["lens_radius"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["cone_angle"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["penumbra_angle"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["cosine_power"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["aspect_ratio"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["radius1"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["angle"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["radius2"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["scale"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["maxTextureResolution"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["frustum"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["lightFrustumScale"]["enabled"].setValue( False )
__children["rows"][0]["cells"]["lightDrawingMode"]["enabled"].setValue( False )
Gaffer.Metadata.registerValue( __children["rows"], 'description', 'Holds a child RowPlug for each row in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["rows"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:common:index', 0 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:quad:index', 1 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:spot:index', 2 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:point:index', 3 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:cyl:index', 5 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:dist:index', 4 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:transform:index', 7 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:contribution:index', 8 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:visualization:index', 6 )
Gaffer.Metadata.registerValue( __children["rows"], 'spreadsheet:section:misc:index', 9 )
__children["rows"].resetDefault()
Gaffer.Metadata.registerValue( __children["rows"][0], 'description', 'The default row. This provides output values when no other\nrow matches the `selector`.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["name"], 'description', "The name of the row. This is matched against the `selector`\nto determine which row is chosen to be passed to the output.\nMay contain multiple space separated names and any of Gaffer's\nstandard wildcards." )
Gaffer.Metadata.registerValue( __children["rows"][0]["enabled"], 'description', 'Enables or disables this row. Disabled rows are ignored.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"], 'description', 'Contains a child CellPlug for each column in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"], 'spreadsheet:columnWidth', 50 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"], 'spreadsheet:columnIndex', 0 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"], 'spreadsheet:columnLabel', 'type' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'preset:quad', 0 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'preset:spot', 1 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'preset:point', 2 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'preset:distant', 3 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'preset:skydome', 4 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["light_type"]["value"], 'preset:cylinder', 5 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"], 'spreadsheet:section', 'transform' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"], 'spreadsheet:columnWidth', 336 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"], 'spreadsheet:columnIndex', 2 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"], 'description', 'The transform to be applied.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["translate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["translate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["translate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["translate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["rotate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["rotate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["rotate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["rotate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["scale"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["scale"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["scale"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["scale"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["pivot"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["pivot"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["pivot"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transform"]["value"]["pivot"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sets"], 'spreadsheet:section', 'misc' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sets"], 'spreadsheet:columnIndex', 20 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sets"], 'spreadsheet:columnWidth', 254 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sets"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sets"]["value"], 'description', 'A list of sets to include the object in. The\nnames should be separated by spaces.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"], 'spreadsheet:columnIndex', 6 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"], 'spreadsheet:columnWidth', 113 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'label', 'Color' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'noduleLayout:label', 'Color' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["r"], 'noduleLayout:label', 'Color.r' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["g"], 'noduleLayout:label', 'Color.g' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["b"], 'noduleLayout:label', 'Color.b' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["color"]["value"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"], 'spreadsheet:columnIndex', 3 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"], 'spreadsheet:columnLabel', 'exposure' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"], 'spreadsheet:columnWidth', 29 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["exposure"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"], 'spreadsheet:section', 'misc' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"], 'spreadsheet:columnIndex', 4 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"], 'spreadsheet:columnLabel', 'normalize' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"], 'spreadsheet:columnWidth', 64 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'label', 'Normalize' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'noduleLayout:label', 'Normalize' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["normalize"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"], 'spreadsheet:columnIndex', 5 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"], 'spreadsheet:columnWidth', 46 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'label', 'Aov' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:label', 'Aov' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aov"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"], 'spreadsheet:section', 'quad' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"], 'spreadsheet:columnWidth', 70 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"], 'spreadsheet:columnIndex', 8 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'noduleLayout:label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"], 'spreadsheet:section', 'quad' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"], 'spreadsheet:columnWidth', 65 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"], 'spreadsheet:columnIndex', 7 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'label', 'Soft Edge' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'noduleLayout:label', 'Soft Edge' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["soft_edge"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"], 'spreadsheet:section', 'quad' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"], 'spreadsheet:columnWidth', 48 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"], 'spreadsheet:columnIndex', 9 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'label', 'Spread' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'noduleLayout:label', 'Spread' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["spread"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"], 'spreadsheet:columnWidth', 56 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"], 'spreadsheet:columnIndex', 10 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'label', 'Samples' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'noduleLayout:label', 'Samples' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["samples"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"], 'spreadsheet:columnWidth', 102 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"], 'spreadsheet:columnIndex', 11 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'label', 'Volume Samples' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'noduleLayout:label', 'Volume Samples' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume_samples"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"], 'spreadsheet:columnWidth', 30 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"], 'spreadsheet:columnLabel', 'camera' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"], 'spreadsheet:columnIndex', 12 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'label', 'Camera' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'noduleLayout:label', 'Camera' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["camera"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"], 'spreadsheet:columnWidth', 27 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"], 'spreadsheet:columnLabel', 'transmission' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"], 'spreadsheet:columnIndex', 13 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'label', 'Transmission' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'noduleLayout:label', 'Transmission' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["transmission"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"], 'spreadsheet:columnWidth', 26 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"], 'spreadsheet:columnLabel', 'diffuse' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"], 'spreadsheet:columnIndex', 14 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'label', 'Diffuse' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'noduleLayout:label', 'Diffuse' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["diffuse"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"], 'spreadsheet:columnWidth', 30 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"], 'spreadsheet:columnLabel', 'specular' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"], 'spreadsheet:columnIndex', 15 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'label', 'Specular' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'noduleLayout:label', 'Specular' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["specular"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"], 'spreadsheet:columnWidth', 28 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"], 'spreadsheet:columnIndex', 16 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"], 'spreadsheet:columnLabel', 'sss' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'label', 'Sss' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'noduleLayout:label', 'Sss' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["sss"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"], 'spreadsheet:columnWidth', 26 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"], 'spreadsheet:columnLabel', 'indirect' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"], 'spreadsheet:columnIndex', 17 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'label', 'Indirect' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'noduleLayout:label', 'Indirect' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["indirect"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"], 'spreadsheet:section', 'contribution' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"], 'spreadsheet:columnLabel', 'volume' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"], 'spreadsheet:columnWidth', 23 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"], 'spreadsheet:columnIndex', 18 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'label', 'Volume' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'noduleLayout:label', 'Volume' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["volume"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"], 'spreadsheet:section', 'misc' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"], 'spreadsheet:columnWidth', 83 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"], 'spreadsheet:columnIndex', 19 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'label', 'Max Bounces' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'noduleLayout:label', 'Max Bounces' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["max_bounces"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"], 'spreadsheet:columnLabel', 'roundness' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"], 'spreadsheet:columnWidth', 67 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"], 'spreadsheet:columnIndex', 21 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'noduleLayout:label', 'Roundness' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["roundness1"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"], 'spreadsheet:columnWidth', 47 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"], 'spreadsheet:columnIndex', 22 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'label', 'Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'noduleLayout:label', 'Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"], 'spreadsheet:columnWidth', 75 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"], 'spreadsheet:columnIndex', 23 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'label', 'Lens Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'noduleLayout:label', 'Lens Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lens_radius"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"], 'spreadsheet:columnWidth', 73 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"], 'spreadsheet:columnIndex', 24 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'label', 'Cone Angle' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'noduleLayout:label', 'Cone Angle' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cone_angle"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"], 'spreadsheet:columnIndex', 28 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"], 'spreadsheet:columnWidth', 102 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'label', 'Penumbra Angle' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'noduleLayout:label', 'Penumbra Angle' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["penumbra_angle"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"], 'spreadsheet:columnIndex', 25 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"], 'spreadsheet:columnWidth', 86 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'label', 'Cosine Power' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'noduleLayout:label', 'Cosine Power' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["cosine_power"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"], 'spreadsheet:section', 'spot' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"], 'spreadsheet:columnIndex', 26 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"], 'spreadsheet:columnWidth', 78 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'label', 'Aspect Ratio' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'noduleLayout:label', 'Aspect Ratio' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["aspect_ratio"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"], 'spreadsheet:section', 'point' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"], 'spreadsheet:columnLabel', 'radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"], 'spreadsheet:columnIndex', 27 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"], 'spreadsheet:columnWidth', 44 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'label', 'Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'noduleLayout:label', 'Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius1"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"], 'spreadsheet:section', 'dist' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"], 'spreadsheet:columnIndex', 29 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"], 'spreadsheet:columnWidth', 41 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'label', 'Angle' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'noduleLayout:label', 'Angle' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["angle"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"], 'spreadsheet:section', 'cyl' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"], 'spreadsheet:columnLabel', 'radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"], 'spreadsheet:columnIndex', 30 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"], 'spreadsheet:columnWidth', 44 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'label', 'Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'noduleLayout:label', 'Radius' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["radius2"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["scale"], 'spreadsheet:section', 'visualization' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["scale"], 'spreadsheet:columnWidth', 39 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["scale"], 'spreadsheet:columnIndex', 31 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["scale"]["value"], 'description', 'Scales non-geometric visualisations in the viewport to make them\neasier to work with.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["scale"]["value"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["maxTextureResolution"], 'spreadsheet:section', 'visualization' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["maxTextureResolution"], 'spreadsheet:columnWidth', 135 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["maxTextureResolution"], 'spreadsheet:columnIndex', 32 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["maxTextureResolution"]["value"], 'description', 'Visualisers that load textures will respect this setting to\nlimit their resolution.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"], 'spreadsheet:section', 'visualization' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"], 'spreadsheet:columnWidth', 102 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"], 'spreadsheet:columnIndex', 34 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"]["value"], 'description', 'Controls whether applicable lights draw a representation of their\nlight projection in the viewer.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"]["value"]["value"], 'preset:Off', 'off' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"]["value"]["value"], 'preset:When Selected', 'whenSelected' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"]["value"]["value"], 'preset:On', 'on' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["frustum"]["value"]["value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightFrustumScale"], 'spreadsheet:section', 'visualization' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightFrustumScale"], 'spreadsheet:columnWidth', 134 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightFrustumScale"], 'spreadsheet:columnIndex', 35 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightFrustumScale"]["value"], 'description', 'Allows light projections to be scaled to better suit the scene.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightFrustumScale"]["value"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"], 'spreadsheet:section', 'visualization' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"], 'spreadsheet:columnWidth', 138 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"], 'spreadsheet:columnIndex', 33 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"]["value"], 'description', 'Controls how lights are presented in the Viewer.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"]["value"], 'label', 'Light Drawing Mode' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"]["value"]["value"], 'preset:Wireframe', 'wireframe' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"]["value"]["value"], 'preset:Color', 'color' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"]["value"]["value"], 'preset:Texture', 'texture' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["lightDrawingMode"]["value"]["value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["intensity"], 'spreadsheet:section', 'common' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["intensity"], 'spreadsheet:columnIndex', 1 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["intensity"], 'spreadsheet:columnWidth', 59 )
__children["Expression"]["__in"]["p0"].setInput( __children["group"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 581.769287, 95.9702148 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'LightCreatorGroup = parent["__in"]["p0"]\nparent["__out"]["p1"] = LightCreatorGroup\n\nif LightCreatorGroup == \'\':\n\tparent["__out"]["p0"] = False\nelse:\n\tparent["__out"]["p0"] = True' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'icon', 'exposureOn.png' )


del __children

