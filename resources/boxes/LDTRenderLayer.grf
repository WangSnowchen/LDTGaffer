import Gaffer
import GafferArnold
import GafferDispatch
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 58, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

__children["LDTArnoldRender"] = GafferArnold.ArnoldRender( "LDTArnoldRender" )
parent.addChild( __children["LDTArnoldRender"] )
__children["LDTArnoldRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader_Aovs"] = GafferImage.ImageReader( "ImageReader_Aovs" )
parent.addChild( __children["ImageReader_Aovs"] )
__children["ImageReader_Aovs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CollectImages_Aovs"] = GafferImage.CollectImages( "CollectImages_Aovs" )
parent.addChild( __children["CollectImages_Aovs"] )
__children["CollectImages_Aovs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"] = Gaffer.Expression( "Expression7" )
parent.addChild( __children["Expression7"] )
__children["Expression7"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"] = GafferImage.Shuffle( "Shuffle_beautyToRGBA" )
parent.addChild( __children["Shuffle_beautyToRGBA"] )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle_beautyToRGBA"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeleteChannels_beauty"] = GafferImage.DeleteChannels( "DeleteChannels_beauty" )
parent.addChild( __children["DeleteChannels_beauty"] )
__children["DeleteChannels_beauty"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LDTImageWriter"] = GafferImage.ImageWriter( "LDTImageWriter" )
parent.addChild( __children["LDTImageWriter"] )
__children["LDTImageWriter"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["LDTImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot67"] = Gaffer.Dot( "Dot67" )
parent.addChild( __children["Dot67"] )
__children["Dot67"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot67"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader_merged_exr"] = GafferImage.ImageReader( "ImageReader_merged_exr" )
parent.addChild( __children["ImageReader_merged_exr"] )
__children["ImageReader_merged_exr"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut1"] = Gaffer.BoxOut( "BoxOut1" )
parent.addChild( __children["BoxOut1"] )
__children["BoxOut1"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["merged_exr"] = GafferImage.ImagePlug( "merged_exr", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["merged_exr"] )
__children["BoxOut4"] = Gaffer.BoxOut( "BoxOut4" )
parent.addChild( __children["BoxOut4"] )
__children["BoxOut4"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["scene"] = GafferScene.ScenePlug( "scene", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["scene"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["task"] = GafferDispatch.TaskNode.TaskPlug( "task", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["task"] )
__children["render"] = Gaffer.BoolPlug( "render", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["render"] )
__children["reload_images"] = Gaffer.BoolPlug( "reload_images", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["reload_images"] )
__children["resize_to_globals_resolution"] = GafferImage.Resize( "resize_to_globals_resolution" )
parent.addChild( __children["resize_to_globals_resolution"] )
__children["resize_to_globals_resolution"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["reformat_image"] = Gaffer.Switch( "reformat_image" )
parent.addChild( __children["reformat_image"] )
__children["reformat_image"].setup( GafferImage.ImagePlug( "in", ) )
__children["reformat_image"]["in"].addChild( GafferImage.ImagePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["reformat_image"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["reformat_image"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( GafferImage.FormatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( Gaffer.ArrayPlug( "out", ) )
__children["BoxIn1"]["__in"].addChild( GafferDispatch.TaskNode.TaskPlug( "postTask0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["postTasks"] = Gaffer.ArrayPlug( "postTasks", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["postTasks"] )
__children["postTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "postTask0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["frames"] = Gaffer.StringPlug( "frames", defaultValue = 'CurrentFrame', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["frames"] )
__children["variables"] = Gaffer.CompoundDataPlug( "variables", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["variables"] )
__children["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '0001', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '0001', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member4", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = 'preview', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = 'v001', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"] = Gaffer.ContextVariables( "ContextVariablesTask" )
parent.addChild( __children["ContextVariablesTask"] )
__children["ContextVariablesTask"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["ContextVariablesTask"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member4", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesTask"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Render"] = GafferDispatch.TaskList( "Render" )
parent.addChild( __children["Render"] )
__children["Render"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Render"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariablesImage"] = Gaffer.ContextVariables( "ContextVariablesImage" )
parent.addChild( __children["ContextVariablesImage"] )
__children["ContextVariablesImage"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContextVariablesImage"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesImage"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesImage"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member4", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesImage"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesImage"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariablesImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["fileName"] = Gaffer.StringPlug( "fileName", defaultValue = '/home/ezequielm/Desktop/${sequence}_${shot}_${layer}/merged_${version}.####.exr', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["fileName"] )
__children["ContextVariables"] = Gaffer.ContextVariables( "ContextVariables" )
parent.addChild( __children["ContextVariables"] )
__children["ContextVariables"].setup( GafferScene.ScenePlug( "in", ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member5", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["resize"] = Gaffer.IntPlug( "resize", defaultValue = 1, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["resize"] )
__children["LDTArnoldRender"]["in"].setInput( __children["ContextVariables"]["out"] )
__children["LDTArnoldRender"]["fileName"].setValue( '${project:rootDirectory}/asses/${script:name}/${script:name}.####.ass' )
__children["LDTArnoldRender"]["__uiPosition"].setValue( imath.V2f( 212.793991, 37.6054306 ) )
__children["ImageReader_Aovs"]["fileName"].setInput( __children["Expression7"]["__out"]["p0"] )
__children["ImageReader_Aovs"]["refreshCount"].setValue( 877 )
__children["ImageReader_Aovs"]["missingFrameMode"].setValue( 1 )
__children["ImageReader_Aovs"]["__uiPosition"].setValue( imath.V2f( 248.694168, 74.7619247 ) )
Gaffer.Metadata.registerValue( __children["CollectImages_Aovs"], 'icon', 'assets/resources/icons/noun_Layers_white_688694.png' )
__children["CollectImages_Aovs"]["in"].setInput( __children["ImageReader_Aovs"]["out"] )
__children["CollectImages_Aovs"]["rootLayers"].setInput( __children["Expression7"]["__out"]["p1"] )
__children["CollectImages_Aovs"]["layerVariable"].setValue( 'collect:aov' )
__children["CollectImages_Aovs"]["__uiPosition"].setValue( imath.V2f( 248.694168, 68.9298935 ) )
__children["Expression7"]["__in"]["p0"].setInput( __children["Dot67"]["out"]["globals"] )
__children["Expression7"]["__uiPosition"].setValue( imath.V2f( 232.571533, 73.9669418 ) )
__children["Shuffle_beautyToRGBA"]["in"].setInput( __children["CollectImages_Aovs"]["out"] )
__children["Shuffle_beautyToRGBA"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel"]["in"].setValue( 'beauty.R' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel1"]["in"].setValue( 'beauty.G' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel2"]["in"].setValue( 'beauty.B' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle_beautyToRGBA"]["channels"]["channel3"]["in"].setValue( 'beauty.A' )
__children["Shuffle_beautyToRGBA"]["__uiPosition"].setValue( imath.V2f( 248.694168, 63.097908 ) )
__children["DeleteChannels_beauty"]["in"].setInput( __children["Shuffle_beautyToRGBA"]["out"] )
__children["DeleteChannels_beauty"]["channels"].setValue( 'beauty.[RGBA]' )
__children["DeleteChannels_beauty"]["__uiPosition"].setValue( imath.V2f( 248.694168, 57.4338455 ) )
__children["LDTImageWriter"]["preTasks"][0].setInput( __children["LDTArnoldRender"]["task"] )
__children["LDTImageWriter"]["postTasks"].setInput( __children["BoxIn1"]["out"] )
Gaffer.Metadata.registerValue( __children["LDTImageWriter"]["postTasks"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["LDTImageWriter"]["in"].setInput( __children["DeleteChannels_beauty"]["out"] )
__children["LDTImageWriter"]["fileName"].setInput( __children["fileName"] )
__children["LDTImageWriter"]["colorSpace"].setValue( 'scene_linear' )
__children["LDTImageWriter"]["openexr"]["compression"].setValue( 'dwaa' )
__children["LDTImageWriter"]["__uiPosition"].setValue( imath.V2f( 246.494171, 29.4413681 ) )
__children["Dot67"]["labelType"].setValue( 3 )
__children["Dot67"]["label"].setValue( 'globals:options' )
__children["Dot67"]["in"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot67"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot67"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot67"]["__uiPosition"].setValue( imath.V2f( 214.293991, 77.4785309 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 180.612503, 84.9785309 ) )
__children["ImageReader_merged_exr"]["fileName"].setInput( __children["LDTImageWriter"]["fileName"] )
__children["ImageReader_merged_exr"]["refreshCount"].setValue( 361 )
__children["ImageReader_merged_exr"]["missingFrameMode"].setValue( 1 )
__children["ImageReader_merged_exr"]["__uiPosition"].setValue( imath.V2f( 289.454926, 33.1281395 ) )
__children["BoxOut1"]["name"].setValue( 'merged_exr' )
__children["BoxOut1"]["in"].setInput( __children["ContextVariablesImage"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut1"]["__uiPosition"].setValue( imath.V2f( 293.954926, 4.6795063 ) )
__children["merged_exr"].setInput( __children["BoxOut1"]["__out"] )
Gaffer.Metadata.registerValue( __children["merged_exr"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["merged_exr"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["merged_exr"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["merged_exr"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["merged_exr"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["merged_exr"], 'noduleLayout:index', 1 )
__children["BoxOut4"]["name"].setValue( 'scene' )
__children["BoxOut4"]["in"].setInput( __children["ContextVariables"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["__out"], 'description', 'The processed output scene.' )
__children["BoxOut4"]["passThrough"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut4"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut4"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut4"]["__uiPosition"].setValue( imath.V2f( 179.112503, 49.8474007 ) )
__children["scene"].setInput( __children["BoxOut4"]["__out"] )
Gaffer.Metadata.registerValue( __children["scene"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["scene"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["scene"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["scene"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["scene"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["scene"], 'noduleLayout:section', 'right' )
__children["BoxOut"]["name"].setValue( 'task' )
__children["BoxOut"]["in"].setInput( __children["Render"]["task"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.644999981, 0.248300001, 0.248300001 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'connectionGadget:color', imath.Color3f( 0.314999998, 0.0786999986, 0.0786999986 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'Output connections to downstream nodes which must\nnot be executed until after this node.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 248.694168, 9.78121185 ) )
__children["task"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["task"], 'nodule:color', imath.Color3f( 0.644999981, 0.248300001, 0.248300001 ) )
Gaffer.Metadata.registerValue( __children["task"], 'connectionGadget:color', imath.Color3f( 0.314999998, 0.0786999986, 0.0786999986 ) )
Gaffer.Metadata.registerValue( __children["task"], 'description', 'Output connections to downstream nodes which must\nnot be executed until after this node.' )
Gaffer.Metadata.registerValue( __children["task"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["task"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["task"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["task"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["task"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["task"], 'noduleLayout:index', 0 )
Gaffer.Metadata.registerValue( __children["render"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["render"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["render"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["render"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( __children["render"], 'buttonPlugValueWidget:clicked', 'import IECore\nimport GafferDispatch\n\nnode = plug.node()\ndispatcher = GafferDispatch.LocalDispatcher()\n\ndispatcher["jobsDirectory"].setValue( \'${project:rootDirectory}/dispatcher/local\' )\ndispatcher["executeInBackground"].setValue( True )\n\nframes = node[\'frames\'].getValue()\nprint ("LDTGaffer:LDTRender: framesMode %s"%frames)\n\nif frames == \'CurrentFrame\':\n\tdispatcher["framesMode"].setValue( GafferDispatch.Dispatcher.FramesMode.CurrentFrame )\nelif frames == \'FullRange\':\n\tdispatcher["framesMode"].setValue( GafferDispatch.Dispatcher.FramesMode.FullRange )\nelse:\n\tdispatcher["framesMode"].setValue( GafferDispatch.Dispatcher.FramesMode.CustomRange )\n\tframeList = IECore.FrameList.parse( frames )\n\n\ndispatcher.dispatch([node[\'Render\']])' )
Gaffer.Metadata.registerValue( __children["render"], 'layout:accessory', False )
Gaffer.Metadata.registerValue( __children["render"], 'divider', False )
Gaffer.Metadata.registerValue( __children["render"], 'label', 'Render in background' )
Gaffer.Metadata.registerValue( __children["reload_images"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["reload_images"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["reload_images"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["reload_images"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["reload_images"], 'label', 'Reload images' )
Gaffer.Metadata.registerValue( __children["reload_images"], 'layout:accessory', True )
Gaffer.Metadata.registerValue( __children["reload_images"], 'buttonPlugValueWidget:clicked', "import random\nimport GafferDispatch\n\nnode = plug.node()\nnode['ImageReader_merged_exr']['refreshCount'].setValue(random.randint(0,999))" )
__children["resize_to_globals_resolution"]["in"].setInput( __children["ImageReader_merged_exr"]["out"] )
__children["resize_to_globals_resolution"]["format"].setInput( __children["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["resize_to_globals_resolution"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["resize_to_globals_resolution"]["__uiPosition"].setValue( imath.V2f( 301.088409, 24.9640808 ) )
__children["reformat_image"]["index"].setInput( __children["resize"] )
Gaffer.Metadata.registerValue( __children["reformat_image"]["in"], 'noduleLayout:section', 'top' )
__children["reformat_image"]["in"][0].setInput( __children["ImageReader_merged_exr"]["out"] )
__children["reformat_image"]["in"][1].setInput( __children["resize_to_globals_resolution"]["out"] )
Gaffer.Metadata.registerValue( __children["reformat_image"]["out"], 'noduleLayout:section', 'bottom' )
__children["reformat_image"]["__uiPosition"].setValue( imath.V2f( 292.454926, 16.6868076 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["Dot67"]["out"]["globals"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 278.631073, 24.7656403 ) )
__children["BoxIn1"]["name"].setValue( 'postTasks' )
__children["BoxIn1"]["__in"].setInput( __children["postTasks"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:customGadget:addButton:gadgetType', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', "Input connections to nodes which must be\nexecuted after this node, but which don't\nneed to be executed before downstream nodes." )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::CompoundNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:spacing', 0.20000000298023224 )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"][0], 'nodule:color', imath.Color3f( 0.644999981, 0.248300001, 0.248300001 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"][0], 'connectionGadget:color', imath.Color3f( 0.314999998, 0.0786999986, 0.0786999986 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"][0], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"][0], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 262.174713, 29.4413681 ) )
Gaffer.Metadata.registerValue( __children["postTasks"], 'noduleLayout:customGadget:addButton:gadgetType', None )
Gaffer.Metadata.registerValue( __children["postTasks"], 'description', "Input connections to nodes which must be\nexecuted after this node, but which don't\nneed to be executed before downstream nodes." )
Gaffer.Metadata.registerValue( __children["postTasks"], 'nodule:type', 'GafferUI::CompoundNodule' )
Gaffer.Metadata.registerValue( __children["postTasks"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["postTasks"], 'noduleLayout:spacing', 0.20000000298023224 )
Gaffer.Metadata.registerValue( __children["postTasks"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["postTasks"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["postTasks"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["postTasks"][0], 'nodule:color', imath.Color3f( 0.644999981, 0.248300001, 0.248300001 ) )
Gaffer.Metadata.registerValue( __children["postTasks"][0], 'connectionGadget:color', imath.Color3f( 0.314999998, 0.0786999986, 0.0786999986 ) )
Gaffer.Metadata.registerValue( __children["postTasks"][0], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["postTasks"][0], 'noduleLayout:section', 'right' )
__children["Backdrop"]["title"].setValue( '1 Scene Setup' )
__children["Backdrop"]["description"].setValue( "Sets ContextVariables for shot and layer.\nUpstream, the Shot and Layer branchs set the\nLDT:shot and LDT:layer CustomOptions.\n\nReads back the CustomOptions LDT:shot, and LDT:layer\nfrom the globals, as well as LDT:sequence set in the Sequence area.\n\nSets Outputs file names using the box['file_name'], replacing <sequence>, <shot>, <layer>,  and frame number." )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -45.0999985 ), imath.V2f( 33.1999969, 5.7644043 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 197.809052, 96.638031 ) )
__children["Backdrop1"]["title"].setValue( '3 Read merge' )
__children["Backdrop1"]["description"].setValue( 'Read Outputs aovs to merge them into a single exr' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -45.0999985 ), imath.V2f( 21.6901245, -8.11372375 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 244.266785, 96.5559998 ) )
__children["Backdrop2"]["title"].setValue( '5 Read merged exr' )
__children["Backdrop2"]["description"].setValue( 'Read the merged exr containing all aovs.\n\nResize the image using the 3d Scene globals resolution.' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -53.0891609 ), imath.V2f( 33.1999969, -4.36323166 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( 281.094635, 53.4087601 ) )
__children["Backdrop3"]["title"].setValue( '2 Render' )
__children["Backdrop3"]["description"].setValue( 'Render the individual AOVs' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -42.295948 ), imath.V2f( 25.9998016, 6.3070755 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( 198.045059, 42.8481293 ) )
__children["Backdrop4"]["title"].setValue( '4 ImageWrite' )
__children["Backdrop4"]["description"].setValue( 'Write a single exr of all aos.' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -42.3396683 ), imath.V2f( 32.1930389, 6.3070755 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( 236.830612, 42.7755585 ) )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 11 )
Gaffer.Metadata.registerValue( __children["frames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["frames"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["frames"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["frames"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["frames"], 'preset:Current Frame', 'CurrentFrame' )
Gaffer.Metadata.registerValue( __children["frames"], 'preset:Full Range', 'FullRange' )
Gaffer.Metadata.registerValue( __children["frames"], 'presetsPlugValueWidget:allowCustom', True )
Gaffer.Metadata.registerValue( __children["frames"], 'presetsPlugValueWidget:isCustom', True )
Gaffer.Metadata.registerValue( __children["variables"], 'description', 'The variables to be added. Each variable is represented\nas a child plug, created either through the UI or using the\nCompoundDataPlug API.' )
Gaffer.Metadata.registerValue( __children["variables"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["variables"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["variables"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["variables"]["member2"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["variables"]["member2"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["variables"]["member2"], 'spreadsheet:columnName', 'sequence' )
Gaffer.Metadata.registerValue( __children["variables"]["member2"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["variables"]["member2"]["name"], 'readOnly', False )
Gaffer.Metadata.registerValue( __children["variables"]["member2"]["value"], 'spreadsheet:columnName', 'sequenceValue' )
Gaffer.Metadata.registerValue( __children["variables"]["member2"]["enabled"], 'spreadsheet:columnName', 'sequenceEnabled' )
Gaffer.Metadata.registerValue( __children["variables"]["member3"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["variables"]["member3"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["variables"]["member3"], 'spreadsheet:columnName', 'shot' )
Gaffer.Metadata.registerValue( __children["variables"]["member3"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["variables"]["member3"]["name"], 'readOnly', False )
Gaffer.Metadata.registerValue( __children["variables"]["member3"]["value"], 'spreadsheet:columnName', 'shotValue' )
Gaffer.Metadata.registerValue( __children["variables"]["member3"]["enabled"], 'spreadsheet:columnName', 'shotEnabled' )
Gaffer.Metadata.registerValue( __children["variables"]["member4"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["variables"]["member4"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["variables"]["member4"], 'spreadsheet:columnName', 'layer' )
Gaffer.Metadata.registerValue( __children["variables"]["member4"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["variables"]["member4"]["name"], 'readOnly', False )
Gaffer.Metadata.registerValue( __children["variables"]["member4"]["value"], 'spreadsheet:columnName', 'layerValue' )
Gaffer.Metadata.registerValue( __children["variables"]["member4"]["enabled"], 'spreadsheet:columnName', 'layerEnabled' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["variables"]["member6"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"], 'spreadsheet:columnName', 'scene_quality' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["name"], 'readOnly', False )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["value"], 'spreadsheet:columnName', 'scene_qualityValue' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["value"], 'preset:preview', 'preview' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["value"], 'preset:low', 'low' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["value"], 'preset:mid', 'mid' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["value"], 'preset:high', 'high' )
Gaffer.Metadata.registerValue( __children["variables"]["member6"]["enabled"], 'spreadsheet:columnName', 'scene_qualityEnabled' )
__children["ContextVariablesTask"]["variables"].setInput( __children["variables"] )
__children["ContextVariablesTask"]["in"].setInput( __children["LDTImageWriter"]["task"] )
Gaffer.Metadata.registerValue( __children["ContextVariablesTask"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariablesTask"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariablesTask"]["__uiPosition"].setValue( imath.V2f( 246.494171, 23.7773056 ) )
__children["Render"]["preTasks"][0].setInput( __children["ContextVariablesTask"]["out"] )
__children["Render"]["__uiPosition"].setValue( imath.V2f( 247.194168, 18.1132431 ) )
__children["ContextVariablesImage"]["variables"].setInput( __children["variables"] )
__children["ContextVariablesImage"]["in"].setInput( __children["reformat_image"]["out"] )
Gaffer.Metadata.registerValue( __children["ContextVariablesImage"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariablesImage"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariablesImage"]["__uiPosition"].setValue( imath.V2f( 292.454926, 11.0227451 ) )
Gaffer.Metadata.registerValue( __children["fileName"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["fileName"], 'description', "The name of the file to be written. File sequences with\narbitrary padding may be specified using the '#' character\nas a placeholder for the frame numbers." )
Gaffer.Metadata.registerValue( __children["fileName"], 'plugValueWidget:type', 'GafferUI.FileSystemPathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["fileName"], 'path:leaf', True )
Gaffer.Metadata.registerValue( __children["fileName"], 'path:bookmarks', 'image' )
Gaffer.Metadata.registerValue( __children["fileName"], 'fileSystemPath:extensions', 'bmp cin dds dpx fits hdr rgbe ico iff z jpg jpe jpeg jif jfif jfi exr sxr mxr png ppm pgm pbm pnm pfm psd pdd psb bay bmq cr2 crw cs1 dc2 dcr dng erf fff k25 kdc mdc mos mrw nef orf pef pxn raf raw rdc sr2 srf x3f arw 3fr cine ia kc2 mef nrw qtk rw2 sti rwl srw drf dsc ptx cap iiq rwz rla sgi rgb rgba bw int inta socket pic tiff tif tx env sm vsm tga tpic zfile' )
Gaffer.Metadata.registerValue( __children["fileName"], 'fileSystemPath:extensionsLabel', 'Show only image files' )
Gaffer.Metadata.registerValue( __children["fileName"], 'fileSystemPath:includeSequences', True )
Gaffer.Metadata.registerValue( __children["fileName"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["fileName"], 'layout:index', 10 )
__children["ContextVariables"]["variables"].setInput( __children["variables"] )
__children["ContextVariables"]["in"].setInput( __children["Dot67"]["out"] )
Gaffer.Metadata.registerValue( __children["ContextVariables"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariables"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariables"]["__uiPosition"].setValue( imath.V2f( 214.293991, 58.1794319 ) )
Gaffer.Metadata.registerValue( __children["resize"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["resize"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["resize"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["resize"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["resize"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["resize"], 'divider', False )
__children["Expression7"]["__engine"].setValue( 'python' )
__children["Expression7"]["__expression"].setValue( 'import IECore\n\n# GLOBALS AND BATCH OUTPUTS\nglobals = parent["__in"]["p0"]\noutput_batch_aovs = {}\n\nfor option in globals.items():\n\tif option[0].startswith("output") and "Batch" in option[0]:\n\t\taov_name =  option[0].split(\'/\')[-1].lower()\n\t\toutput_batch_aovs[aov_name] = option[1].getName()\n\nparent["__out"]["p1"] = IECore.StringVectorData(output_batch_aovs.keys())\n\ncurrent_aov = context.get("collect:aov","beauty")\n\nprint "LDTGaffer:CollectImage:%s" %output_batch_aovs[current_aov]\nparent["__out"]["p0"] = output_batch_aovs[current_aov]' )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import GafferImage\n\nglobals = parent["__in"]["p0"]\nresolution = globals[\'option:render:resolution\']\n\nparent["__out"]["p0"] = GafferImage.Format( resolution.value[0], resolution.value[1], 1.000 )' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'frames', 'presetsPlugValueWidget:allowCustom' )


del __children

