import Gaffer
import GafferArnold
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 58, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["inspectionCamera"] = GafferScene.Camera( "inspectionCamera" )
parent.addChild( __children["inspectionCamera"] )
__children["inspectionCamera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectionCameraFOV"] = Gaffer.FloatPlug( "InspectionCameraFOV", defaultValue = 55.0, minValue = 0.0, maxValue = 180.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["InspectionCameraFOV"] )
__children["inspectionNearClipping"] = Gaffer.FloatPlug( "inspectionNearClipping", defaultValue = 2.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["inspectionNearClipping"] )
__children["QuadLight"] = GafferArnold.ArnoldLight( "QuadLight" )
parent.addChild( __children["QuadLight"] )
__children["QuadLight"].loadShader( "quad_light" )
__children["QuadLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent1"] = GafferScene.Parent( "Parent1" )
parent.addChild( __children["Parent1"] )
__children["Parent1"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["exposure"] = Gaffer.FloatPlug( "exposure", defaultValue = 15.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["exposure"] )
__children["spread"] = Gaffer.FloatPlug( "spread", defaultValue = 0.3499999940395355, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["spread"] )
__children["translate"] = Gaffer.V3fPlug( "translate", defaultValue = imath.V3f( 8, 5, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["translate"] )
__children["lightEnabled"] = Gaffer.BoolPlug( "lightEnabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["lightEnabled"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["transform_scale"] = Gaffer.V3fPlug( "transform_scale", defaultValue = imath.V3f( 2, 2, 2 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["transform_scale"] )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'Outputs the input specified by the index.' )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 1 )
__children["BoxOut"]["in"].setInput( __children["StandardOptions"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'Outputs the input specified by the index.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
__children["BoxOut"]["passThrough"].setInput( __children["Dot"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -200.167587, -142.73259 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -203.917587, -114.894974 ) )
__children["inspectionCamera"]["name"].setValue( 'inspectionCamera' )
__children["inspectionCamera"]["transform"]["translate"].setValue( imath.V3f( 268.567902, 116.983589, -506.753235 ) )
__children["inspectionCamera"]["transform"]["rotate"].setValue( imath.V3f( 10.0425444, 3231.15259, 0.00159965164 ) )
__children["inspectionCamera"]["fieldOfView"].setInput( __children["InspectionCameraFOV"] )
__children["inspectionCamera"]["clippingPlanes"]["x"].setInput( __children["inspectionNearClipping"] )
__children["inspectionCamera"]["__uiPosition"].setValue( imath.V2f( -179.244659, -111.40873 ) )
__children["Parent"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["children"][0].setInput( __children["Parent1"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( -201.667587, -127.736855 ) )
Gaffer.Metadata.registerValue( __children["InspectionCameraFOV"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["InspectionCameraFOV"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["InspectionCameraFOV"], 'description', "The horizontal field of view, in degrees.\n\nIn the camera's parameters, projection is always stored as\n`aperture` and `focalLength`. When using the _Field of\nView_ perspective mode, the aperture has the fixed\ndimensions of `1, 1`, and this plug drives the\n`focalLength` parameter." )
Gaffer.Metadata.registerValue( __children["InspectionCameraFOV"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["InspectionCameraFOV"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["inspectionNearClipping"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["inspectionNearClipping"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["inspectionNearClipping"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["inspectionNearClipping"], 'nodule:type', '' )
__children["QuadLight"]["enabled"].setInput( __children["lightEnabled"] )
__children["QuadLight"]["name"].setValue( 'quadLight' )
__children["QuadLight"]["transform"]["translate"].setInput( __children["translate"] )
__children["QuadLight"]["transform"]["scale"].setInput( __children["transform_scale"] )
__children["QuadLight"]["parameters"]["exposure"].setInput( __children["exposure"] )
__children["QuadLight"]["parameters"]["spread"].setInput( __children["spread"] )
__children["QuadLight"]["__uiPosition"].setValue( imath.V2f( -161.491089, -111.388634 ) )
__children["Parent1"]["in"].setInput( __children["inspectionCamera"]["out"] )
__children["Parent1"]["parent"].setValue( '/inspectionCamera' )
__children["Parent1"]["children"][0].setInput( __children["QuadLight"]["out"] )
__children["Parent1"]["__uiPosition"].setValue( imath.V2f( -176.994659, -119.572792 ) )
Gaffer.Metadata.registerValue( __children["exposure"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["exposure"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["exposure"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["exposure"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'description', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["exposure"], 'noduleLayout:label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["exposure"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'layout:section', 'Settings.light' )
Gaffer.Metadata.registerValue( __children["exposure"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( __children["spread"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["spread"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["spread"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["spread"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["spread"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["spread"], 'description', None )
Gaffer.Metadata.registerValue( __children["spread"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["spread"], 'label', 'Spread' )
Gaffer.Metadata.registerValue( __children["spread"], 'noduleLayout:label', 'Spread' )
Gaffer.Metadata.registerValue( __children["spread"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["spread"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["spread"], 'layout:section', 'Settings.light' )
Gaffer.Metadata.registerValue( __children["spread"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["translate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["translate"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["translate"], 'layout:section', 'Settings.light' )
Gaffer.Metadata.registerValue( __children["translate"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["translate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["translate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["translate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["lightEnabled"], 'description', 'The on/off state of the node. When it is off, the node outputs\nan empty scene.' )
Gaffer.Metadata.registerValue( __children["lightEnabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["lightEnabled"], 'layout:section', 'Settings.light' )
Gaffer.Metadata.registerValue( __children["lightEnabled"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["transform_scale"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["transform_scale"], 'layout:section', 'Settings.light' )
Gaffer.Metadata.registerValue( __children["transform_scale"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["transform_scale"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["transform_scale"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["transform_scale"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["transform_scale"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -195.667587, -138.014465 ) )
__children["Dot"]["__uiInputConnectionsMinimised"].setValue( True )
__children["StandardOptions"]["in"].setInput( __children["Parent"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/inspectionCamera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -201.667587, -133.400909 ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'icon', 'toggleOn.png' )


del __children

