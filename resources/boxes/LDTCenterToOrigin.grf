import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 58, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

__children["Isolate"] = GafferScene.Isolate( "Isolate" )
parent.addChild( __children["Isolate"] )
__children["Isolate"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.AtomicBox3fPlug( "p0", defaultValue = imath.Box3f(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V3fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V3fPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["isolate"] = Gaffer.StringVectorDataPlug( "isolate", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["isolate"] )
__children["Transform1"] = GafferScene.Transform( "Transform1" )
parent.addChild( __children["Transform1"] )
__children["Transform1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["pre_rotate_y"] = Gaffer.FloatPlug( "pre_rotate_y", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["pre_rotate_y"] )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["scene"] = Gaffer.Dot( "scene" )
parent.addChild( __children["scene"] )
__children["scene"].setup( GafferScene.ScenePlug( "in", ) )
__children["scene"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["pre_translate_y"] = Gaffer.FloatPlug( "pre_translate_y", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["pre_translate_y"] )
__children["FreezeTransform1"] = GafferScene.FreezeTransform( "FreezeTransform1" )
parent.addChild( __children["FreezeTransform1"] )
__children["FreezeTransform1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter3"] = GafferScene.PathFilter( "PathFilter3" )
parent.addChild( __children["PathFilter3"] )
__children["PathFilter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SubTree"] = GafferScene.SubTree( "SubTree" )
parent.addChild( __children["SubTree"] )
__children["SubTree"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform2"] = GafferScene.FreezeTransform( "FreezeTransform2" )
parent.addChild( __children["FreezeTransform2"] )
__children["FreezeTransform2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter4"] = GafferScene.PathFilter( "PathFilter4" )
parent.addChild( __children["PathFilter4"] )
__children["PathFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SetFilter"] = GafferScene.SetFilter( "SetFilter" )
parent.addChild( __children["SetFilter"] )
__children["SetFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["UnionFilter"] = GafferScene.UnionFilter( "UnionFilter" )
parent.addChild( __children["UnionFilter"] )
__children["UnionFilter"]["in"].addChild( GafferScene.FilterPlug( "in1", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["UnionFilter"]["in"].addChild( GafferScene.FilterPlug( "in2", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["UnionFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["setExpression"] = Gaffer.StringPlug( "setExpression", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["setExpression"] )
__children["Isolate"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Isolate"]["filter"].setInput( __children["UnionFilter"]["out"] )
__children["Isolate"]["adjustBounds"].setValue( True )
__children["Isolate"]["__uiPosition"].setValue( imath.V2f( 364.343292, -2.6643362 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 1 )
__children["PathFilter"]["paths"].setInput( __children["isolate"] )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 377.176941, 9.60341644 ) )
__children["BoxOut"]["in"].setInput( __children["SubTree"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["BoxOut"]["passThrough"].setInput( __children["Dot1"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 367.343292, -62.0938377 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 364.343292, 25.3882065 ) )
__children["Transform"]["in"].setInput( __children["scene"]["out"] )
__children["Transform"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Transform"]["space"].setValue( 4 )
__children["Transform"]["transform"]["translate"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Transform"]["transform"]["pivot"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( 365.843292, -31.4629669 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["scene"]["out"]["bound"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 355.043854, -26.0637932 ) )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["isolate"], 'description', 'The list of paths to the locations to be matched by the filter.\nA path is formed by a sequence of names separated by \'/\', and\nspecifies the hierarchical position of a location within the scene.\nPaths may use Gaffer\'s standard wildcard characters to match\nmultiple locations.\n\nThe \'*\' wildcard matches any sequence of characters within\nan individual name, but never matches across names separated\nby a \'/\'.\n\n - /robot/*Arm matches /robot/leftArm, /robot/rightArm and\n   /robot/Arm. But does not match /robot/limbs/leftArm or\n   /robot/arm.\n\nThe "..." wildcard matches any sequence of names, and can be\nused to match locations no matter where they are parented in\nthe hierarchy.\n\n - /.../house matches /house, /street/house and /city/street/house.' )
Gaffer.Metadata.registerValue( __children["isolate"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["isolate"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["isolate"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["isolate"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["isolate"], 'layout:index', 3 )
__children["Transform1"]["in"].setInput( __children["Transform"]["out"] )
__children["Transform1"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Transform1"]["space"].setValue( 2 )
__children["Transform1"]["transform"]["translate"]["y"].setInput( __children["pre_translate_y"] )
__children["Transform1"]["transform"]["rotate"]["y"].setInput( __children["pre_rotate_y"] )
__children["Transform1"]["__uiPosition"].setValue( imath.V2f( 365.843292, -39.6270294 ) )
Gaffer.Metadata.registerValue( __children["pre_rotate_y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["pre_rotate_y"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["pre_rotate_y"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["pre_rotate_y"], 'layout:index', 4 )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 410.363373, 17.8882065 ) )
__children["Dot1"]["in"].setInput( __children["Dot"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( 410.363373, -54.5938377 ) )
__children["scene"]["in"].setInput( __children["Group"]["out"] )
__children["scene"]["__uiPosition"].setValue( imath.V2f( 365.843292, -24.1309357 ) )
__children["Group"]["in"][0].setInput( __children["FreezeTransform2"]["out"] )
__children["Group"]["name"].setValue( 'asset' )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 365.843292, -19.2989044 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/asset' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 379.421082, -27.0037327 ) )
Gaffer.Metadata.registerValue( __children["pre_translate_y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["pre_translate_y"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["pre_translate_y"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["pre_translate_y"], 'layout:index', 5 )
__children["FreezeTransform1"]["in"].setInput( __children["Transform1"]["out"] )
__children["FreezeTransform1"]["filter"].setInput( __children["PathFilter3"]["out"] )
__children["FreezeTransform1"]["__uiPosition"].setValue( imath.V2f( 365.843292, -45.2910919 ) )
__children["PathFilter3"]["paths"].setValue( IECore.StringVectorData( [ '/...' ] ) )
__children["PathFilter3"]["__uiPosition"].setValue( imath.V2f( 380.021515, -40.9615326 ) )
__children["SubTree"]["in"].setInput( __children["FreezeTransform1"]["out"] )
__children["SubTree"]["root"].setValue( '/asset' )
__children["SubTree"]["__uiPosition"].setValue( imath.V2f( 365.843292, -50.9551544 ) )
__children["FreezeTransform2"]["in"].setInput( __children["Isolate"]["out"] )
__children["FreezeTransform2"]["filter"].setInput( __children["PathFilter4"]["out"] )
__children["FreezeTransform2"]["__uiPosition"].setValue( imath.V2f( 364.343292, -10.8283987 ) )
__children["PathFilter4"]["paths"].setValue( IECore.StringVectorData( [ '/...' ] ) )
__children["PathFilter4"]["__uiPosition"].setValue( imath.V2f( 381.419952, -6.77509212 ) )
__children["SetFilter"]["setExpression"].setInput( __children["setExpression"] )
__children["SetFilter"]["__uiPosition"].setValue( imath.V2f( 390.31662, 9.60341644 ) )
__children["UnionFilter"]["in"][0].setInput( __children["PathFilter"]["out"] )
__children["UnionFilter"]["in"][1].setInput( __children["SetFilter"]["out"] )
__children["UnionFilter"]["__uiPosition"].setValue( imath.V2f( 380.176941, 1.43935347 ) )
Gaffer.Metadata.registerValue( __children["setExpression"], 'description', 'A set expression that computes a set that defines\nthe locations to be matched.\n\nFor example, the expression "mySpheresSet | myCubesSet"\nwill create a set that contains all objects in\nmySpheresSet and myCubesSet.\n\nGaffer supports the union operator (|) as shown in the\nexample and also provides intersection (&) and difference (-)\noperations for set expressions. Names of locations\ncan be used to represent a set that contains only\nthat one location.\n\nFor more examples please consult the Scripting Reference\nsection in Gaffer\'s documentation.\n\nThe context menu of the set expression text field provides\nentries that help construct set expressions.' )
Gaffer.Metadata.registerValue( __children["setExpression"], 'ui:scene:acceptsSetExpression', True )
Gaffer.Metadata.registerValue( __children["setExpression"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["setExpression"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["setExpression"], 'layout:index', 2 )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import imath\n\nbound = parent["__in"]["p0"]\n\nmove_x = -bound.center()[0]\nmove_y = -bound.center()[1] + (abs(bound.size()[1]/2))\nmove_z = -bound.center()[2]\n\n\n\nparent["__out"]["p1"] = imath.V3f( move_x, move_y, move_z )\nparent["__out"]["p0"] = imath.V3f( move_x, move_y, move_z )' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'icon', 'expansion.png' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )


del __children

