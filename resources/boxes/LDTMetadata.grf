import Gaffer
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 58, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

__children["text"] = GafferImage.Text( "text" )
parent.addChild( __children["text"] )
__children["text"]["user"].addChild( Gaffer.StringVectorDataPlug( "metadataKeys", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["Expression7"] = Gaffer.Expression( "Expression7" )
parent.addChild( __children["Expression7"] )
__children["Expression7"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__in"].addChild( Gaffer.AtomicCompoundDataPlug( "p1", defaultValue = IECore.CompoundData(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 'Hello World', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["user_metadataKeys"] = Gaffer.StringVectorDataPlug( "user_metadataKeys", defaultValue = IECore.StringVectorData( [ 'artist', '/stats/time/render', '/stats/geo/', '/stats/memory/peak', 'rays/camera/pixel', 'samples', 'depth', 'color_space' ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["user_metadataKeys"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["text"]["user"]["metadataKeys"].setInput( __children["user_metadataKeys"] )
Gaffer.Metadata.registerValue( __children["text"]["user"]["metadataKeys"], 'nodule:type', '' )
__children["text"]["out"].setInput( __children["text"]["__merge"]["out"] )
__children["text"]["in"].setInput( __children["BoxIn"]["out"] )
__children["text"]["text"].setInput( __children["Expression7"]["__out"]["p0"] )
__children["text"]["font"].setValue( '/usr/share/fonts/gnu-free/FreeMono.ttf' )
__children["text"]["size"].setValue( imath.V2i( 14, 14 ) )
__children["text"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["text"]["__uiPosition"].setValue( imath.V2f( 260.413757, -121.977249 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
__children["Expression7"]["__in"]["p0"].setInput( __children["text"]["user"]["metadataKeys"] )
__children["Expression7"]["__in"]["p1"].setInput( __children["text"]["in"]["metadata"] )
__children["Expression7"]["__uiPosition"].setValue( imath.V2f( 278.146027, -119.213951 ) )
__children["BoxOut"]["in"].setInput( __children["text"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
__children["BoxOut"]["passThrough"].setInput( __children["BoxIn"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 266.612976, -130.30928 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 265.114563, -113.645218 ) )
Gaffer.Metadata.registerValue( __children["user_metadataKeys"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["user_metadataKeys"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["user_metadataKeys"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["enabled"], 'nodule:type', '' )
__children["Expression7"]["__engine"].setValue( 'python' )
__children["Expression7"]["__expression"].setValue( 'metadata_in = parent["__in"]["p1"]\n\nmetadata_user = parent["__in"]["p0"]\n\nshow_meta = ""\n\nfor each in metadata_user:\n\tfor key in sorted(metadata_in.keys()):\n\t\tif each.lower() in key.lower():\n\t\t\ttemplate = "{:.<32}{:.>11}\\n"\n\t\t\tshow_meta = show_meta + template.format(key,metadata_in[key])\n\tshow_meta = show_meta + "\\n"\n\n\nparent["__out"]["p0"] = show_meta' )
Gaffer.Metadata.registerValue( parent, 'icon', 'info.png' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )


del __children

