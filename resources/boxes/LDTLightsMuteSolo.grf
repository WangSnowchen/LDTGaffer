import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 58, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks_muteLights"] = GafferScene.ShaderTweaks( "ShaderTweaks_muteLights" )
parent.addChild( __children["ShaderTweaks_muteLights"] )
__children["ShaderTweaks_muteLights"]["tweaks"].addChild( GafferScene.TweakPlug( Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "intensity", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks_muteLights"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks_soloLights"] = GafferScene.ShaderTweaks( "ShaderTweaks_soloLights" )
parent.addChild( __children["ShaderTweaks_soloLights"] )
__children["ShaderTweaks_soloLights"]["tweaks"].addChild( GafferScene.TweakPlug( Gaffer.FloatPlug( "value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "intensity", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderTweaks_soloLights"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Set"] = GafferScene.Set( "Set" )
parent.addChild( __children["Set"] )
__children["Set"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SetFilter"] = GafferScene.SetFilter( "SetFilter" )
parent.addChild( __children["SetFilter"] )
__children["SetFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SetFilter1"] = GafferScene.SetFilter( "SetFilter1" )
parent.addChild( __children["SetFilter1"] )
__children["SetFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"] = Gaffer.Switch( "Switch" )
parent.addChild( __children["Switch"] )
__children["Switch"].setup( GafferScene.ScenePlug( "in", ) )
__children["Switch"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Prune"] = GafferScene.Prune( "Prune" )
parent.addChild( __children["Prune"] )
__children["Prune"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch1"] = Gaffer.Switch( "Switch1" )
parent.addChild( __children["Switch1"] )
__children["Switch1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Switch1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Prune1"] = GafferScene.Prune( "Prune1" )
parent.addChild( __children["Prune1"] )
__children["Prune1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot2"] = Gaffer.Dot( "Dot2" )
parent.addChild( __children["Dot2"] )
__children["Dot2"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot3"] = Gaffer.Dot( "Dot3" )
parent.addChild( __children["Dot3"] )
__children["Dot3"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot4"] = Gaffer.Dot( "Dot4" )
parent.addChild( __children["Dot4"] )
__children["Dot4"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch2"] = Gaffer.Switch( "Switch2" )
parent.addChild( __children["Switch2"] )
__children["Switch2"].setup( GafferScene.ScenePlug( "in", ) )
__children["Switch2"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch2"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["mode"] = Gaffer.IntPlug( "mode", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["mode"] )
__children["operation"] = Gaffer.IntPlug( "operation", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["operation"] )
__children["lights"] = Gaffer.StringVectorDataPlug( "lights", defaultValue = IECore.StringVectorData( [ '/moon' ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["lights"] )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 476.095276, -0.699911714 ) )
__children["BoxOut"]["in"].setInput( __children["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
__children["BoxOut"]["passThrough"].setInput( __children["Dot"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 474.595276, -50.4856377 ) )
__children["ShaderTweaks_muteLights"]["in"].setInput( __children["Dot1"]["out"] )
__children["ShaderTweaks_muteLights"]["filter"].setInput( __children["SetFilter"]["out"] )
__children["ShaderTweaks_muteLights"]["shader"].setValue( 'ai:light' )
__children["ShaderTweaks_muteLights"]["ignoreMissing"].setValue( True )
__children["ShaderTweaks_muteLights"]["tweaks"]["intensity"]["name"].setValue( 'intensity' )
__children["ShaderTweaks_muteLights"]["tweaks"]["intensity"]["value"].setValue( 0.0 )
__children["ShaderTweaks_muteLights"]["localise"].setValue( True )
__children["ShaderTweaks_muteLights"]["__uiPosition"].setValue( imath.V2f( 436.418762, -21.1960068 ) )
__children["PathFilter"]["paths"].setInput( __children["lights"] )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 488.118317, -4.84578323 ) )
__children["ShaderTweaks_soloLights"]["in"].setInput( __children["Dot3"]["out"] )
__children["ShaderTweaks_soloLights"]["filter"].setInput( __children["SetFilter1"]["out"] )
__children["ShaderTweaks_soloLights"]["shader"].setValue( 'ai:light' )
__children["ShaderTweaks_soloLights"]["ignoreMissing"].setValue( True )
__children["ShaderTweaks_soloLights"]["tweaks"]["intensity"]["name"].setValue( 'intensity' )
__children["ShaderTweaks_soloLights"]["tweaks"]["intensity"]["value"].setValue( 0.0 )
__children["ShaderTweaks_soloLights"]["localise"].setValue( True )
__children["ShaderTweaks_soloLights"]["__uiPosition"].setValue( imath.V2f( 489.114014, -21.1960011 ) )
__children["Set"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Set"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Set"]["name"].setValue( 'LGT:muteSolo' )
__children["Set"]["__uiPosition"].setValue( imath.V2f( 476.095276, -9.03194332 ) )
__children["SetFilter"]["setExpression"].setValue( 'LGT:muteSolo' )
__children["SetFilter"]["__uiPosition"].setValue( imath.V2f( 465.409607, -17.1207199 ) )
__children["SetFilter1"]["setExpression"].setValue( '__lights - LGT:muteSolo' )
__children["SetFilter1"]["__uiPosition"].setValue( imath.V2f( 526.408875, -17.3092136 ) )
__children["Switch"]["index"].setInput( __children["operation"] )
Gaffer.Metadata.registerValue( __children["Switch"]["in"], 'noduleLayout:section', 'top' )
__children["Switch"]["in"][0].setInput( __children["Switch2"]["out"] )
__children["Switch"]["in"][1].setInput( __children["Switch1"]["out"] )
Gaffer.Metadata.registerValue( __children["Switch"]["out"], 'noduleLayout:section', 'bottom' )
__children["Switch"]["__uiPosition"].setValue( imath.V2f( 473.095276, -37.8973808 ) )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 476.095276, -42.9856377 ) )
__children["Dot"]["__uiInputConnectionsMinimised"].setValue( True )
__children["Prune"]["in"].setInput( __children["Dot4"]["out"] )
__children["Prune"]["filter"].setInput( __children["SetFilter1"]["out"] )
__children["Prune"]["__uiPosition"].setValue( imath.V2f( 506.323334, -21.196003 ) )
__children["Switch1"]["index"].setInput( __children["mode"] )
Gaffer.Metadata.registerValue( __children["Switch1"]["in"], 'noduleLayout:section', 'top' )
__children["Switch1"]["in"][0].setInput( __children["ShaderTweaks_soloLights"]["out"] )
__children["Switch1"]["in"][1].setInput( __children["Prune"]["out"] )
Gaffer.Metadata.registerValue( __children["Switch1"]["out"], 'noduleLayout:section', 'bottom' )
__children["Switch1"]["__uiPosition"].setValue( imath.V2f( 495.56781, -29.7333183 ) )
__children["Prune1"]["in"].setInput( __children["Dot2"]["out"] )
__children["Prune1"]["filter"].setInput( __children["SetFilter"]["out"] )
__children["Prune1"]["__uiPosition"].setValue( imath.V2f( 453.730774, -21.1960049 ) )
__children["Dot1"]["in"].setInput( __children["Set"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( 436.418762, -16.3639755 ) )
__children["Dot2"]["in"].setInput( __children["Set"]["out"] )
__children["Dot2"]["__uiPosition"].setValue( imath.V2f( 453.730774, -16.3639736 ) )
__children["Dot3"]["in"].setInput( __children["Set"]["out"] )
__children["Dot3"]["__uiPosition"].setValue( imath.V2f( 489.114014, -16.3639717 ) )
__children["Dot4"]["in"].setInput( __children["Set"]["out"] )
__children["Dot4"]["__uiPosition"].setValue( imath.V2f( 506.323334, -16.3639736 ) )
__children["Switch2"]["index"].setInput( __children["mode"] )
Gaffer.Metadata.registerValue( __children["Switch2"]["in"], 'noduleLayout:section', 'top' )
__children["Switch2"]["in"][0].setInput( __children["ShaderTweaks_muteLights"]["out"] )
__children["Switch2"]["in"][1].setInput( __children["Prune1"]["out"] )
Gaffer.Metadata.registerValue( __children["Switch2"]["out"], 'noduleLayout:section', 'bottom' )
__children["Switch2"]["__uiPosition"].setValue( imath.V2f( 450.173584, -29.3600693 ) )
Gaffer.Metadata.registerValue( __children["mode"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["mode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["mode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:intensity', 0 )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:prune', 1 )
Gaffer.Metadata.registerValue( __children["operation"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["operation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["operation"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["operation"], 'preset:mute', 0 )
Gaffer.Metadata.registerValue( __children["operation"], 'preset:solo', 1 )
Gaffer.Metadata.registerValue( __children["operation"], 'divider', True )
Gaffer.Metadata.registerValue( __children["lights"], 'description', 'The list of paths to the locations to be matched by the filter.\nA path is formed by a sequence of names separated by \'/\', and\nspecifies the hierarchical position of a location within the scene.\nPaths may use Gaffer\'s standard wildcard characters to match\nmultiple locations.\n\nThe \'*\' wildcard matches any sequence of characters within\nan individual name, but never matches across names separated\nby a \'/\'.\n\n - /robot/*Arm matches /robot/leftArm, /robot/rightArm and\n   /robot/Arm. But does not match /robot/limbs/leftArm or\n   /robot/arm.\n\nThe "..." wildcard matches any sequence of names, and can be\nused to match locations no matter where they are parented in\nthe hierarchy.\n\n - /.../house matches /house, /street/house and /city/street/house.' )
Gaffer.Metadata.registerValue( __children["lights"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["lights"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["lights"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )


del __children

