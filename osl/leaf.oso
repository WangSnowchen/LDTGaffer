OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader leaf
param	point	Vector	0 0 0		%read{18,239} %write{0,0} %initexpr
param	float	BaseAngle	107		%read{3,3} %write{2147483647,-1}
param	float	BaseCurve	0.69999999		%read{11,11} %write{2147483647,-1}
param	float	TipAngle	44		%read{7,7} %write{2147483647,-1}
param	float	TipCurve	1.2		%read{12,14} %write{2147483647,-1}
oparam	float	Leaf	0		%read{2147483647,-1} %write{310,324}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___323_PI	%read{89,100} %write{47,47}
local	float	___323_THIRD	%read{55,100} %write{48,48}
local	float[3]	___323_U	%read{101,121} %write{89,100}
local	float	___323_W	%read{60,144} %write{55,55}
local	float	___323_P	%read{74,165} %write{62,153}
local	float	___323_Q	%read{73,135} %write{72,72}
local	float	___323_DIS	%read{75,166} %write{74,158}
local	float	___323_PHI	%read{89,100} %write{82,82}
local	int	___323_i	%read{89,212} %write{88,212}
local	float	x1	%read{10,10} %write{4,4}
local	float	y1	%read{10,10} %write{4,4}
local	float	x2	%read{12,12} %write{8,8}
local	float	y2	%read{14,14} %write{8,8}
local	point	P0	%read{17,279} %write{9,9}
local	point	P1	%read{23,285} %write{11,11}
local	point	P2	%read{32,291} %write{15,15}
local	point	P3	%read{43,295} %write{16,16}
local	float[4]	tfactor	%read{49,212} %write{20,45}
local	float[3]	t	%read{182,272} %write{106,238}
local	int	nrealroots	%read{182,270} %write{125,238}
local	int	i	%read{216,238} %write{214,238}
local	int	___341_j	%read{216,238} %write{216,238}
local	float	y	%read{240,322} %write{239,242}
local	point	___343_Sy0	%read{298,321} %write{269,269}
local	point	___344_Sy1	%read{297,315} %write{296,296}
temp	float	$tmp1	%read{4,4} %write{3,3}
const	string	$const1	"radians"		%read{1,5} %write{2147483647,-1}
const	float	$const2	3.1415927		%read{2,47} %write{2147483647,-1}
const	float	$const3	180		%read{2,6} %write{2147483647,-1}
temp	float	$tmp2	%read{3,3} %write{2,2}
temp	float	$tmp3	%read{8,8} %write{7,7}
temp	float	$tmp4	%read{7,7} %write{6,6}
const	point	$const4	0 0 0		%read{9,9} %write{2147483647,-1}
temp	point	$tmp5	%read{11,11} %write{10,10}
const	int	$const5	0		%read{17,317} %write{2147483647,-1}
const	float	$const6	0		%read{10,172} %write{2147483647,-1}
const	int	$const7	1		%read{26,324} %write{2147483647,-1}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{15,15} %write{13,13}
const	float	$const8	1		%read{13,287} %write{2147483647,-1}
temp	float	$tmp8	%read{15,15} %write{14,14}
const	point	$const9	1 0 0		%read{16,16} %write{2147483647,-1}
temp	float	$tmp9	%read{19,19} %write{17,17}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	float	$tmp11	%read{20,20} %write{19,19}
const	int	$const10	3		%read{45,203} %write{2147483647,-1}
temp	float	$tmp12	%read{22,22} %write{21,21}
temp	float	$tmp13	%read{25,25} %write{22,22}
const	float	$const11	3		%read{22,288} %write{2147483647,-1}
temp	float	$tmp14	%read{24,24} %write{23,23}
temp	float	$tmp15	%read{25,25} %write{24,24}
temp	float	$tmp16	%read{26,26} %write{25,25}
temp	float	$tmp17	%read{28,28} %write{27,27}
temp	float	$tmp18	%read{31,31} %write{28,28}
temp	float	$tmp19	%read{30,30} %write{29,29}
temp	float	$tmp20	%read{31,31} %write{30,30}
const	float	$const13	6		%read{30,30} %write{2147483647,-1}
temp	float	$tmp21	%read{34,34} %write{31,31}
temp	float	$tmp22	%read{33,33} %write{32,32}
temp	float	$tmp23	%read{34,34} %write{33,33}
temp	float	$tmp24	%read{35,35} %write{34,34}
const	int	$const14	2		%read{35,199} %write{2147483647,-1}
temp	float	$tmp25	%read{39,39} %write{36,36}
temp	float	$tmp26	%read{38,38} %write{37,37}
temp	float	$tmp27	%read{39,39} %write{38,38}
temp	float	$tmp28	%read{42,42} %write{39,39}
temp	float	$tmp29	%read{41,41} %write{40,40}
temp	float	$tmp30	%read{42,42} %write{41,41}
temp	float	$tmp31	%read{44,44} %write{42,42}
temp	float	$tmp32	%read{44,44} %write{43,43}
temp	float	$tmp33	%read{45,45} %write{44,44}
temp	int	$tmp34	%read{2147483647,-1} %write{213,213}
const	string	$const15	"cubic"		%read{46,46} %write{2147483647,-1}
temp	float	$tmp35	%read{50,50} %write{49,49}
temp	int	$tmp36	%read{51,51} %write{50,50}
temp	float	$tmp37	%read{54,54} %write{52,52}
temp	float	$tmp38	%read{54,54} %write{53,53}
temp	float	$tmp39	%read{55,55} %write{54,54}
temp	float	$tmp40	%read{58,58} %write{56,56}
temp	float	$tmp41	%read{58,58} %write{57,57}
temp	float	$tmp42	%read{59,59} %write{58,58}
temp	float	$tmp43	%read{61,61} %write{59,59}
temp	float	$tmp44	%read{61,61} %write{60,60}
const	float	$const16	2		%read{60,200} %write{2147483647,-1}
temp	float	$tmp45	%read{62,62} %write{61,61}
const	float	$const17	-0.5		%read{72,72} %write{2147483647,-1}
temp	float	$tmp46	%read{64,64} %write{63,63}
temp	float	$tmp47	%read{71,71} %write{64,64}
temp	float	$tmp48	%read{66,66} %write{65,65}
temp	float	$tmp49	%read{68,68} %write{66,66}
temp	float	$tmp50	%read{68,68} %write{67,67}
temp	float	$tmp51	%read{70,70} %write{68,68}
temp	float	$tmp52	%read{70,70} %write{69,69}
temp	float	$tmp53	%read{71,71} %write{70,70}
temp	float	$tmp54	%read{72,72} %write{71,71}
temp	float	$tmp55	%read{74,74} %write{73,73}
temp	int	$tmp56	%read{76,76} %write{75,75}
temp	float	$tmp57	%read{82,82} %write{81,81}
temp	float	$tmp58	%read{81,81} %write{80,80}
const	float	$const18	-1		%read{80,80} %write{2147483647,-1}
temp	float	$tmp59	%read{79,79} %write{78,78}
temp	float	$tmp60	%read{78,78} %write{77,77}
temp	float	$tmp61	%read{80,80} %write{79,79}
temp	float	$tmp62	%read{86,86} %write{85,85}
temp	float	$tmp63	%read{85,85} %write{83,83}
const	float	$const19	0.5		%read{84,151} %write{2147483647,-1}
temp	float	$tmp64	%read{85,85} %write{84,84}
temp	int	$tmp65	%read{87,100} %write{88,100}
temp	float	$tmp66	%read{89,100} %write{89,100}
temp	float	$tmp67	%read{89,100} %write{89,100}
temp	float	$tmp68	%read{89,100} %write{89,100}
temp	float	$tmp69	%read{89,100} %write{89,100}
temp	float	$tmp70	%read{89,100} %write{89,100}
temp	float	$tmp71	%read{89,100} %write{89,100}
temp	float	$tmp72	%read{89,100} %write{89,100}
temp	float	$tmp73	%read{89,100} %write{89,100}
temp	int	$tmp74	%read{2147483647,-1} %write{89,100}
temp	float	$tmp75	%read{106,106} %write{105,105}
temp	float	$tmp76	%read{105,105} %write{101,101}
temp	float	$tmp77	%read{105,105} %write{104,104}
temp	float	$tmp78	%read{104,104} %write{102,102}
temp	float	$tmp79	%read{104,104} %write{103,103}
temp	float	$tmp80	%read{118,118} %write{117,117}
temp	float	$tmp81	%read{117,117} %write{109,109}
temp	float	$tmp82	%read{109,109} %write{107,107}
temp	float	$tmp83	%read{109,109} %write{108,108}
temp	float	$tmp84	%read{117,117} %write{116,116}
temp	float	$tmp85	%read{116,116} %write{112,112}
temp	float	$tmp86	%read{112,112} %write{110,110}
temp	float	$tmp87	%read{112,112} %write{111,111}
temp	float	$tmp88	%read{116,116} %write{115,115}
temp	float	$tmp89	%read{115,115} %write{113,113}
temp	float	$tmp90	%read{115,115} %write{114,114}
temp	float	$tmp91	%read{124,124} %write{123,123}
temp	float	$tmp92	%read{123,123} %write{119,119}
temp	float	$tmp93	%read{123,123} %write{122,122}
temp	float	$tmp94	%read{122,122} %write{120,120}
temp	float	$tmp95	%read{122,122} %write{121,121}
temp	float	$tmp96	%read{143,143} %write{134,134}
temp	float	$tmp97	%read{129,133} %write{127,127}
const	string	$const20	"CBRT"		%read{128,136} %write{2147483647,-1}
temp	float	$tmp98	%read{134,134} %write{132,132}
temp	float	$tmp99	%read{132,132} %write{131,131}
temp	float	$tmp100	%read{131,131} %write{129,129}
temp	float	$tmp101	%read{131,131} %write{130,130}
temp	float	$tmp102	%read{134,134} %write{133,133}
temp	float	$tmp103	%read{143,143} %write{142,142}
temp	float	$tmp104	%read{137,141} %write{135,135}
temp	float	$tmp105	%read{142,142} %write{140,140}
temp	float	$tmp106	%read{140,140} %write{139,139}
temp	float	$tmp107	%read{139,139} %write{137,137}
temp	float	$tmp108	%read{139,139} %write{138,138}
temp	float	$tmp109	%read{142,142} %write{141,141}
temp	float	$tmp110	%read{144,144} %write{143,143}
temp	float	$tmp111	%read{145,145} %write{144,144}
temp	float	$tmp112	%read{148,148} %write{147,147}
temp	int	$tmp113	%read{149,149} %write{148,148}
temp	float	$tmp114	%read{151,151} %write{150,150}
temp	float	$tmp115	%read{153,153} %write{151,151}
temp	float	$tmp116	%read{153,153} %write{152,152}
temp	float	$tmp117	%read{158,158} %write{154,154}
temp	float	$tmp118	%read{157,157} %write{155,155}
temp	float	$tmp119	%read{157,157} %write{156,156}
temp	float	$tmp120	%read{158,158} %write{157,157}
temp	int	$tmp121	%read{160,160} %write{159,159}
temp	float	$tmp122	%read{163,163} %write{161,161}
temp	float	$tmp123	%read{163,163} %write{162,162}
temp	float	$tmp124	%read{164,164} %write{163,163}
temp	float	$tmp125	%read{167,167} %write{165,165}
temp	float	$tmp126	%read{167,167} %write{166,166}
temp	float	$tmp127	%read{168,168} %write{167,167}
temp	float	$tmp128	%read{172,172} %write{171,171}
temp	int	$tmp129	%read{173,173} %write{172,172}
temp	float	$tmp130	%read{176,176} %write{174,174}
temp	float	$tmp131	%read{176,176} %write{175,175}
temp	float	$tmp132	%read{177,177} %write{176,176}
temp	int	$tmp133	%read{180,212} %write{181,212}
temp	float	$tmp134	%read{182,212} %write{182,212}
temp	float	$tmp135	%read{182,212} %write{182,212}
temp	float	$tmp136	%read{182,212} %write{182,212}
temp	float	$tmp137	%read{182,212} %write{182,212}
temp	float	$tmp138	%read{182,212} %write{182,212}
temp	float	$tmp139	%read{182,212} %write{182,212}
temp	float	$tmp140	%read{182,212} %write{182,212}
temp	float	$tmp141	%read{182,212} %write{182,212}
temp	float	$tmp142	%read{182,212} %write{182,212}
temp	float	$tmp143	%read{182,212} %write{182,212}
temp	float	$tmp144	%read{182,212} %write{182,212}
temp	float	$tmp145	%read{182,212} %write{182,212}
temp	float	$tmp146	%read{182,212} %write{182,212}
temp	float	$tmp147	%read{182,212} %write{182,212}
temp	float	$tmp148	%read{182,212} %write{182,212}
temp	float	$tmp149	%read{182,212} %write{182,212}
temp	float	$tmp150	%read{182,212} %write{182,212}
temp	float	$tmp151	%read{182,212} %write{182,212}
temp	float	$tmp152	%read{182,212} %write{182,212}
temp	float	$tmp153	%read{182,212} %write{182,212}
temp	float	$tmp154	%read{182,212} %write{182,212}
temp	float	$tmp155	%read{182,212} %write{182,212}
temp	float	$tmp156	%read{182,212} %write{182,212}
temp	float	$tmp157	%read{182,212} %write{182,212}
temp	float	$tmp158	%read{182,212} %write{182,212}
temp	float	$tmp159	%read{182,212} %write{182,212}
temp	float	$tmp160	%read{182,212} %write{182,212}
temp	int	$tmp161	%read{2147483647,-1} %write{182,212}
temp	int	$tmp162	%read{215,238} %write{216,238}
temp	float	$tmp163	%read{216,238} %write{216,238}
temp	int	$tmp164	%read{216,238} %write{216,238}
temp	int	$tmp165	%read{216,238} %write{216,238}
temp	float	$tmp166	%read{216,238} %write{216,238}
temp	int	$tmp167	%read{216,238} %write{216,238}
temp	int	$tmp168	%read{216,238} %write{216,238}
temp	int	$tmp169	%read{216,238} %write{216,238}
temp	int	$tmp170	%read{216,238} %write{216,238}
temp	int	$tmp171	%read{216,238} %write{216,238}
temp	float	$tmp172	%read{216,238} %write{216,238}
temp	int	$tmp173	%read{2147483647,-1} %write{216,238}
temp	int	$tmp174	%read{2147483647,-1} %write{216,238}
temp	int	$tmp175	%read{2147483647,-1} %write{216,238}
temp	int	$tmp176	%read{241,241} %write{240,240}
temp	int	$tmp177	%read{244,244} %write{243,243}
temp	float	$tmp178	%read{247,267} %write{245,245}
const	string	$const21	"cubicspline"		%read{246,273} %write{2147483647,-1}
temp	float	$tmp179	%read{249,249} %write{247,247}
temp	float	$tmp180	%read{249,249} %write{248,248}
temp	float	$tmp181	%read{251,251} %write{249,249}
temp	float	$tmp182	%read{251,251} %write{250,250}
temp	float	$tmp183	%read{252,252} %write{251,251}
temp	point	$tmp184	%read{259,259} %write{252,252}
temp	float	$tmp185	%read{254,254} %write{253,253}
temp	float	$tmp186	%read{256,256} %write{254,254}
temp	float	$tmp187	%read{256,256} %write{255,255}
temp	float	$tmp188	%read{257,257} %write{256,256}
temp	float	$tmp189	%read{258,258} %write{257,257}
temp	point	$tmp190	%read{259,259} %write{258,258}
temp	point	$tmp191	%read{265,265} %write{259,259}
temp	float	$tmp192	%read{261,261} %write{260,260}
temp	float	$tmp193	%read{262,262} %write{261,261}
temp	float	$tmp194	%read{263,263} %write{262,262}
temp	float	$tmp195	%read{264,264} %write{263,263}
temp	point	$tmp196	%read{265,265} %write{264,264}
temp	point	$tmp197	%read{269,269} %write{265,265}
temp	float	$tmp198	%read{267,267} %write{266,266}
temp	float	$tmp199	%read{268,268} %write{267,267}
temp	point	$tmp200	%read{269,269} %write{268,268}
temp	int	$tmp201	%read{271,271} %write{270,270}
temp	float	$tmp202	%read{274,294} %write{272,272}
temp	float	$tmp203	%read{276,276} %write{274,274}
temp	float	$tmp204	%read{276,276} %write{275,275}
temp	float	$tmp205	%read{278,278} %write{276,276}
temp	float	$tmp206	%read{278,278} %write{277,277}
temp	float	$tmp207	%read{279,279} %write{278,278}
temp	point	$tmp208	%read{286,286} %write{279,279}
temp	float	$tmp209	%read{281,281} %write{280,280}
temp	float	$tmp210	%read{283,283} %write{281,281}
temp	float	$tmp211	%read{283,283} %write{282,282}
temp	float	$tmp212	%read{284,284} %write{283,283}
temp	float	$tmp213	%read{285,285} %write{284,284}
temp	point	$tmp214	%read{286,286} %write{285,285}
temp	point	$tmp215	%read{292,292} %write{286,286}
temp	float	$tmp216	%read{288,288} %write{287,287}
temp	float	$tmp217	%read{289,289} %write{288,288}
temp	float	$tmp218	%read{290,290} %write{289,289}
temp	float	$tmp219	%read{291,291} %write{290,290}
temp	point	$tmp220	%read{292,292} %write{291,291}
temp	point	$tmp221	%read{296,296} %write{292,292}
temp	float	$tmp222	%read{294,294} %write{293,293}
temp	float	$tmp223	%read{295,295} %write{294,294}
temp	point	$tmp224	%read{296,296} %write{295,295}
temp	float	$tmp225	%read{299,299} %write{297,297}
temp	float	$tmp226	%read{299,299} %write{298,298}
temp	int	$tmp227	%read{300,300} %write{299,299}
temp	float	$tmp228	%read{302,302} %write{301,301}
temp	int	$tmp229	%read{303,303} %write{302,302}
temp	int	$tmp230	%read{304,309} %write{303,308}
temp	float	$tmp231	%read{306,306} %write{305,305}
temp	int	$tmp232	%read{307,307} %write{306,306}
temp	int	$tmp233	%read{308,308} %write{307,307}
temp	float	$tmp234	%read{312,312} %write{311,311}
temp	int	$tmp235	%read{313,313} %write{312,312}
temp	int	$tmp236	%read{314,319} %write{313,318}
temp	float	$tmp237	%read{316,316} %write{315,315}
temp	int	$tmp238	%read{317,317} %write{316,316}
temp	int	$tmp239	%read{318,318} %write{317,317}
temp	float	$tmp240	%read{322,322} %write{321,321}
temp	int	$tmp241	%read{323,323} %write{322,322}
code Vector
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:16
#         float BaseAngle = 107.0,
	assign		Vector P 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{16} %argrw{"wr"}
code ___main___
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:25
#     sincos(radians(TipAngle),y2,x2);
	functioncall	$const1 4 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{25} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp2 $const2 $const3 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp1 BaseAngle $tmp2 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:25
#     sincos(radians(TipAngle),y2,x2);
	sincos		$tmp1 y1 x1 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{25} %argrw{"rww"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:26
#     point P0 = point(0, 0, 0);
	functioncall	$const1 8 	%line{26} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp4 $const2 $const3 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp3 TipAngle $tmp4 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:26
#     point P0 = point(0, 0, 0);
	sincos		$tmp3 y2 x2 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{26} %argrw{"rww"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:27
#     point P1 = point(x1, y1, 0)*BaseCurve;
	assign		P0 $const4 	%line{27} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:28
#     point P2 = point(1-x2*TipCurve, y2*TipCurve, 0);
	point		$tmp5 x1 y1 $const6 	%line{28} %argrw{"wrrr"}
	mul		P1 $tmp5 BaseCurve 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:29
#     point P3 = point(1, 0, 0);
	mul		$tmp6 x2 TipCurve 	%line{29} %argrw{"wrr"}
	sub		$tmp7 $const8 $tmp6 	%argrw{"wrr"}
	mul		$tmp8 y2 TipCurve 	%argrw{"wrr"}
	point		P2 $tmp7 $tmp8 $const6 	%argrw{"wrrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:30
# 
	assign		P3 $const9 	%line{30} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:35
#                         3*P0[0]+3*P1[0],
	compref		$tmp9 P0 $const5 	%line{35} %argrw{"wrr"}
	compref		$tmp10 Vector $const5 	%argrw{"wrr"}
	sub		$tmp11 $tmp9 $tmp10 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:38
#     float t[3];
	aassign		tfactor $const5 $tmp11 	%line{38} %argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:36
#                         3*P0[0]-6*P1[0]+3*P2[0],
	compref		$tmp12 P0 $const5 	%line{36} %argrw{"wrr"}
	mul		$tmp13 $const11 $tmp12 	%argrw{"wrr"}
	compref		$tmp14 P1 $const5 	%argrw{"wrr"}
	mul		$tmp15 $const11 $tmp14 	%argrw{"wrr"}
	add		$tmp16 $tmp13 $tmp15 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:38
#     float t[3];
	aassign		tfactor $const7 $tmp16 	%line{38} %argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:37
#                         P0[0]+3*P1[0]-3*P2[0]+P3[0] };
	compref		$tmp17 P0 $const5 	%line{37} %argrw{"wrr"}
	mul		$tmp18 $const11 $tmp17 	%argrw{"wrr"}
	compref		$tmp19 P1 $const5 	%argrw{"wrr"}
	mul		$tmp20 $const13 $tmp19 	%argrw{"wrr"}
	sub		$tmp21 $tmp18 $tmp20 	%argrw{"wrr"}
	compref		$tmp22 P2 $const5 	%argrw{"wrr"}
	mul		$tmp23 $const11 $tmp22 	%argrw{"wrr"}
	add		$tmp24 $tmp21 $tmp23 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:38
#     float t[3];
	aassign		tfactor $const14 $tmp24 	%line{38} %argrw{"wrr"}
	compref		$tmp25 P0 $const5 	%argrw{"wrr"}
	compref		$tmp26 P1 $const5 	%argrw{"wrr"}
	mul		$tmp27 $const11 $tmp26 	%argrw{"wrr"}
	add		$tmp28 $tmp25 $tmp27 	%argrw{"wrr"}
	compref		$tmp29 P2 $const5 	%argrw{"wrr"}
	mul		$tmp30 $const11 $tmp29 	%argrw{"wrr"}
	sub		$tmp31 $tmp28 $tmp30 	%argrw{"wrr"}
	compref		$tmp32 P3 $const5 	%argrw{"wrr"}
	add		$tmp33 $tmp31 $tmp32 	%argrw{"wrr"}
	aassign		tfactor $const10 $tmp33 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:41
# 
	functioncall	$const15 214 	%line{41} %argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:39
#     float PI = 3.1415926535897932;
	assign		___323_PI $const2 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MAEquations.h"} %line{39} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:40
#     float THIRD = 1./3.;
	div		___323_THIRD $const8 $const11 	%line{40} %argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:46
#     if (A[3] != 0.0)
	aref		$tmp35 tfactor $const10 	%line{46} %argrw{"wrr"}
	neq		$tmp36 $tmp35 $const6 	%argrw{"wrr"}
	if		$tmp36 147 180 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:49
#         W = A[2]/A[3]*THIRD;
	aref		$tmp37 tfactor $const14 	%line{49} %argrw{"wrr"}
	aref		$tmp38 tfactor $const10 	%argrw{"wrr"}
	div		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
	mul		___323_W $tmp39 ___323_THIRD 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:50
#         P = pow((A[1]/A[3]*THIRD - pow(W,2)),3);
	aref		$tmp40 tfactor $const7 	%line{50} %argrw{"wrr"}
	aref		$tmp41 tfactor $const10 	%argrw{"wrr"}
	div		$tmp42 $tmp40 $tmp41 	%argrw{"wrr"}
	mul		$tmp43 $tmp42 ___323_THIRD 	%argrw{"wrr"}
	pow		$tmp44 ___323_W $const16 	%argrw{"wrr"}
	sub		$tmp45 $tmp43 $tmp44 	%argrw{"wrr"}
	pow		___323_P $tmp45 $const11 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:51
#         Q = -.5*(2.0*pow(W,3)-(A[1]*W-A[0])/A[3] );
	pow		$tmp46 ___323_W $const11 	%line{51} %argrw{"wrr"}
	mul		$tmp47 $const16 $tmp46 	%argrw{"wrr"}
	aref		$tmp48 tfactor $const7 	%argrw{"wrr"}
	mul		$tmp49 $tmp48 ___323_W 	%argrw{"wrr"}
	aref		$tmp50 tfactor $const5 	%argrw{"wrr"}
	sub		$tmp51 $tmp49 $tmp50 	%argrw{"wrr"}
	aref		$tmp52 tfactor $const10 	%argrw{"wrr"}
	div		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	sub		$tmp54 $tmp47 $tmp53 	%argrw{"wrr"}
	mul		___323_Q $const17 $tmp54 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:52
#         DIS = pow(Q,2)+P;
	pow		$tmp55 ___323_Q $const16 	%line{52} %argrw{"wrr"}
	add		___323_DIS $tmp55 ___323_P 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:53
#         if ( DIS < 0.0 )
	lt		$tmp56 ___323_DIS $const6 	%line{53} %argrw{"wrr"}
	if		$tmp56 126 147 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:57
#             PHI = acos(min(1.0,max(-1.0,Q/sqrt(-P))));
	neg		$tmp60 ___323_P 	%line{57} %argrw{"wr"}
	sqrt		$tmp59 $tmp60 	%argrw{"wr"}
	div		$tmp61 ___323_Q $tmp59 	%argrw{"wrr"}
	max		$tmp58 $const18 $tmp61 	%argrw{"wrr"}
	min		$tmp57 $const8 $tmp58 	%argrw{"wrr"}
	acos		___323_PHI $tmp57 	%argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:58
#             P=2.0*pow((-P),(5.e-1*THIRD));
	neg		$tmp63 ___323_P 	%line{58} %argrw{"wr"}
	mul		$tmp64 $const19 ___323_THIRD 	%argrw{"wrr"}
	pow		$tmp62 $tmp63 $tmp64 	%argrw{"wrr"}
	mul		___323_P $const16 $tmp62 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:59
#             for (i=0;i<3;i++)
	for		$tmp65 89 90 99 101 	%line{59} %argrw{"r"}
	assign		___323_i $const5 	%argrw{"wr"}
	lt		$tmp65 ___323_i $const10 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:60
#                 U[i] = P*cos((PHI+2*((float)i)*PI)*THIRD)-W;
	assign		$tmp67 ___323_i 	%line{60} %argrw{"wr"}
	mul		$tmp68 $const16 $tmp67 	%argrw{"wrr"}
	mul		$tmp69 $tmp68 ___323_PI 	%argrw{"wrr"}
	add		$tmp70 ___323_PHI $tmp69 	%argrw{"wrr"}
	mul		$tmp71 $tmp70 ___323_THIRD 	%argrw{"wrr"}
	cos		$tmp66 $tmp71 	%argrw{"wr"}
	mul		$tmp72 ___323_P $tmp66 	%argrw{"wrr"}
	sub		$tmp73 $tmp72 ___323_W 	%argrw{"wrr"}
	aassign		___323_U ___323_i $tmp73 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:59
#             for (i=0;i<3;i++)
	assign		$tmp74 ___323_i 	%line{59} %argrw{"wr"}
	add		___323_i ___323_i $const7 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:61
#             X[0] = min(U[0], min(U[1], U[2]));
	aref		$tmp76 ___323_U $const5 	%line{61} %argrw{"wrr"}
	aref		$tmp78 ___323_U $const7 	%argrw{"wrr"}
	aref		$tmp79 ___323_U $const14 	%argrw{"wrr"}
	min		$tmp77 $tmp78 $tmp79 	%argrw{"wrr"}
	min		$tmp75 $tmp76 $tmp77 	%argrw{"wrr"}
	aassign		t $const5 $tmp75 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:62
#             X[1] = max(min(U[0], U[1]),max( min(U[0], U[2]), min(U[1], U[2])));
	aref		$tmp82 ___323_U $const5 	%line{62} %argrw{"wrr"}
	aref		$tmp83 ___323_U $const7 	%argrw{"wrr"}
	min		$tmp81 $tmp82 $tmp83 	%argrw{"wrr"}
	aref		$tmp86 ___323_U $const5 	%argrw{"wrr"}
	aref		$tmp87 ___323_U $const14 	%argrw{"wrr"}
	min		$tmp85 $tmp86 $tmp87 	%argrw{"wrr"}
	aref		$tmp89 ___323_U $const7 	%argrw{"wrr"}
	aref		$tmp90 ___323_U $const14 	%argrw{"wrr"}
	min		$tmp88 $tmp89 $tmp90 	%argrw{"wrr"}
	max		$tmp84 $tmp85 $tmp88 	%argrw{"wrr"}
	max		$tmp80 $tmp81 $tmp84 	%argrw{"wrr"}
	aassign		t $const7 $tmp80 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:63
#             X[2] = max(U[0], max(U[1], U[2]));
	aref		$tmp92 ___323_U $const5 	%line{63} %argrw{"wrr"}
	aref		$tmp94 ___323_U $const7 	%argrw{"wrr"}
	aref		$tmp95 ___323_U $const14 	%argrw{"wrr"}
	max		$tmp93 $tmp94 $tmp95 	%argrw{"wrr"}
	max		$tmp91 $tmp92 $tmp93 	%argrw{"wrr"}
	aassign		t $const14 $tmp91 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:64
#             L = 3;
	assign		nrealroots $const10 	%line{64} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:69
#             DIS = sqrt(DIS);
	sqrt		___323_DIS ___323_DIS 	%line{69} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:70
#             X[0] = CBRT(Q+DIS)+CBRT(Q-DIS)-W;
	add		$tmp97 ___323_Q ___323_DIS 	%line{70} %argrw{"wrr"}
	functioncall	$const20 135 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:15
# float CBRT(float Z) { return abs(pow(abs(Z),1.0/3.0)) * sign(Z); }
	abs		$tmp100 $tmp97 	%line{15} %argrw{"wr"}
	div		$tmp101 $const8 $const11 	%argrw{"wrr"}
	pow		$tmp99 $tmp100 $tmp101 	%argrw{"wrr"}
	abs		$tmp98 $tmp99 	%argrw{"wr"}
	sign		$tmp102 $tmp97 	%argrw{"wr"}
	mul		$tmp96 $tmp98 $tmp102 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:70
#             X[0] = CBRT(Q+DIS)+CBRT(Q-DIS)-W;
	sub		$tmp104 ___323_Q ___323_DIS 	%line{70} %argrw{"wrr"}
	functioncall	$const20 143 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:15
# float CBRT(float Z) { return abs(pow(abs(Z),1.0/3.0)) * sign(Z); }
	abs		$tmp107 $tmp104 	%line{15} %argrw{"wr"}
	div		$tmp108 $const8 $const11 	%argrw{"wrr"}
	pow		$tmp106 $tmp107 $tmp108 	%argrw{"wrr"}
	abs		$tmp105 $tmp106 	%argrw{"wr"}
	sign		$tmp109 $tmp104 	%argrw{"wr"}
	mul		$tmp103 $tmp105 $tmp109 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:70
#             X[0] = CBRT(Q+DIS)+CBRT(Q-DIS)-W;
	add		$tmp110 $tmp96 $tmp103 	%line{70} %argrw{"wrr"}
	sub		$tmp111 $tmp110 ___323_W 	%argrw{"wrr"}
	aassign		t $const5 $tmp111 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:71
#             L=1;
	assign		nrealroots $const7 	%line{71} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:74
#     else if (A[2] != 0.0)
	aref		$tmp112 tfactor $const14 	%line{74} %argrw{"wrr"}
	neq		$tmp113 $tmp112 $const6 	%argrw{"wrr"}
	if		$tmp113 171 180 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:77
#         P = 0.5*A[1]/A[2];
	aref		$tmp114 tfactor $const7 	%line{77} %argrw{"wrr"}
	mul		$tmp115 $const19 $tmp114 	%argrw{"wrr"}
	aref		$tmp116 tfactor $const14 	%argrw{"wrr"}
	div		___323_P $tmp115 $tmp116 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:78
#         DIS = pow(P,2)-A[0]/A[2];
	pow		$tmp117 ___323_P $const16 	%line{78} %argrw{"wrr"}
	aref		$tmp118 tfactor $const5 	%argrw{"wrr"}
	aref		$tmp119 tfactor $const14 	%argrw{"wrr"}
	div		$tmp120 $tmp118 $tmp119 	%argrw{"wrr"}
	sub		___323_DIS $tmp117 $tmp120 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:79
#         if (DIS > 0.0)
	gt		$tmp121 ___323_DIS $const6 	%line{79} %argrw{"wrr"}
	if		$tmp121 170 171 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:82
#             X[0] = -P - sqrt(DIS);
	neg		$tmp122 ___323_P 	%line{82} %argrw{"wr"}
	sqrt		$tmp123 ___323_DIS 	%argrw{"wr"}
	sub		$tmp124 $tmp122 $tmp123 	%argrw{"wrr"}
	aassign		t $const5 $tmp124 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:83
#             X[1] = -P + sqrt(DIS);
	neg		$tmp125 ___323_P 	%line{83} %argrw{"wr"}
	sqrt		$tmp126 ___323_DIS 	%argrw{"wr"}
	add		$tmp127 $tmp125 $tmp126 	%argrw{"wrr"}
	aassign		t $const7 $tmp127 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:84
#             L=2;
	assign		nrealroots $const14 	%line{84} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:89
#             L=0;
	assign		nrealroots $const5 	%line{89} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:92
#     else if (A[1] != 0.0)
	aref		$tmp128 tfactor $const7 	%line{92} %argrw{"wrr"}
	neq		$tmp129 $tmp128 $const6 	%argrw{"wrr"}
	if		$tmp129 179 180 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:95
#         X[0] =A[0]/A[1];
	aref		$tmp130 tfactor $const5 	%line{95} %argrw{"wrr"}
	aref		$tmp131 tfactor $const7 	%argrw{"wrr"}
	div		$tmp132 $tmp130 $tmp131 	%argrw{"wrr"}
	aassign		t $const5 $tmp132 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:96
#         L=1;
	assign		nrealroots $const7 	%line{96} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:101
#         L=0;
	assign		nrealroots $const5 	%line{101} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:107
#     for (i=0;i < L;i++)
	for		$tmp133 182 183 211 213 	%line{107} %argrw{"r"}
	assign		___323_i $const5 	%argrw{"wr"}
	lt		$tmp133 ___323_i nrealroots 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:109
#         X[i] = X[i] - (A[0]+X[i]*(A[1]+X[i]*(A[2]+X[i]*A[3])))
	aref		$tmp134 t ___323_i 	%line{109} %argrw{"wrr"}
	aref		$tmp135 tfactor $const5 	%argrw{"wrr"}
	aref		$tmp136 t ___323_i 	%argrw{"wrr"}
	aref		$tmp137 tfactor $const7 	%argrw{"wrr"}
	aref		$tmp138 t ___323_i 	%argrw{"wrr"}
	aref		$tmp139 tfactor $const14 	%argrw{"wrr"}
	aref		$tmp140 t ___323_i 	%argrw{"wrr"}
	aref		$tmp141 tfactor $const10 	%argrw{"wrr"}
	mul		$tmp142 $tmp140 $tmp141 	%argrw{"wrr"}
	add		$tmp143 $tmp139 $tmp142 	%argrw{"wrr"}
	mul		$tmp144 $tmp138 $tmp143 	%argrw{"wrr"}
	add		$tmp145 $tmp137 $tmp144 	%argrw{"wrr"}
	mul		$tmp146 $tmp136 $tmp145 	%argrw{"wrr"}
	add		$tmp147 $tmp135 $tmp146 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:110
#             /(A[1]+X[i]*(2.0*A[2]+X[i]*3.0*A[3]));
	aref		$tmp148 tfactor $const7 	%line{110} %argrw{"wrr"}
	aref		$tmp149 t ___323_i 	%argrw{"wrr"}
	aref		$tmp150 tfactor $const14 	%argrw{"wrr"}
	mul		$tmp151 $const16 $tmp150 	%argrw{"wrr"}
	aref		$tmp152 t ___323_i 	%argrw{"wrr"}
	mul		$tmp153 $tmp152 $const11 	%argrw{"wrr"}
	aref		$tmp154 tfactor $const10 	%argrw{"wrr"}
	mul		$tmp155 $tmp153 $tmp154 	%argrw{"wrr"}
	add		$tmp156 $tmp151 $tmp155 	%argrw{"wrr"}
	mul		$tmp157 $tmp149 $tmp156 	%argrw{"wrr"}
	add		$tmp158 $tmp148 $tmp157 	%argrw{"wrr"}
	div		$tmp159 $tmp147 $tmp158 	%argrw{"wrr"}
	sub		$tmp160 $tmp134 $tmp159 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:109
#         X[i] = X[i] - (A[0]+X[i]*(A[1]+X[i]*(A[2]+X[i]*A[3])))
	aassign		t ___323_i $tmp160 	%line{109} %argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:107
#     for (i=0;i < L;i++)
	assign		$tmp161 ___323_i 	%line{107} %argrw{"wr"}
	add		___323_i ___323_i $const7 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:113
#     return 0;
	assign		$tmp34 $const5 	%line{113} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:45
#     while(i < nrealroots){
	assign		i $const5 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{45} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:46
#         if ((t[i] < 0) || (t[i] > 1)) {
	while		$tmp162 216 217 239 239 	%line{46} %argrw{"r"}
	lt		$tmp162 i nrealroots 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:47
#             int j=i;
	aref		$tmp163 t i 	%line{47} %argrw{"wrr"}
	lt		$tmp164 $tmp163 $const5 	%argrw{"wrr"}
	neq		$tmp165 $tmp164 $const5 	%argrw{"wrr"}
	if		$tmp165 221 225 	%argrw{"r"}
	aref		$tmp166 t i 	%argrw{"wrr"}
	gt		$tmp167 $tmp166 $const7 	%argrw{"wrr"}
	neq		$tmp168 $tmp167 $const5 	%argrw{"wrr"}
	assign		$tmp165 $tmp168 	%argrw{"wr"}
	if		$tmp165 237 237 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:48
#             while(j < (nrealroots-1)){
	assign		___341_j i 	%line{48} %argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:49
#                 t[j]=t[j+1];
	while		$tmp170 228 230 235 235 	%line{49} %argrw{"r"}
	sub		$tmp169 nrealroots $const7 	%argrw{"wrr"}
	lt		$tmp170 ___341_j $tmp169 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:50
#                 j++;
	add		$tmp171 ___341_j $const7 	%line{50} %argrw{"wrr"}
	aref		$tmp172 t $tmp171 	%argrw{"wrr"}
	aassign		t ___341_j $tmp172 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:51
#             }
	assign		$tmp173 ___341_j 	%line{51} %argrw{"wr"}
	add		___341_j ___341_j $const7 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:53
#         }
	assign		$tmp174 nrealroots 	%line{53} %argrw{"wr"}
	sub		nrealroots nrealroots $const7 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:55
#     }
	assign		$tmp175 i 	%line{55} %argrw{"wr"}
	add		i i $const7 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:66
#     if(y<0) y = -y;
	compref		y Vector $const7 	%line{66} %argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:67
# 
	lt		$tmp176 y $const5 	%line{67} %argrw{"wrr"}
	if		$tmp176 243 243 	%argrw{"r"}
	neg		y y 	%argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:69
#         point Sy0 = cubicspline(t[0],P0,P1,P2,P3);
	gt		$tmp177 nrealroots $const5 	%line{69} %argrw{"wrr"}
	if		$tmp177 325 325 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:70
#         if(nrealroots > 1){
	aref		$tmp178 t $const5 	%line{70} %argrw{"wrr"}
	functioncall	$const21 270 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:119
#     return (1-t)*(1-t)*(1-t)*P0
	sub		$tmp179 $const8 $tmp178 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MAEquations.h"} %line{119} %argrw{"wrr"}
	sub		$tmp180 $const8 $tmp178 	%argrw{"wrr"}
	mul		$tmp181 $tmp179 $tmp180 	%argrw{"wrr"}
	sub		$tmp182 $const8 $tmp178 	%argrw{"wrr"}
	mul		$tmp183 $tmp181 $tmp182 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:120
#             + 3*(1-t)*(1-t)*t*P1
	mul		$tmp184 $tmp183 P0 	%line{120} %argrw{"wrr"}
	sub		$tmp185 $const8 $tmp178 	%argrw{"wrr"}
	mul		$tmp186 $const11 $tmp185 	%argrw{"wrr"}
	sub		$tmp187 $const8 $tmp178 	%argrw{"wrr"}
	mul		$tmp188 $tmp186 $tmp187 	%argrw{"wrr"}
	mul		$tmp189 $tmp188 $tmp178 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:121
#             + 3*(1-t)*t*t*P2
	mul		$tmp190 $tmp189 P1 	%line{121} %argrw{"wrr"}
	add		$tmp191 $tmp184 $tmp190 	%argrw{"wrr"}
	sub		$tmp192 $const8 $tmp178 	%argrw{"wrr"}
	mul		$tmp193 $const11 $tmp192 	%argrw{"wrr"}
	mul		$tmp194 $tmp193 $tmp178 	%argrw{"wrr"}
	mul		$tmp195 $tmp194 $tmp178 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:122
#             + t*t*t*P3;
	mul		$tmp196 $tmp195 P2 	%line{122} %argrw{"wrr"}
	add		$tmp197 $tmp191 $tmp196 	%argrw{"wrr"}
	mul		$tmp198 $tmp178 $tmp178 	%argrw{"wrr"}
	mul		$tmp199 $tmp198 $tmp178 	%argrw{"wrr"}
	mul		$tmp200 $tmp199 P3 	%argrw{"wrr"}
	add		___343_Sy0 $tmp197 $tmp200 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:71
#             // if we have 2 roots we calculate and order the y values
	gt		$tmp201 nrealroots $const7 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{71} %argrw{"wrr"}
	if		$tmp201 321 325 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:74
#             if ( Sy1[1] < Sy0[1] ){
	aref		$tmp202 t $const7 	%line{74} %argrw{"wrr"}
	functioncall	$const21 297 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:119
#     return (1-t)*(1-t)*(1-t)*P0
	sub		$tmp203 $const8 $tmp202 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MAEquations.h"} %line{119} %argrw{"wrr"}
	sub		$tmp204 $const8 $tmp202 	%argrw{"wrr"}
	mul		$tmp205 $tmp203 $tmp204 	%argrw{"wrr"}
	sub		$tmp206 $const8 $tmp202 	%argrw{"wrr"}
	mul		$tmp207 $tmp205 $tmp206 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:120
#             + 3*(1-t)*(1-t)*t*P1
	mul		$tmp208 $tmp207 P0 	%line{120} %argrw{"wrr"}
	sub		$tmp209 $const8 $tmp202 	%argrw{"wrr"}
	mul		$tmp210 $const11 $tmp209 	%argrw{"wrr"}
	sub		$tmp211 $const8 $tmp202 	%argrw{"wrr"}
	mul		$tmp212 $tmp210 $tmp211 	%argrw{"wrr"}
	mul		$tmp213 $tmp212 $tmp202 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:121
#             + 3*(1-t)*t*t*P2
	mul		$tmp214 $tmp213 P1 	%line{121} %argrw{"wrr"}
	add		$tmp215 $tmp208 $tmp214 	%argrw{"wrr"}
	sub		$tmp216 $const8 $tmp202 	%argrw{"wrr"}
	mul		$tmp217 $const11 $tmp216 	%argrw{"wrr"}
	mul		$tmp218 $tmp217 $tmp202 	%argrw{"wrr"}
	mul		$tmp219 $tmp218 $tmp202 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MAEquations.h:122
#             + t*t*t*P3;
	mul		$tmp220 $tmp219 P2 	%line{122} %argrw{"wrr"}
	add		$tmp221 $tmp215 $tmp220 	%argrw{"wrr"}
	mul		$tmp222 $tmp202 $tmp202 	%argrw{"wrr"}
	mul		$tmp223 $tmp222 $tmp202 	%argrw{"wrr"}
	mul		$tmp224 $tmp223 P3 	%argrw{"wrr"}
	add		___344_Sy1 $tmp221 $tmp224 	%argrw{"wrr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:75
#                 if( (y > Sy1[1]) && (y < Sy0[1]) ) Leaf = 1;
	compref		$tmp225 ___344_Sy1 $const7 	%filename{"source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl"} %line{75} %argrw{"wrr"}
	compref		$tmp226 ___343_Sy0 $const7 	%argrw{"wrr"}
	lt		$tmp227 $tmp225 $tmp226 	%argrw{"wrr"}
	if		$tmp227 311 321 	%argrw{"r"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:76
#             }else{
	compref		$tmp228 ___344_Sy1 $const7 	%line{76} %argrw{"wrr"}
	gt		$tmp229 y $tmp228 	%argrw{"wrr"}
	neq		$tmp230 $tmp229 $const5 	%argrw{"wrr"}
	if		$tmp230 309 309 	%argrw{"r"}
	compref		$tmp231 ___343_Sy0 $const7 	%argrw{"wrr"}
	lt		$tmp232 y $tmp231 	%argrw{"wrr"}
	neq		$tmp233 $tmp232 $const5 	%argrw{"wrr"}
	assign		$tmp230 $tmp233 	%argrw{"wr"}
	if		$tmp230 311 311 	%argrw{"r"}
	assign		Leaf $const7 	%argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:78
#             }
	compref		$tmp234 ___343_Sy0 $const7 	%line{78} %argrw{"wrr"}
	gt		$tmp235 y $tmp234 	%argrw{"wrr"}
	neq		$tmp236 $tmp235 $const5 	%argrw{"wrr"}
	if		$tmp236 319 319 	%argrw{"r"}
	compref		$tmp237 ___344_Sy1 $const7 	%argrw{"wrr"}
	lt		$tmp238 y $tmp237 	%argrw{"wrr"}
	neq		$tmp239 $tmp238 $const5 	%argrw{"wrr"}
	assign		$tmp236 $tmp239 	%argrw{"wr"}
	if		$tmp236 321 321 	%argrw{"r"}
	assign		Leaf $const7 	%argrw{"wr"}
# source/sambler-osl-shaders/nature/MALeaf/MALeaf.osl:82
#         }
	compref		$tmp240 ___343_Sy0 $const7 	%line{82} %argrw{"wrr"}
	lt		$tmp241 y $tmp240 	%argrw{"wrr"}
	if		$tmp241 325 325 	%argrw{"r"}
	assign		Leaf $const7 	%argrw{"wr"}
	end
