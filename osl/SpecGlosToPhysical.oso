OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader SpecGlosToPhysical	%meta{string,help,"Input the <b>Specular</b> and <b>Glossiness</b><br>maps from a Spec/Gloss PBR shader.<p>Set the materials <b>Metalness</b> to 0.0 and <b>IOR</b> to <b>50</b>.<br>Then Assign outputs <b>Reflectivity</b>, <b>Reflection Color</b><br>and <b>Roughness</b> to matching inputs on the material"} %meta{string,label,"Spec/Gloss to Physical"} %meta{string,version,"1.0.0"} %meta{string,category,"Utility"} 
param	color	In	1 0.5 0.1		%meta{string,label,"Specular Map"}  %read{1,8} %write{2147483647,-1}
param	float	Glossiness	1		%read{0,14} %write{2147483647,-1}
param	int	Fresnel	1		%meta{string,widget,"checkBox"} %meta{string,label,"Apply Fresnel Effect"}  %read{9,9} %write{2147483647,-1}
oparam	float	Reflectivity	0		%read{6,15} %write{5,15}
oparam	color	ReflColor	0 0 0		%read{17,17} %write{8,17}
oparam	float	Roughness	0		%read{2147483647,-1} %write{0,0}
global	vector	I	%read{10,10} %write{2147483647,-1}
global	normal	N	%read{10,10} %write{2147483647,-1}
local	float	___322_fres	%read{15,17} %write{14,14}
const	float	$const1	1		%read{0,16} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{3,3}
const	int	$const2	0		%read{1,1} %write{2147483647,-1}
temp	float	$tmp2	%read{3,3} %write{1,1}
const	int	$const3	1		%read{2,2} %write{2147483647,-1}
temp	float	$tmp3	%read{3,3} %write{2,2}
const	int	$const4	2		%read{4,4} %write{2147483647,-1}
temp	float	$tmp4	%read{5,5} %write{4,4}
const	float	$const5	0		%read{6,6} %write{2147483647,-1}
temp	int	$tmp5	%read{7,7} %write{6,6}
temp	float	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{12,12} %write{11,11}
temp	float	$tmp8	%read{11,11} %write{10,10}
temp	float	$tmp9	%read{13,13} %write{12,12}
const	float	$const6	5		%read{13,13} %write{2147483647,-1}
temp	color	$tmp10	%read{17,17} %write{16,16}
code ___main___
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:28
# 	
	sub		Roughness $const1 Glossiness 	%filename{"source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl"} %line{28} %argrw{"wrr"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:30
# 	if (Reflectivity > 0.0)
	compref		$tmp2 In $const2 	%line{30} %argrw{"wrr"}
	compref		$tmp3 In $const3 	%argrw{"wrr"}
	max		$tmp1 $tmp2 $tmp3 	%argrw{"wrr"}
	compref		$tmp4 In $const4 	%argrw{"wrr"}
	max		Reflectivity $tmp1 $tmp4 	%argrw{"wrr"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:31
# 		ReflColor = In / Reflectivity;
	gt		$tmp5 Reflectivity $const5 	%line{31} %argrw{"wrr"}
	if		$tmp5 9 9 	%argrw{"r"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:32
# 
	div		ReflColor In Reflectivity 	%line{32} %argrw{"wrr"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:34
# 	{		
	if		Fresnel 18 18 	%line{34} %argrw{"r"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:39
# 		Reflectivity = mix(Reflectivity, 1.0, fres);
	dot		$tmp8 I N 	%line{39} %argrw{"wrr"}
	abs		$tmp7 $tmp8 	%argrw{"wr"}
	sub		$tmp9 $const1 $tmp7 	%argrw{"wrr"}
	pow		$tmp6 $tmp9 $const6 	%argrw{"wrr"}
	mul		___322_fres $tmp6 Glossiness 	%argrw{"wrr"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:40
# 		ReflColor    = mix(ReflColor, 1.0, fres);
	mix		Reflectivity Reflectivity $const1 ___322_fres 	%line{40} %argrw{"wrrr"}
# source/3dsMax-OSL-Shaders/SpecGlossToPhysical.osl:41
# 	}
	assign		$tmp10 $const1 	%line{41} %argrw{"wr"}
	mix		ReflColor ReflColor $tmp10 ___322_fres 	%argrw{"wrrr"}
	end
