OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader MABF
param	point	Vector	0 0 0		%read{12,62} %write{0,0} %initexpr
oparam	float	Fac	1		%read{2147483647,-1} %write{67,67}
global	point	P	%read{0,0} %write{2147483647,-1}
local	vector	___231_d	%read{9,60} %write{8,48}
local	float	___231_dd	%read{10,56} %write{9,49}
local	float	___231_t	%read{18,58} %write{16,56}
local	point	a	%read{8,21} %write{1,1}
local	point	b	%read{27,40} %write{2,2}
local	point	c	%read{8,61} %write{3,3}
local	point	d	%read{27,27} %write{4,4}
local	point	e	%read{48,48} %write{5,5}
local	float	w	%read{23,63} %write{6,6}
const	point	$const1	0.1 0.1 0		%read{1,1} %write{2147483647,-1}
const	point	$const2	0.1 0.25 0		%read{2,2} %write{2147483647,-1}
const	point	$const3	0.1 0.40000001 0		%read{3,3} %write{2147483647,-1}
const	point	$const4	0.25 0.25 0		%read{4,4} %write{2147483647,-1}
const	point	$const5	0.34999999 0.40000001 0		%read{5,5} %write{2147483647,-1}
const	float	$const6	0.02		%read{6,6} %write{2147483647,-1}
temp	float	$tmp1	%read{23,23} %write{12,22}
const	string	$const7	"distance"		%read{7,47} %write{2147483647,-1}
const	float	$const8	0		%read{10,59} %write{2147483647,-1}
temp	int	$tmp2	%read{11,11} %write{10,10}
temp	float	$tmp3	%read{16,16} %write{15,15}
temp	vector	$tmp4	%read{15,15} %write{14,14}
temp	float	$tmp5	%read{20,20} %write{19,19}
const	float	$const9	1		%read{18,58} %write{2147483647,-1}
const	string	$const10	"clamp"		%read{17,57} %write{2147483647,-1}
temp	float	$tmp6	%read{19,19} %write{18,18}
temp	vector	$tmp7	%read{21,21} %write{20,20}
temp	point	$tmp8	%read{22,22} %write{21,21}
temp	int	$tmp9	%read{24,24} %write{23,23}
temp	int	$tmp10	%read{25,45} %write{24,44}
const	int	$const11	0		%read{24,67} %write{2147483647,-1}
temp	float	$tmp11	%read{42,42} %write{31,41}
temp	int	$tmp12	%read{30,30} %write{29,29}
temp	float	$tmp13	%read{35,35} %write{34,34}
temp	vector	$tmp14	%read{34,34} %write{33,33}
temp	float	$tmp15	%read{39,39} %write{38,38}
temp	float	$tmp16	%read{38,38} %write{37,37}
temp	vector	$tmp17	%read{40,40} %write{39,39}
temp	point	$tmp18	%read{41,41} %write{40,40}
temp	int	$tmp19	%read{43,43} %write{42,42}
temp	int	$tmp20	%read{44,44} %write{43,43}
temp	int	$tmp21	%read{46,66} %write{45,65}
temp	float	$tmp22	%read{63,63} %write{52,62}
temp	int	$tmp23	%read{51,51} %write{50,50}
temp	float	$tmp24	%read{56,56} %write{55,55}
temp	vector	$tmp25	%read{55,55} %write{54,54}
temp	float	$tmp26	%read{60,60} %write{59,59}
temp	float	$tmp27	%read{59,59} %write{58,58}
temp	vector	$tmp28	%read{61,61} %write{60,60}
temp	point	$tmp29	%read{62,62} %write{61,61}
temp	int	$tmp30	%read{64,64} %write{63,63}
temp	int	$tmp31	%read{65,65} %write{64,64}
code Vector
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:15
# 
	assign		Vector P 	%filename{"source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl"} %line{15} %argrw{"wr"}
code ___main___
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:19
#     point b=point(0.1,0.25,0);
	assign		a $const1 	%filename{"source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl"} %line{19} %argrw{"wr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:20
#     point c=point(0.1,0.4,0);
	assign		b $const2 	%line{20} %argrw{"wr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:21
#     point d=point(0.25,0.25,0);
	assign		c $const3 	%line{21} %argrw{"wr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:22
#     point e=point(0.35,0.4,0);
	assign		d $const4 	%line{22} %argrw{"wr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:23
#     float w=0.02;
	assign		e $const5 	%line{23} %argrw{"wr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:24
# 
	assign		w $const6 	%line{24} %argrw{"wr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:26
#         Fac = 0;
	functioncall	$const7 23 	%line{26} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:199
#     vector d = b - a;
	sub		___231_d c a 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{199} %argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:200
#     float dd = dot(d, d);
	dot		___231_dd ___231_d ___231_d 	%line{200} %argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:201
#     if(dd == 0.0)
	eq		$tmp2 ___231_dd $const8 	%line{201} %argrw{"wrr"}
	if		$tmp2 14 14 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:202
#         return distance(q, a);
	distance	$tmp1 Vector a 	%line{202} %argrw{"wrr"}
	return
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:203
#     float t = dot(q - a, d)/dd;
	sub		$tmp4 Vector a 	%line{203} %argrw{"wrr"}
	dot		$tmp3 $tmp4 ___231_d 	%argrw{"wrr"}
	div		___231_t $tmp3 ___231_dd 	%argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:204
#     return distance(q, a + clamp(t, 0.0, 1.0)*d);
	functioncall	$const10 20 	%line{204} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp6 ___231_t $const9 	%line{145} %argrw{"wrr"}
	max		$tmp5 $tmp6 $const8 	%argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:204
#     return distance(q, a + clamp(t, 0.0, 1.0)*d);
	mul		$tmp7 $tmp5 ___231_d 	%line{204} %argrw{"wrr"}
	add		$tmp8 a $tmp7 	%argrw{"wrr"}
	distance	$tmp1 Vector $tmp8 	%argrw{"wrr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:26
#         Fac = 0;
	lt		$tmp9 $tmp1 w 	%filename{"source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl"} %line{26} %argrw{"wrr"}
	neq		$tmp10 $tmp9 $const11 	%argrw{"wrr"}
	if		$tmp10 26 45 	%argrw{"r"}
	functioncall	$const7 42 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:199
#     vector d = b - a;
	sub		___231_d d b 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{199} %argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:200
#     float dd = dot(d, d);
	dot		___231_dd ___231_d ___231_d 	%line{200} %argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:201
#     if(dd == 0.0)
	eq		$tmp12 ___231_dd $const8 	%line{201} %argrw{"wrr"}
	if		$tmp12 33 33 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:202
#         return distance(q, a);
	distance	$tmp11 Vector b 	%line{202} %argrw{"wrr"}
	return
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:203
#     float t = dot(q - a, d)/dd;
	sub		$tmp14 Vector b 	%line{203} %argrw{"wrr"}
	dot		$tmp13 $tmp14 ___231_d 	%argrw{"wrr"}
	div		___231_t $tmp13 ___231_dd 	%argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:204
#     return distance(q, a + clamp(t, 0.0, 1.0)*d);
	functioncall	$const10 39 	%line{204} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp16 ___231_t $const9 	%line{145} %argrw{"wrr"}
	max		$tmp15 $tmp16 $const8 	%argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:204
#     return distance(q, a + clamp(t, 0.0, 1.0)*d);
	mul		$tmp17 $tmp15 ___231_d 	%line{204} %argrw{"wrr"}
	add		$tmp18 b $tmp17 	%argrw{"wrr"}
	distance	$tmp11 Vector $tmp18 	%argrw{"wrr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:26
#         Fac = 0;
	lt		$tmp19 $tmp11 w 	%filename{"source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl"} %line{26} %argrw{"wrr"}
	neq		$tmp20 $tmp19 $const11 	%argrw{"wrr"}
	assign		$tmp10 $tmp20 	%argrw{"wr"}
	neq		$tmp21 $tmp10 $const11 	%argrw{"wrr"}
	if		$tmp21 47 66 	%argrw{"r"}
	functioncall	$const7 63 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:199
#     vector d = b - a;
	sub		___231_d e c 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{199} %argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:200
#     float dd = dot(d, d);
	dot		___231_dd ___231_d ___231_d 	%line{200} %argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:201
#     if(dd == 0.0)
	eq		$tmp23 ___231_dd $const8 	%line{201} %argrw{"wrr"}
	if		$tmp23 54 54 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:202
#         return distance(q, a);
	distance	$tmp22 Vector c 	%line{202} %argrw{"wrr"}
	return
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:203
#     float t = dot(q - a, d)/dd;
	sub		$tmp25 Vector c 	%line{203} %argrw{"wrr"}
	dot		$tmp24 $tmp25 ___231_d 	%argrw{"wrr"}
	div		___231_t $tmp24 ___231_dd 	%argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:204
#     return distance(q, a + clamp(t, 0.0, 1.0)*d);
	functioncall	$const10 60 	%line{204} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp27 ___231_t $const9 	%line{145} %argrw{"wrr"}
	max		$tmp26 $tmp27 $const8 	%argrw{"wrr"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:204
#     return distance(q, a + clamp(t, 0.0, 1.0)*d);
	mul		$tmp28 $tmp26 ___231_d 	%line{204} %argrw{"wrr"}
	add		$tmp29 c $tmp28 	%argrw{"wrr"}
	distance	$tmp22 Vector $tmp29 	%argrw{"wrr"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:26
#         Fac = 0;
	lt		$tmp30 $tmp22 w 	%filename{"source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl"} %line{26} %argrw{"wrr"}
	neq		$tmp31 $tmp30 $const11 	%argrw{"wrr"}
	assign		$tmp21 $tmp31 	%argrw{"wr"}
	if		$tmp21 68 68 	%argrw{"r"}
# source/sambler-osl-shaders/MJABook/12MABSymmetry/MABF.osl:27
#     }
	assign		Fac $const11 	%line{27} %argrw{"wr"}
	end
