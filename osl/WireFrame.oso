OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader WireFrame	%meta{string,help,"<h3>Wireframe</h3>Creates a wireframe that has a fixed width relative to<br>rendered pixels with a square every 1x1 unit square in<br>UV space. Use with a UVW Map set to 'Face Map'<br>to get classic wireframe look."} 
param	vector	Tiling	1 1 1		%meta{string,help,"Number of wireframe 'squares' per unit square un UV space"}  %read{1,4} %write{2147483647,-1} %derivs
param	float	Width	1		%meta{string,help,"Width of wireframe, roughly in final rendered pixels."}  %read{8,29} %write{2147483647,-1}
param	color	Space	0 0 0		%meta{string,help,"Color of the space between the wires."}  %read{0,0} %write{2147483647,-1}
param	color	Wire	1 1 1		%meta{string,help,"The color of the wires themselves."}  %read{34,34} %write{2147483647,-1}
oparam	color	Out	0 0 0		%read{2147483647,-1} %write{0,34}
global	float	u	%read{2,2} %write{2147483647,-1} %derivs
global	float	v	%read{5,5} %write{2147483647,-1} %derivs
local	float	x	%read{7,20} %write{3,3} %derivs
local	float	y	%read{12,28} %write{6,6} %derivs
const	int	$const1	0		%read{1,31} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{1,1} %derivs
temp	float	$tmp2	%read{3,3} %write{2,2} %derivs
const	float	$const2	1		%read{3,27} %write{2147483647,-1}
const	int	$const3	1		%read{4,4} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4} %derivs
temp	float	$tmp4	%read{6,6} %write{5,5} %derivs
temp	float	$tmp5	%read{8,8} %write{7,7}
temp	float	$tmp6	%read{9,9} %write{8,8}
temp	int	$tmp7	%read{10,10} %write{9,9}
temp	int	$tmp8	%read{11,17} %write{10,16}
temp	float	$tmp9	%read{13,13} %write{12,12}
temp	float	$tmp10	%read{14,14} %write{13,13}
temp	int	$tmp11	%read{15,15} %write{14,14}
temp	int	$tmp12	%read{16,16} %write{15,15}
temp	int	$tmp13	%read{18,25} %write{17,24}
temp	float	$tmp14	%read{22,22} %write{19,19}
temp	float	$tmp15	%read{21,21} %write{20,20}
temp	float	$tmp16	%read{22,22} %write{21,21}
temp	int	$tmp17	%read{23,23} %write{22,22}
temp	int	$tmp18	%read{24,24} %write{23,23}
temp	int	$tmp19	%read{26,33} %write{25,32}
temp	float	$tmp20	%read{30,30} %write{27,27}
temp	float	$tmp21	%read{29,29} %write{28,28}
temp	float	$tmp22	%read{30,30} %write{29,29}
temp	int	$tmp23	%read{31,31} %write{30,30}
temp	int	$tmp24	%read{32,32} %write{31,31}
code ___main___
# source/3dsMax-OSL-Shaders/WireFrame.osl:29
# 	
	assign		Out Space 	%filename{"source/3dsMax-OSL-Shaders/WireFrame.osl"} %line{29} %argrw{"wr"}
# source/3dsMax-OSL-Shaders/WireFrame.osl:31
# 	float y = fmod(v * Tiling[1], 1.0);
	compref		$tmp1 Tiling $const1 	%line{31} %argrw{"wrr"}
	mul		$tmp2 u $tmp1 	%argrw{"wrr"}
	fmod		x $tmp2 $const2 	%argrw{"wrr"}
# source/3dsMax-OSL-Shaders/WireFrame.osl:32
# 	
	compref		$tmp3 Tiling $const3 	%line{32} %argrw{"wrr"}
	mul		$tmp4 v $tmp3 	%argrw{"wrr"}
	fmod		y $tmp4 $const2 	%argrw{"wrr"}
# source/3dsMax-OSL-Shaders/WireFrame.osl:34
# 	    (1 - x) < filterwidth(x) * Width || (1 - y) < filterwidth(y) * Width)
	filterwidth	$tmp5 x 	%line{34} %argrw{"wr"} %argderivs{1}
	mul		$tmp6 $tmp5 Width 	%argrw{"wrr"}
	lt		$tmp7 x $tmp6 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	if		$tmp8 12 17 	%argrw{"r"}
	filterwidth	$tmp9 y 	%argrw{"wr"} %argderivs{1}
	mul		$tmp10 $tmp9 Width 	%argrw{"wrr"}
	lt		$tmp11 y $tmp10 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const1 	%argrw{"wrr"}
	assign		$tmp8 $tmp12 	%argrw{"wr"}
	neq		$tmp13 $tmp8 $const1 	%argrw{"wrr"}
# source/3dsMax-OSL-Shaders/WireFrame.osl:35
# 		Out = Wire;
	if		$tmp13 19 25 	%line{35} %argrw{"r"}
	sub		$tmp14 $const2 x 	%argrw{"wrr"}
	filterwidth	$tmp15 x 	%argrw{"wr"} %argderivs{1}
	mul		$tmp16 $tmp15 Width 	%argrw{"wrr"}
	lt		$tmp17 $tmp14 $tmp16 	%argrw{"wrr"}
	neq		$tmp18 $tmp17 $const1 	%argrw{"wrr"}
	assign		$tmp13 $tmp18 	%argrw{"wr"}
	neq		$tmp19 $tmp13 $const1 	%argrw{"wrr"}
	if		$tmp19 27 33 	%argrw{"r"}
	sub		$tmp20 $const2 y 	%argrw{"wrr"}
	filterwidth	$tmp21 y 	%argrw{"wr"} %argderivs{1}
	mul		$tmp22 $tmp21 Width 	%argrw{"wrr"}
	lt		$tmp23 $tmp20 $tmp22 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	assign		$tmp19 $tmp24 	%argrw{"wr"}
# source/3dsMax-OSL-Shaders/WireFrame.osl:34
# 	    (1 - x) < filterwidth(x) * Width || (1 - y) < filterwidth(y) * Width)
	if		$tmp19 35 35 	%line{34} %argrw{"r"}
# source/3dsMax-OSL-Shaders/WireFrame.osl:36
# 	
	assign		Out Wire 	%line{36} %argrw{"wr"}
	end
