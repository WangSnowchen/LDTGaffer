OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader MAhexagon
param	vector	Vector	0 0 0		%read{3,46} %write{2147483647,-1}
param	color	Diffuse_Color1	0.2 0.80000001 0.2		%read{0,0} %write{2147483647,-1}
param	color	Diffuse_Color2	0.80000001 0.2 0.2		%read{1,1} %write{2147483647,-1}
param	color	Diffuse_Color3	0.2 0.2 0.80000001		%read{2,2} %write{2147483647,-1}
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{39,39}
oparam	int	Index	1		%read{38,38} %write{37,37}
oparam	float	Distance	0		%read{2147483647,-1} %write{71,71}
local	color[3]	colors	%read{39,39} %write{0,2}
local	float	syc	%read{7,34} %write{5,5}
local	float	sxc	%read{17,29} %write{8,8}
local	int[18]	ind	%read{37,37} %write{9,9}
local	int	iy	%read{22,22} %write{15,15}
local	int	ix	%read{23,37} %write{21,36}
local	float	sx	%read{54,68} %write{45,56}
local	float	sy	%read{58,68} %write{53,61}
local	float	d1	%read{70,70} %write{65,65}
local	float	d2	%read{70,70} %write{67,67}
local	float	d6	%read{71,71} %write{69,69}
const	int	$const1	0		%read{0,40} %write{2147483647,-1}
const	int	$const2	1		%read{1,46} %write{2147483647,-1}
const	int	$const3	2		%read{2,23} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{3,3}
const	float	$const4	0.86602539		%read{4,63} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
const	float	$const5	1		%read{4,33} %write{2147483647,-1}
temp	float	$tmp3	%read{8,8} %write{6,6}
const	float	$const6	0.5		%read{7,7} %write{2147483647,-1}
temp	float	$tmp4	%read{8,8} %write{7,7}
const	int[18]	$const7	1 1 3 3 3 1 2 2 2 3 3 3 1 2 2 2 1 1 		%read{9,9} %write{2147483647,-1}
temp	float	$tmp5	%read{15,15} %write{14,14}
const	float	$const8	3		%read{11,56} %write{2147483647,-1}
const	string	$const9	"mod"		%read{10,49} %write{2147483647,-1}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{12,12} %write{11,11}
temp	float	$tmp8	%read{14,14} %write{13,13}
temp	float	$tmp9	%read{21,21} %write{20,20}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	float	$tmp11	%read{18,18} %write{17,17}
temp	float	$tmp12	%read{20,20} %write{19,19}
const	int	$const10	6		%read{22,22} %write{2147483647,-1}
temp	int	$tmp13	%read{24,24} %write{22,22}
temp	int	$tmp14	%read{24,24} %write{23,23}
temp	int	$tmp15	%read{36,36} %write{24,24}
temp	float	$tmp16	%read{35,35} %write{29,29}
temp	float	$tmp17	%read{28,28} %write{27,27}
temp	float	$tmp18	%read{27,27} %write{26,26}
temp	float	$tmp19	%read{29,29} %write{28,28}
temp	float	$tmp20	%read{35,35} %write{34,34}
temp	float	$tmp21	%read{33,33} %write{32,32}
temp	float	$tmp22	%read{32,32} %write{31,31}
temp	float	$tmp23	%read{34,34} %write{33,33}
temp	int	$tmp24	%read{36,36} %write{35,35}
temp	int	$tmp25	%read{39,39} %write{38,38}
temp	float	$tmp26	%read{42,45} %write{40,40}
temp	float	$tmp27	%read{44,44} %write{43,43}
temp	float	$tmp28	%read{43,43} %write{42,42}
temp	float	$tmp29	%read{45,45} %write{44,44}
temp	float	$tmp30	%read{47,47} %write{46,46}
const	float	$const12	0.75		%read{47,47} %write{2147483647,-1}
temp	float	$tmp31	%read{50,53} %write{47,47}
temp	float	$tmp32	%read{50,52} %write{48,48}
const	float	$const14	4		%read{48,60} %write{2147483647,-1}
temp	float	$tmp33	%read{52,52} %write{51,51}
temp	float	$tmp34	%read{51,51} %write{50,50}
temp	float	$tmp35	%read{53,53} %write{52,52}
const	float	$const15	1.5		%read{54,64} %write{2147483647,-1}
temp	int	$tmp36	%read{55,55} %write{54,54}
temp	float	$tmp37	%read{58,58} %write{57,57}
const	float	$const16	2		%read{57,63} %write{2147483647,-1}
temp	int	$tmp38	%read{59,59} %write{58,58}
temp	float	$tmp39	%read{61,61} %write{60,60}
temp	vector	$tmp40	%read{65,65} %write{62,62}
const	float	$const17	0		%read{62,68} %write{2147483647,-1}
temp	vector	$tmp41	%read{65,65} %write{64,64}
temp	float	$tmp42	%read{64,64} %write{63,63}
temp	vector	$tmp43	%read{67,67} %write{66,66}
const	vector	$const18	0 0.86602539 0		%read{67,67} %write{2147483647,-1}
temp	vector	$tmp45	%read{69,69} %write{68,68}
const	vector	$const19	1.5 0 0		%read{69,69} %write{2147483647,-1}
temp	float	$tmp47	%read{71,71} %write{70,70}
code ___main___
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:32
# 
	aassign		colors $const1 Diffuse_Color1 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{32} %argrw{"wrr"}
	aassign		colors $const2 Diffuse_Color2 	%argrw{"wrr"}
	aassign		colors $const3 Diffuse_Color3 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:36
#     float sxc = Vector[0] + 0.5 * syc;
	compref		$tmp1 Vector $const2 	%line{36} %argrw{"wrr"}
	div		$tmp2 $const5 $const4 	%argrw{"wrr"}
	mul		syc $tmp1 $tmp2 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:37
# 
	compref		$tmp3 Vector $const1 	%line{37} %argrw{"wrr"}
	mul		$tmp4 $const6 syc 	%argrw{"wrr"}
	add		sxc $tmp3 $tmp4 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:39
# 
	assign		ind $const7 	%line{39} %argrw{"wr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:41
#     int ix = int(mod(sxc,3.0));
	functioncall	$const9 15 	%line{41} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp7 syc $const8 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const8 $tmp6 	%argrw{"wrr"}
	sub		$tmp5 syc $tmp8 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:41
#     int ix = int(mod(sxc,3.0));
	assign		iy $tmp5 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{41} %argrw{"wr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:42
#     ix = iy * 6 + ix * 2 + ( mod(sxc,1.0) > mod(syc,1.0) );
	functioncall	$const9 21 	%line{42} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp11 sxc $const8 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp10 $tmp11 	%argrw{"wr"}
	mul		$tmp12 $const8 $tmp10 	%argrw{"wrr"}
	sub		$tmp9 sxc $tmp12 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:42
#     ix = iy * 6 + ix * 2 + ( mod(sxc,1.0) > mod(syc,1.0) );
	assign		ix $tmp9 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{42} %argrw{"wr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:43
#     Index = ind[ix];
	mul		$tmp13 iy $const10 	%line{43} %argrw{"wrr"}
	mul		$tmp14 ix $const3 	%argrw{"wrr"}
	add		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	functioncall	$const9 30 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp18 sxc $const5 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp17 $tmp18 	%argrw{"wr"}
	mul		$tmp19 $const5 $tmp17 	%argrw{"wrr"}
	sub		$tmp16 sxc $tmp19 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:43
#     Index = ind[ix];
	functioncall	$const9 35 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{43} %argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp22 syc $const5 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp21 $tmp22 	%argrw{"wr"}
	mul		$tmp23 $const5 $tmp21 	%argrw{"wrr"}
	sub		$tmp20 syc $tmp23 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:43
#     Index = ind[ix];
	gt		$tmp24 $tmp16 $tmp20 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{43} %argrw{"wrr"}
	add		ix $tmp15 $tmp24 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:44
#     Color = colors[Index-1];
	aref		Index ind ix 	%line{44} %argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:45
# 
	sub		$tmp25 Index $const2 	%line{45} %argrw{"wrr"}
	aref		Color colors $tmp25 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:49
#     float sy = mod(Vector[1]+0.75,A4);
	compref		$tmp26 Vector $const1 	%line{49} %argrw{"wrr"}
	functioncall	$const9 46 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp28 $tmp26 $const8 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp27 $tmp28 	%argrw{"wr"}
	mul		$tmp29 $const8 $tmp27 	%argrw{"wrr"}
	sub		sx $tmp26 $tmp29 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:50
# 
	compref		$tmp30 Vector $const2 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{50} %argrw{"wrr"}
	add		$tmp31 $tmp30 $const12 	%argrw{"wrr"}
	mul		$tmp32 $const14 $const4 	%argrw{"wrr"}
	functioncall	$const9 54 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp34 $tmp31 $tmp32 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp33 $tmp34 	%argrw{"wr"}
	mul		$tmp35 $tmp32 $tmp33 	%argrw{"wrr"}
	sub		sy $tmp31 $tmp35 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:53
#     if ( sy > A2 ) sy = A4 - sy;
	gt		$tmp36 sx $const15 	%filename{"source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl"} %line{53} %argrw{"wrr"}
	if		$tmp36 57 57 	%argrw{"r"}
	sub		sx $const8 sx 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:54
# 
	mul		$tmp37 $const16 $const4 	%line{54} %argrw{"wrr"}
	gt		$tmp38 sy $tmp37 	%argrw{"wrr"}
	if		$tmp38 62 62 	%argrw{"r"}
	mul		$tmp39 $const14 $const4 	%argrw{"wrr"}
	sub		sy $tmp39 sy 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:58
#     float d2 = distance(vector(sx,sy,0),vector(0,A,0));
	vector		$tmp40 sx sy $const17 	%line{58} %argrw{"wrrr"}
	mul		$tmp42 $const16 $const4 	%argrw{"wrr"}
	vector		$tmp41 $const15 $tmp42 $const17 	%argrw{"wrrr"}
	distance	d1 $tmp40 $tmp41 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:59
#     float d6 = distance(vector(sx,sy,0),vector(1.5,0,0));
	vector		$tmp43 sx sy $const17 	%line{59} %argrw{"wrrr"}
	distance	d2 $tmp43 $const18 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:60
# 
	vector		$tmp45 sx sy $const17 	%line{60} %argrw{"wrrr"}
	distance	d6 $tmp45 $const19 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/MAhexagon/MAhexagon.osl:62
# 
	min		$tmp47 d1 d2 	%line{62} %argrw{"wrr"}
	min		Distance $tmp47 d6 	%argrw{"wrr"}
	end
