OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader ElSierpinskiSquares
param	vector	Vector	0 0 0		%read{1,1} %write{0,0} %initexpr
param	float	Scale	1		%read{1,1} %write{2147483647,-1}
param	float	Zoom	1		%read{2,2} %write{2147483647,-1}
param	float	MaxIterations	10		%read{29,57} %write{2147483647,-1}
oparam	float	Fac	1		%read{2147483647,-1} %write{59,59}
oparam	color	ColorOut	0.80000001 0.80000001 0.80000001		%read{2147483647,-1} %write{60,60}
global	point	P	%read{0,0} %write{2147483647,-1}
local	vector	p	%read{6,56} %write{3,3}
local	float	diExp	%read{29,56} %write{4,56}
local	float	result	%read{29,60} %write{24,58}
local	float	___323_i	%read{29,56} %write{28,56}
temp	vector	$tmp1	%read{3,3} %write{1,1}
const	float	$const1	2		%read{2,57} %write{2147483647,-1}
temp	float	$tmp2	%read{3,3} %write{2,2}
const	float	$const2	1		%read{4,56} %write{2147483647,-1}
const	string	$const3	"genCheck"		%read{5,30} %write{2147483647,-1}
temp	float	$tmp3	%read{13,13} %write{12,12}
const	int	$const4	0		%read{6,31} %write{2147483647,-1}
temp	float	$tmp4	%read{7,7} %write{6,6}
temp	float	$tmp5	%read{9,12} %write{7,7}
const	string	$const5	"mod"		%read{8,41} %write{2147483647,-1}
temp	float	$tmp6	%read{11,11} %write{10,10}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{12,12} %write{11,11}
const	float	$const6	0.5		%read{13,46} %write{2147483647,-1}
temp	int	$tmp9	%read{22,22} %write{13,13}
temp	float	$tmp10	%read{21,21} %write{20,20}
const	int	$const7	1		%read{14,39} %write{2147483647,-1}
temp	float	$tmp11	%read{15,15} %write{14,14}
temp	float	$tmp12	%read{17,20} %write{15,15}
temp	float	$tmp13	%read{19,19} %write{18,18}
temp	float	$tmp14	%read{18,18} %write{17,17}
temp	float	$tmp15	%read{20,20} %write{19,19}
temp	int	$tmp16	%read{22,22} %write{21,21}
temp	int	$tmp17	%read{23,23} %write{22,22}
const	float	$const8	0		%read{24,49} %write{2147483647,-1}
const	float	$const9	0.69999999		%read{28,28} %write{2147483647,-1}
temp	int	$tmp18	%read{27,56} %write{28,56}
temp	float	$tmp19	%read{29,56} %write{29,56}
temp	float	$tmp20	%read{29,56} %write{29,56}
temp	float	$tmp21	%read{29,56} %write{29,56}
temp	float	$tmp22	%read{29,56} %write{29,56}
temp	float	$tmp23	%read{29,56} %write{29,56}
temp	float	$tmp24	%read{29,56} %write{29,56}
temp	float	$tmp25	%read{29,56} %write{29,56}
temp	int	$tmp26	%read{29,56} %write{29,56}
temp	float	$tmp27	%read{29,56} %write{29,56}
temp	float	$tmp28	%read{29,56} %write{29,56}
temp	float	$tmp29	%read{29,56} %write{29,56}
temp	float	$tmp30	%read{29,56} %write{29,56}
temp	float	$tmp31	%read{29,56} %write{29,56}
temp	float	$tmp32	%read{29,56} %write{29,56}
temp	int	$tmp33	%read{29,56} %write{29,56}
temp	int	$tmp34	%read{29,56} %write{29,56}
temp	float	$tmp35	%read{29,56} %write{29,56}
temp	float	$tmp36	%read{2147483647,-1} %write{29,56}
temp	float	$tmp37	%read{58,58} %write{57,57}
code Vector
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:19
#     float Scale = 1.0,
	assign		Vector P 	%filename{"source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl"} %line{19} %argrw{"wr"}
code ___main___
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:26
#     float diExp = 1.0;
	mul		$tmp1 Vector Scale 	%filename{"source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl"} %line{26} %argrw{"wrr"}
	mul		$tmp2 $const1 Zoom 	%argrw{"wrr"}
	div		p $tmp1 $tmp2 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:27
#     float result = genCheck(p,1.0);
	assign		diExp $const2 	%line{27} %argrw{"wr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:28
# 
	functioncall	$const3 27 	%line{28} %argrw{"r"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:14
#         0.0 : 1.0;
	compref		$tmp4 p $const4 	%line{14} %argrw{"wrr"}
	mul		$tmp5 $const2 $tmp4 	%argrw{"wrr"}
	functioncall	$const5 13 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp7 $tmp5 $const2 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const2 $tmp6 	%argrw{"wrr"}
	sub		$tmp3 $tmp5 $tmp8 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:14
#         0.0 : 1.0;
	lt		$tmp9 $tmp3 $const6 	%filename{"source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl"} %line{14} %argrw{"wrr"}
	compref		$tmp11 p $const7 	%argrw{"wrr"}
	mul		$tmp12 $const2 $tmp11 	%argrw{"wrr"}
	functioncall	$const5 21 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp14 $tmp12 $const2 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp13 $tmp14 	%argrw{"wr"}
	mul		$tmp15 $const2 $tmp13 	%argrw{"wrr"}
	sub		$tmp10 $tmp12 $tmp15 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:14
#         0.0 : 1.0;
	lt		$tmp16 $tmp10 $const6 	%filename{"source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl"} %line{14} %argrw{"wrr"}
	xor		$tmp17 $tmp9 $tmp16 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:15
# }
	if		$tmp17 25 26 	%line{15} %argrw{"r"}
	assign		result $const8 	%argrw{"wr"}
	assign		result $const2 	%argrw{"wr"}
	return
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:30
#     {
	for		$tmp18 29 30 55 57 	%line{30} %argrw{"r"}
	assign		___323_i $const9 	%argrw{"wr"}
	le		$tmp18 ___323_i MaxIterations 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:32
# 
	functioncall	$const3 52 	%line{32} %argrw{"r"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:14
#         0.0 : 1.0;
	compref		$tmp21 p $const4 	%line{14} %argrw{"wrr"}
	mul		$tmp22 diExp $tmp21 	%argrw{"wrr"}
	functioncall	$const5 38 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp24 $tmp22 $const2 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp23 $tmp24 	%argrw{"wr"}
	mul		$tmp25 $const2 $tmp23 	%argrw{"wrr"}
	sub		$tmp20 $tmp22 $tmp25 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:14
#         0.0 : 1.0;
	lt		$tmp26 $tmp20 $const6 	%filename{"source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl"} %line{14} %argrw{"wrr"}
	compref		$tmp28 p $const7 	%argrw{"wrr"}
	mul		$tmp29 diExp $tmp28 	%argrw{"wrr"}
	functioncall	$const5 46 	%argrw{"r"}
# /opt/gaffer-0.58.0.1-linux/shaders/stdosl.h:136
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp31 $tmp29 $const2 	%filename{"/opt/gaffer-0.58.0.1-linux/shaders/stdosl.h"} %line{136} %argrw{"wrr"}
	floor		$tmp30 $tmp31 	%argrw{"wr"}
	mul		$tmp32 $const2 $tmp30 	%argrw{"wrr"}
	sub		$tmp27 $tmp29 $tmp32 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:14
#         0.0 : 1.0;
	lt		$tmp33 $tmp27 $const6 	%filename{"source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl"} %line{14} %argrw{"wrr"}
	xor		$tmp34 $tmp26 $tmp33 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:15
# }
	if		$tmp34 50 51 	%line{15} %argrw{"r"}
	assign		$tmp19 $const8 	%argrw{"wr"}
	assign		$tmp19 $const2 	%argrw{"wr"}
	return
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:32
# 
	div		$tmp35 $tmp19 ___323_i 	%line{32} %argrw{"wrr"}
	add		result result $tmp35 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:34
#     }
	mul		diExp diExp $const1 	%line{34} %argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:30
#     {
	assign		$tmp36 ___323_i 	%line{30} %argrw{"wr"}
	add		___323_i ___323_i $const2 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:36
# 
	div		$tmp37 MaxIterations $const1 	%line{36} %argrw{"wrr"}
	div		result result $tmp37 	%argrw{"wrr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:38
#     ColorOut = color(result,result,result);
	assign		Fac result 	%line{38} %argrw{"wr"}
# source/sambler-osl-shaders/patterns/ElSierpinskiSquares/ElSierpinskiSquares.osl:39
# }
	color		ColorOut result result result 	%line{39} %argrw{"wrrr"}
	end
