OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -Ipath
shader node_noise_texture
param	int	use_mapping	0		%read{2,2} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{3,3} %write{2147483647,-1}
param	float	Distortion	0		%read{8,2110} %write{2147483647,-1}
param	float	Scale	5		%read{5,5} %write{2147483647,-1}
param	float	Detail	2		%read{2118,5048} %write{2147483647,-1}
param	point	Vector	0 0 0		%read{1,1} %write{0,0} %initexpr
oparam	float	Fac	0		%read{6504,6505} %write{3562,6505}
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{6504,6504}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___632_r	%read{48,6448} %write{48,6448}
local	float	___632_g	%read{48,6448} %write{48,6448}
local	float	___632_b	%read{48,6448} %write{48,6448}
local	int	___633_xx	%read{48,6448} %write{47,6448}
local	int	___633_yy	%read{48,6448} %write{48,6448}
local	int	___633_zz	%read{48,6448} %write{48,6448}
local	int	___633_xi	%read{47,6448} %write{35,6350}
local	int	___633_yi	%read{48,6448} %write{38,6353}
local	int	___633_zi	%read{48,6448} %write{41,6356}
local	point	___639_ip	%read{48,6448} %write{48,6448}
local	point	___639_vp	%read{48,6448} %write{48,6448}
local	point	___639_pd	%read{48,6448} %write{48,6448}
local	float	___639_d	%read{48,6448} %write{48,6448}
local	float[4]	___644_da	%read{48,6224} %write{42,6223}
local	point[4]	___644_pa	%read{48,6223} %write{48,6223}
local	float[4]	___645_da	%read{492,6450} %write{486,6448}
local	point[4]	___645_pa	%read{492,6448} %write{492,6448}
local	float	___651_t	%read{696,6456} %write{695,6452}
local	float	___658_f	%read{20,5782} %write{15,5776}
local	float	___661_fscale	%read{2123,5767} %write{2114,5762}
local	float	___661_amp	%read{2123,6470} %write{2115,5762}
local	float	___661_sum	%read{2123,6502} %write{2116,6501}
local	int	___661_i	%read{2123,5762} %write{2122,5762}
local	int	___661_n	%read{2123,6496} %write{2120,5050}
local	float	___661_octaves	%read{2120,5764} %write{2119,5049}
local	float	___663_t	%read{2123,5762} %write{2123,5762}
local	float	___661_rmd	%read{2835,6491} %write{2834,5764}
local	float	___664_t	%read{3537,6470} %write{2850,6469}
local	float	___664_sum2	%read{3558,6491} %write{3541,6488}
local	point	___667_r	%read{2112,2112} %write{710,2111}
local	int	___667_hard	%read{2123,6466} %write{7,7}
local	point	p	%read{3,5} %write{1,3}
local	string	Basis	%read{12,6461} %write{4,4}
const	string	$const1	"Perlin"		%read{4,5769} %write{2147483647,-1}
temp	point	$tmp1	%read{10,5041} %write{5,2112}
const	string	$const2	"noise"		%read{6,6} %write{2147483647,-1}
const	int	$const3	0		%read{7,6450} %write{2147483647,-1}
const	float	$const4	0		%read{8,6465} %write{2147483647,-1}
temp	int	$tmp2	%read{9,9} %write{8,8}
temp	float	$tmp3	%read{709,709} %write{23,708}
const	point	$const5	13.5 13.5 13.5		%read{10,1411} %write{2147483647,-1}
temp	point	$tmp5	%read{18,706} %write{10,10}
const	string	$const6	"noise_basis"		%read{11,5768} %write{2147483647,-1}
temp	int	$tmp6	%read{13,13} %write{12,12}
const	int	$const7	1		%read{16,6498} %write{2147483647,-1}
const	string	$const8	"safe_noise"		%read{14,5771} %write{2147483647,-1}
temp	int	$tmp7	%read{17,17} %write{16,16}
const	string	$const9	"perlin"		%read{18,5775} %write{2147483647,-1}
temp	int	$tmp8	%read{21,21} %write{20,20}
temp	int	$tmp9	%read{22,22} %write{21,21}
const	float	$const10	0.5		%read{23,5780} %write{2147483647,-1}
const	string	$const11	"Voronoi F1"		%read{27,5784} %write{2147483647,-1}
temp	int	$tmp10	%read{28,28} %write{27,27}
const	string	$const12	"voronoi_F1S"		%read{29,5786} %write{2147483647,-1}
const	float	$const13	2		%read{135,6467} %write{2147483647,-1}
temp	float	$tmp11	%read{135,135} %write{134,134}
const	string	$const14	"voronoi_F1"		%read{30,5787} %write{2147483647,-1}
const	string	$const15	"voronoi_Fn"		%read{31,6121} %write{2147483647,-1}
const	string	$const17	"voronoi"		%read{32,6347} %write{2147483647,-1}
temp	float	$tmp12	%read{35,35} %write{34,34}
temp	float	$tmp13	%read{34,34} %write{33,33}
temp	float	$tmp14	%read{38,38} %write{37,37}
temp	float	$tmp15	%read{37,37} %write{36,36}
temp	float	$tmp16	%read{41,41} %write{40,40}
const	int	$const18	2		%read{39,6483} %write{2147483647,-1}
temp	float	$tmp17	%read{40,40} %write{39,39}
const	float	$const19	1e+10		%read{42,6360} %write{2147483647,-1}
const	int	$const20	3		%read{45,6442} %write{2147483647,-1}
temp	int	$tmp18	%read{48,133} %write{48,133}
temp	int	$tmp19	%read{46,133} %write{47,133}
temp	int	$tmp20	%read{48,133} %write{48,133}
temp	int	$tmp21	%read{48,133} %write{48,133}
temp	int	$tmp22	%read{48,133} %write{48,133}
temp	int	$tmp23	%read{48,133} %write{48,133}
temp	float	$tmp24	%read{48,133} %write{48,133}
temp	float	$tmp25	%read{48,133} %write{48,133}
temp	float	$tmp26	%read{48,133} %write{48,133}
const	string	$const21	"cellnoise_color"		%read{62,6377} %write{2147483647,-1}
temp	point	$tmp27	%read{48,133} %write{48,133}
temp	float	$tmp28	%read{48,133} %write{48,133}
temp	float	$tmp29	%read{48,133} %write{48,133}
temp	float	$tmp30	%read{48,133} %write{48,133}
temp	point	$tmp31	%read{48,133} %write{48,133}
temp	float	$tmp32	%read{48,133} %write{48,133}
temp	float	$tmp33	%read{48,133} %write{48,133}
temp	float	$tmp34	%read{48,133} %write{48,133}
temp	point	$tmp35	%read{48,133} %write{48,133}
const	string	$const22	"voronoi_distance"		%read{77,6392} %write{2147483647,-1}
temp	point	$tmp36	%read{48,133} %write{48,133}
temp	float	$tmp37	%read{48,133} %write{48,133}
temp	float	$tmp38	%read{48,133} %write{48,133}
temp	float	$tmp39	%read{48,133} %write{48,133}
temp	float	$tmp40	%read{48,133} %write{48,133}
temp	int	$tmp41	%read{48,133} %write{48,133}
temp	float	$tmp42	%read{48,133} %write{48,133}
temp	float	$tmp43	%read{48,133} %write{48,133}
temp	float	$tmp44	%read{48,133} %write{48,133}
temp	point	$tmp45	%read{48,133} %write{48,133}
temp	point	$tmp46	%read{48,133} %write{48,133}
temp	point	$tmp47	%read{48,133} %write{48,133}
temp	float	$tmp48	%read{48,133} %write{48,133}
temp	int	$tmp49	%read{48,133} %write{48,133}
temp	float	$tmp50	%read{48,133} %write{48,133}
temp	float	$tmp51	%read{48,133} %write{48,133}
temp	point	$tmp52	%read{48,133} %write{48,133}
temp	point	$tmp53	%read{48,133} %write{48,133}
temp	float	$tmp54	%read{48,133} %write{48,133}
temp	int	$tmp55	%read{48,133} %write{48,133}
temp	float	$tmp56	%read{48,133} %write{48,133}
temp	point	$tmp57	%read{48,133} %write{48,133}
temp	float	$tmp58	%read{48,133} %write{48,133}
temp	int	$tmp59	%read{48,133} %write{48,133}
temp	int	$tmp60	%read{2147483647,-1} %write{48,133}
temp	int	$tmp61	%read{2147483647,-1} %write{48,133}
temp	int	$tmp62	%read{2147483647,-1} %write{48,133}
temp	float	$tmp63	%read{136,136} %write{135,135}
const	float	$const23	1		%read{136,6489} %write{2147483647,-1}
const	string	$const24	"Voronoi F2"		%read{138,5895} %write{2147483647,-1}
temp	int	$tmp64	%read{139,139} %write{138,138}
const	string	$const25	"voronoi_F2S"		%read{140,5897} %write{2147483647,-1}
temp	float	$tmp65	%read{246,246} %write{245,245}
const	string	$const26	"voronoi_F2"		%read{141,5898} %write{2147483647,-1}
temp	float	$tmp66	%read{146,146} %write{145,145}
temp	float	$tmp67	%read{145,145} %write{144,144}
temp	float	$tmp68	%read{149,149} %write{148,148}
temp	float	$tmp69	%read{148,148} %write{147,147}
temp	float	$tmp70	%read{152,152} %write{151,151}
temp	float	$tmp71	%read{151,151} %write{150,150}
temp	int	$tmp72	%read{159,244} %write{159,244}
temp	int	$tmp73	%read{157,244} %write{158,244}
temp	int	$tmp74	%read{159,244} %write{159,244}
temp	int	$tmp75	%read{159,244} %write{159,244}
temp	int	$tmp76	%read{159,244} %write{159,244}
temp	int	$tmp77	%read{159,244} %write{159,244}
temp	float	$tmp78	%read{159,244} %write{159,244}
temp	float	$tmp79	%read{159,244} %write{159,244}
temp	float	$tmp80	%read{159,244} %write{159,244}
temp	point	$tmp81	%read{159,244} %write{159,244}
temp	float	$tmp82	%read{159,244} %write{159,244}
temp	float	$tmp83	%read{159,244} %write{159,244}
temp	float	$tmp84	%read{159,244} %write{159,244}
temp	point	$tmp85	%read{159,244} %write{159,244}
temp	float	$tmp86	%read{159,244} %write{159,244}
temp	float	$tmp87	%read{159,244} %write{159,244}
temp	float	$tmp88	%read{159,244} %write{159,244}
temp	point	$tmp89	%read{159,244} %write{159,244}
temp	point	$tmp90	%read{159,244} %write{159,244}
temp	float	$tmp91	%read{159,244} %write{159,244}
temp	float	$tmp92	%read{159,244} %write{159,244}
temp	float	$tmp93	%read{159,244} %write{159,244}
temp	float	$tmp94	%read{159,244} %write{159,244}
temp	int	$tmp95	%read{159,244} %write{159,244}
temp	float	$tmp96	%read{159,244} %write{159,244}
temp	float	$tmp97	%read{159,244} %write{159,244}
temp	float	$tmp98	%read{159,244} %write{159,244}
temp	point	$tmp99	%read{159,244} %write{159,244}
temp	point	$tmp100	%read{159,244} %write{159,244}
temp	point	$tmp101	%read{159,244} %write{159,244}
temp	float	$tmp102	%read{159,244} %write{159,244}
temp	int	$tmp103	%read{159,244} %write{159,244}
temp	float	$tmp104	%read{159,244} %write{159,244}
temp	float	$tmp105	%read{159,244} %write{159,244}
temp	point	$tmp106	%read{159,244} %write{159,244}
temp	point	$tmp107	%read{159,244} %write{159,244}
temp	float	$tmp108	%read{159,244} %write{159,244}
temp	int	$tmp109	%read{159,244} %write{159,244}
temp	float	$tmp110	%read{159,244} %write{159,244}
temp	point	$tmp111	%read{159,244} %write{159,244}
temp	float	$tmp112	%read{159,244} %write{159,244}
temp	int	$tmp113	%read{159,244} %write{159,244}
temp	int	$tmp114	%read{2147483647,-1} %write{159,244}
temp	int	$tmp115	%read{2147483647,-1} %write{159,244}
temp	int	$tmp116	%read{2147483647,-1} %write{159,244}
temp	float	$tmp117	%read{247,247} %write{246,246}
const	string	$const27	"Voronoi F3"		%read{249,6006} %write{2147483647,-1}
temp	int	$tmp118	%read{250,250} %write{249,249}
const	string	$const28	"voronoi_F3S"		%read{251,6008} %write{2147483647,-1}
temp	float	$tmp119	%read{357,357} %write{356,356}
const	string	$const29	"voronoi_F3"		%read{252,6009} %write{2147483647,-1}
temp	float	$tmp120	%read{257,257} %write{256,256}
temp	float	$tmp121	%read{256,256} %write{255,255}
temp	float	$tmp122	%read{260,260} %write{259,259}
temp	float	$tmp123	%read{259,259} %write{258,258}
temp	float	$tmp124	%read{263,263} %write{262,262}
temp	float	$tmp125	%read{262,262} %write{261,261}
temp	int	$tmp126	%read{270,355} %write{270,355}
temp	int	$tmp127	%read{268,355} %write{269,355}
temp	int	$tmp128	%read{270,355} %write{270,355}
temp	int	$tmp129	%read{270,355} %write{270,355}
temp	int	$tmp130	%read{270,355} %write{270,355}
temp	int	$tmp131	%read{270,355} %write{270,355}
temp	float	$tmp132	%read{270,355} %write{270,355}
temp	float	$tmp133	%read{270,355} %write{270,355}
temp	float	$tmp134	%read{270,355} %write{270,355}
temp	point	$tmp135	%read{270,355} %write{270,355}
temp	float	$tmp136	%read{270,355} %write{270,355}
temp	float	$tmp137	%read{270,355} %write{270,355}
temp	float	$tmp138	%read{270,355} %write{270,355}
temp	point	$tmp139	%read{270,355} %write{270,355}
temp	float	$tmp140	%read{270,355} %write{270,355}
temp	float	$tmp141	%read{270,355} %write{270,355}
temp	float	$tmp142	%read{270,355} %write{270,355}
temp	point	$tmp143	%read{270,355} %write{270,355}
temp	point	$tmp144	%read{270,355} %write{270,355}
temp	float	$tmp145	%read{270,355} %write{270,355}
temp	float	$tmp146	%read{270,355} %write{270,355}
temp	float	$tmp147	%read{270,355} %write{270,355}
temp	float	$tmp148	%read{270,355} %write{270,355}
temp	int	$tmp149	%read{270,355} %write{270,355}
temp	float	$tmp150	%read{270,355} %write{270,355}
temp	float	$tmp151	%read{270,355} %write{270,355}
temp	float	$tmp152	%read{270,355} %write{270,355}
temp	point	$tmp153	%read{270,355} %write{270,355}
temp	point	$tmp154	%read{270,355} %write{270,355}
temp	point	$tmp155	%read{270,355} %write{270,355}
temp	float	$tmp156	%read{270,355} %write{270,355}
temp	int	$tmp157	%read{270,355} %write{270,355}
temp	float	$tmp158	%read{270,355} %write{270,355}
temp	float	$tmp159	%read{270,355} %write{270,355}
temp	point	$tmp160	%read{270,355} %write{270,355}
temp	point	$tmp161	%read{270,355} %write{270,355}
temp	float	$tmp162	%read{270,355} %write{270,355}
temp	int	$tmp163	%read{270,355} %write{270,355}
temp	float	$tmp164	%read{270,355} %write{270,355}
temp	point	$tmp165	%read{270,355} %write{270,355}
temp	float	$tmp166	%read{270,355} %write{270,355}
temp	int	$tmp167	%read{270,355} %write{270,355}
temp	int	$tmp168	%read{2147483647,-1} %write{270,355}
temp	int	$tmp169	%read{2147483647,-1} %write{270,355}
temp	int	$tmp170	%read{2147483647,-1} %write{270,355}
temp	float	$tmp171	%read{358,358} %write{357,357}
const	string	$const30	"Voronoi F4"		%read{360,6117} %write{2147483647,-1}
temp	int	$tmp172	%read{361,361} %write{360,360}
const	string	$const31	"voronoi_F4S"		%read{362,6119} %write{2147483647,-1}
temp	float	$tmp173	%read{468,468} %write{467,467}
const	string	$const32	"voronoi_F4"		%read{363,6120} %write{2147483647,-1}
temp	float	$tmp174	%read{368,368} %write{367,367}
temp	float	$tmp175	%read{367,367} %write{366,366}
temp	float	$tmp176	%read{371,371} %write{370,370}
temp	float	$tmp177	%read{370,370} %write{369,369}
temp	float	$tmp178	%read{374,374} %write{373,373}
temp	float	$tmp179	%read{373,373} %write{372,372}
temp	int	$tmp180	%read{381,466} %write{381,466}
temp	int	$tmp181	%read{379,466} %write{380,466}
temp	int	$tmp182	%read{381,466} %write{381,466}
temp	int	$tmp183	%read{381,466} %write{381,466}
temp	int	$tmp184	%read{381,466} %write{381,466}
temp	int	$tmp185	%read{381,466} %write{381,466}
temp	float	$tmp186	%read{381,466} %write{381,466}
temp	float	$tmp187	%read{381,466} %write{381,466}
temp	float	$tmp188	%read{381,466} %write{381,466}
temp	point	$tmp189	%read{381,466} %write{381,466}
temp	float	$tmp190	%read{381,466} %write{381,466}
temp	float	$tmp191	%read{381,466} %write{381,466}
temp	float	$tmp192	%read{381,466} %write{381,466}
temp	point	$tmp193	%read{381,466} %write{381,466}
temp	float	$tmp194	%read{381,466} %write{381,466}
temp	float	$tmp195	%read{381,466} %write{381,466}
temp	float	$tmp196	%read{381,466} %write{381,466}
temp	point	$tmp197	%read{381,466} %write{381,466}
temp	point	$tmp198	%read{381,466} %write{381,466}
temp	float	$tmp199	%read{381,466} %write{381,466}
temp	float	$tmp200	%read{381,466} %write{381,466}
temp	float	$tmp201	%read{381,466} %write{381,466}
temp	float	$tmp202	%read{381,466} %write{381,466}
temp	int	$tmp203	%read{381,466} %write{381,466}
temp	float	$tmp204	%read{381,466} %write{381,466}
temp	float	$tmp205	%read{381,466} %write{381,466}
temp	float	$tmp206	%read{381,466} %write{381,466}
temp	point	$tmp207	%read{381,466} %write{381,466}
temp	point	$tmp208	%read{381,466} %write{381,466}
temp	point	$tmp209	%read{381,466} %write{381,466}
temp	float	$tmp210	%read{381,466} %write{381,466}
temp	int	$tmp211	%read{381,466} %write{381,466}
temp	float	$tmp212	%read{381,466} %write{381,466}
temp	float	$tmp213	%read{381,466} %write{381,466}
temp	point	$tmp214	%read{381,466} %write{381,466}
temp	point	$tmp215	%read{381,466} %write{381,466}
temp	float	$tmp216	%read{381,466} %write{381,466}
temp	int	$tmp217	%read{381,466} %write{381,466}
temp	float	$tmp218	%read{381,466} %write{381,466}
temp	point	$tmp219	%read{381,466} %write{381,466}
temp	float	$tmp220	%read{381,466} %write{381,466}
temp	int	$tmp221	%read{381,466} %write{381,466}
temp	int	$tmp222	%read{2147483647,-1} %write{381,466}
temp	int	$tmp223	%read{2147483647,-1} %write{381,466}
temp	int	$tmp224	%read{2147483647,-1} %write{381,466}
temp	float	$tmp225	%read{469,469} %write{468,468}
const	string	$const33	"Voronoi F2-F1"		%read{471,6228} %write{2147483647,-1}
temp	int	$tmp226	%read{472,472} %write{471,471}
const	string	$const34	"voronoi_F1F2S"		%read{473,6230} %write{2147483647,-1}
temp	float	$tmp227	%read{581,581} %write{580,580}
const	string	$const35	"voronoi_F1F2"		%read{474,6345} %write{2147483647,-1}
const	string	$const36	"voronoi_FnFn"		%read{475,6346} %write{2147483647,-1}
temp	float	$tmp228	%read{479,479} %write{478,478}
temp	float	$tmp229	%read{478,478} %write{477,477}
temp	float	$tmp230	%read{482,482} %write{481,481}
temp	float	$tmp231	%read{481,481} %write{480,480}
temp	float	$tmp232	%read{485,485} %write{484,484}
temp	float	$tmp233	%read{484,484} %write{483,483}
temp	int	$tmp234	%read{492,577} %write{492,577}
temp	int	$tmp235	%read{490,577} %write{491,577}
temp	int	$tmp236	%read{492,577} %write{492,577}
temp	int	$tmp237	%read{492,577} %write{492,577}
temp	int	$tmp238	%read{492,577} %write{492,577}
temp	int	$tmp239	%read{492,577} %write{492,577}
temp	float	$tmp240	%read{492,577} %write{492,577}
temp	float	$tmp241	%read{492,577} %write{492,577}
temp	float	$tmp242	%read{492,577} %write{492,577}
temp	point	$tmp243	%read{492,577} %write{492,577}
temp	float	$tmp244	%read{492,577} %write{492,577}
temp	float	$tmp245	%read{492,577} %write{492,577}
temp	float	$tmp246	%read{492,577} %write{492,577}
temp	point	$tmp247	%read{492,577} %write{492,577}
temp	float	$tmp248	%read{492,577} %write{492,577}
temp	float	$tmp249	%read{492,577} %write{492,577}
temp	float	$tmp250	%read{492,577} %write{492,577}
temp	point	$tmp251	%read{492,577} %write{492,577}
temp	point	$tmp252	%read{492,577} %write{492,577}
temp	float	$tmp253	%read{492,577} %write{492,577}
temp	float	$tmp254	%read{492,577} %write{492,577}
temp	float	$tmp255	%read{492,577} %write{492,577}
temp	float	$tmp256	%read{492,577} %write{492,577}
temp	int	$tmp257	%read{492,577} %write{492,577}
temp	float	$tmp258	%read{492,577} %write{492,577}
temp	float	$tmp259	%read{492,577} %write{492,577}
temp	float	$tmp260	%read{492,577} %write{492,577}
temp	point	$tmp261	%read{492,577} %write{492,577}
temp	point	$tmp262	%read{492,577} %write{492,577}
temp	point	$tmp263	%read{492,577} %write{492,577}
temp	float	$tmp264	%read{492,577} %write{492,577}
temp	int	$tmp265	%read{492,577} %write{492,577}
temp	float	$tmp266	%read{492,577} %write{492,577}
temp	float	$tmp267	%read{492,577} %write{492,577}
temp	point	$tmp268	%read{492,577} %write{492,577}
temp	point	$tmp269	%read{492,577} %write{492,577}
temp	float	$tmp270	%read{492,577} %write{492,577}
temp	int	$tmp271	%read{492,577} %write{492,577}
temp	float	$tmp272	%read{492,577} %write{492,577}
temp	point	$tmp273	%read{492,577} %write{492,577}
temp	float	$tmp274	%read{492,577} %write{492,577}
temp	int	$tmp275	%read{492,577} %write{492,577}
temp	int	$tmp276	%read{2147483647,-1} %write{492,577}
temp	int	$tmp277	%read{2147483647,-1} %write{492,577}
temp	int	$tmp278	%read{2147483647,-1} %write{492,577}
temp	float	$tmp279	%read{580,580} %write{578,578}
temp	float	$tmp280	%read{580,580} %write{579,579}
temp	float	$tmp281	%read{582,582} %write{581,581}
const	string	$const37	"Voronoi Crackle"		%read{584,6341} %write{2147483647,-1}
temp	int	$tmp282	%read{585,585} %write{584,584}
const	string	$const38	"voronoi_CrS"		%read{586,6343} %write{2147483647,-1}
temp	float	$tmp283	%read{701,701} %write{698,699}
const	string	$const39	"voronoi_Cr"		%read{587,6344} %write{2147483647,-1}
const	float	$const40	10		%read{695,6452} %write{2147483647,-1}
temp	float	$tmp284	%read{695,695} %write{694,694}
temp	float	$tmp285	%read{593,593} %write{592,592}
temp	float	$tmp286	%read{592,592} %write{591,591}
temp	float	$tmp287	%read{596,596} %write{595,595}
temp	float	$tmp288	%read{595,595} %write{594,594}
temp	float	$tmp289	%read{599,599} %write{598,598}
temp	float	$tmp290	%read{598,598} %write{597,597}
temp	int	$tmp291	%read{606,691} %write{606,691}
temp	int	$tmp292	%read{604,691} %write{605,691}
temp	int	$tmp293	%read{606,691} %write{606,691}
temp	int	$tmp294	%read{606,691} %write{606,691}
temp	int	$tmp295	%read{606,691} %write{606,691}
temp	int	$tmp296	%read{606,691} %write{606,691}
temp	float	$tmp297	%read{606,691} %write{606,691}
temp	float	$tmp298	%read{606,691} %write{606,691}
temp	float	$tmp299	%read{606,691} %write{606,691}
temp	point	$tmp300	%read{606,691} %write{606,691}
temp	float	$tmp301	%read{606,691} %write{606,691}
temp	float	$tmp302	%read{606,691} %write{606,691}
temp	float	$tmp303	%read{606,691} %write{606,691}
temp	point	$tmp304	%read{606,691} %write{606,691}
temp	float	$tmp305	%read{606,691} %write{606,691}
temp	float	$tmp306	%read{606,691} %write{606,691}
temp	float	$tmp307	%read{606,691} %write{606,691}
temp	point	$tmp308	%read{606,691} %write{606,691}
temp	point	$tmp309	%read{606,691} %write{606,691}
temp	float	$tmp310	%read{606,691} %write{606,691}
temp	float	$tmp311	%read{606,691} %write{606,691}
temp	float	$tmp312	%read{606,691} %write{606,691}
temp	float	$tmp313	%read{606,691} %write{606,691}
temp	int	$tmp314	%read{606,691} %write{606,691}
temp	float	$tmp315	%read{606,691} %write{606,691}
temp	float	$tmp316	%read{606,691} %write{606,691}
temp	float	$tmp317	%read{606,691} %write{606,691}
temp	point	$tmp318	%read{606,691} %write{606,691}
temp	point	$tmp319	%read{606,691} %write{606,691}
temp	point	$tmp320	%read{606,691} %write{606,691}
temp	float	$tmp321	%read{606,691} %write{606,691}
temp	int	$tmp322	%read{606,691} %write{606,691}
temp	float	$tmp323	%read{606,691} %write{606,691}
temp	float	$tmp324	%read{606,691} %write{606,691}
temp	point	$tmp325	%read{606,691} %write{606,691}
temp	point	$tmp326	%read{606,691} %write{606,691}
temp	float	$tmp327	%read{606,691} %write{606,691}
temp	int	$tmp328	%read{606,691} %write{606,691}
temp	float	$tmp329	%read{606,691} %write{606,691}
temp	point	$tmp330	%read{606,691} %write{606,691}
temp	float	$tmp331	%read{606,691} %write{606,691}
temp	int	$tmp332	%read{606,691} %write{606,691}
temp	int	$tmp333	%read{2147483647,-1} %write{606,691}
temp	int	$tmp334	%read{2147483647,-1} %write{606,691}
temp	int	$tmp335	%read{2147483647,-1} %write{606,691}
temp	float	$tmp336	%read{694,694} %write{692,692}
temp	float	$tmp337	%read{694,694} %write{693,693}
temp	int	$tmp338	%read{697,697} %write{696,696}
temp	float	$tmp339	%read{702,702} %write{701,701}
const	string	$const41	"Cell Noise"		%read{704,6461} %write{2147483647,-1}
temp	int	$tmp340	%read{705,705} %write{704,704}
temp	float	$tmp341	%read{710,710} %write{709,709}
temp	float	$tmp342	%read{1409,1409} %write{723,1408}
temp	int	$tmp343	%read{713,713} %write{712,712}
temp	int	$tmp344	%read{717,717} %write{716,716}
temp	int	$tmp345	%read{721,721} %write{720,720}
temp	int	$tmp346	%read{722,722} %write{721,721}
temp	int	$tmp347	%read{728,728} %write{727,727}
temp	float	$tmp348	%read{835,835} %write{834,834}
temp	float	$tmp349	%read{735,735} %write{734,734}
temp	float	$tmp350	%read{734,734} %write{733,733}
temp	float	$tmp351	%read{738,738} %write{737,737}
temp	float	$tmp352	%read{737,737} %write{736,736}
temp	float	$tmp353	%read{741,741} %write{740,740}
temp	float	$tmp354	%read{740,740} %write{739,739}
temp	int	$tmp355	%read{748,833} %write{748,833}
temp	int	$tmp356	%read{746,833} %write{747,833}
temp	int	$tmp357	%read{748,833} %write{748,833}
temp	int	$tmp358	%read{748,833} %write{748,833}
temp	int	$tmp359	%read{748,833} %write{748,833}
temp	int	$tmp360	%read{748,833} %write{748,833}
temp	float	$tmp361	%read{748,833} %write{748,833}
temp	float	$tmp362	%read{748,833} %write{748,833}
temp	float	$tmp363	%read{748,833} %write{748,833}
temp	point	$tmp364	%read{748,833} %write{748,833}
temp	float	$tmp365	%read{748,833} %write{748,833}
temp	float	$tmp366	%read{748,833} %write{748,833}
temp	float	$tmp367	%read{748,833} %write{748,833}
temp	point	$tmp368	%read{748,833} %write{748,833}
temp	float	$tmp369	%read{748,833} %write{748,833}
temp	float	$tmp370	%read{748,833} %write{748,833}
temp	float	$tmp371	%read{748,833} %write{748,833}
temp	point	$tmp372	%read{748,833} %write{748,833}
temp	point	$tmp373	%read{748,833} %write{748,833}
temp	float	$tmp374	%read{748,833} %write{748,833}
temp	float	$tmp375	%read{748,833} %write{748,833}
temp	float	$tmp376	%read{748,833} %write{748,833}
temp	float	$tmp377	%read{748,833} %write{748,833}
temp	int	$tmp378	%read{748,833} %write{748,833}
temp	float	$tmp379	%read{748,833} %write{748,833}
temp	float	$tmp380	%read{748,833} %write{748,833}
temp	float	$tmp381	%read{748,833} %write{748,833}
temp	point	$tmp382	%read{748,833} %write{748,833}
temp	point	$tmp383	%read{748,833} %write{748,833}
temp	point	$tmp384	%read{748,833} %write{748,833}
temp	float	$tmp385	%read{748,833} %write{748,833}
temp	int	$tmp386	%read{748,833} %write{748,833}
temp	float	$tmp387	%read{748,833} %write{748,833}
temp	float	$tmp388	%read{748,833} %write{748,833}
temp	point	$tmp389	%read{748,833} %write{748,833}
temp	point	$tmp390	%read{748,833} %write{748,833}
temp	float	$tmp391	%read{748,833} %write{748,833}
temp	int	$tmp392	%read{748,833} %write{748,833}
temp	float	$tmp393	%read{748,833} %write{748,833}
temp	point	$tmp394	%read{748,833} %write{748,833}
temp	float	$tmp395	%read{748,833} %write{748,833}
temp	int	$tmp396	%read{748,833} %write{748,833}
temp	int	$tmp397	%read{2147483647,-1} %write{748,833}
temp	int	$tmp398	%read{2147483647,-1} %write{748,833}
temp	int	$tmp399	%read{2147483647,-1} %write{748,833}
temp	float	$tmp400	%read{836,836} %write{835,835}
temp	int	$tmp401	%read{839,839} %write{838,838}
temp	float	$tmp402	%read{946,946} %write{945,945}
temp	float	$tmp403	%read{846,846} %write{845,845}
temp	float	$tmp404	%read{845,845} %write{844,844}
temp	float	$tmp405	%read{849,849} %write{848,848}
temp	float	$tmp406	%read{848,848} %write{847,847}
temp	float	$tmp407	%read{852,852} %write{851,851}
temp	float	$tmp408	%read{851,851} %write{850,850}
temp	int	$tmp409	%read{859,944} %write{859,944}
temp	int	$tmp410	%read{857,944} %write{858,944}
temp	int	$tmp411	%read{859,944} %write{859,944}
temp	int	$tmp412	%read{859,944} %write{859,944}
temp	int	$tmp413	%read{859,944} %write{859,944}
temp	int	$tmp414	%read{859,944} %write{859,944}
temp	float	$tmp415	%read{859,944} %write{859,944}
temp	float	$tmp416	%read{859,944} %write{859,944}
temp	float	$tmp417	%read{859,944} %write{859,944}
temp	point	$tmp418	%read{859,944} %write{859,944}
temp	float	$tmp419	%read{859,944} %write{859,944}
temp	float	$tmp420	%read{859,944} %write{859,944}
temp	float	$tmp421	%read{859,944} %write{859,944}
temp	point	$tmp422	%read{859,944} %write{859,944}
temp	float	$tmp423	%read{859,944} %write{859,944}
temp	float	$tmp424	%read{859,944} %write{859,944}
temp	float	$tmp425	%read{859,944} %write{859,944}
temp	point	$tmp426	%read{859,944} %write{859,944}
temp	point	$tmp427	%read{859,944} %write{859,944}
temp	float	$tmp428	%read{859,944} %write{859,944}
temp	float	$tmp429	%read{859,944} %write{859,944}
temp	float	$tmp430	%read{859,944} %write{859,944}
temp	float	$tmp431	%read{859,944} %write{859,944}
temp	int	$tmp432	%read{859,944} %write{859,944}
temp	float	$tmp433	%read{859,944} %write{859,944}
temp	float	$tmp434	%read{859,944} %write{859,944}
temp	float	$tmp435	%read{859,944} %write{859,944}
temp	point	$tmp436	%read{859,944} %write{859,944}
temp	point	$tmp437	%read{859,944} %write{859,944}
temp	point	$tmp438	%read{859,944} %write{859,944}
temp	float	$tmp439	%read{859,944} %write{859,944}
temp	int	$tmp440	%read{859,944} %write{859,944}
temp	float	$tmp441	%read{859,944} %write{859,944}
temp	float	$tmp442	%read{859,944} %write{859,944}
temp	point	$tmp443	%read{859,944} %write{859,944}
temp	point	$tmp444	%read{859,944} %write{859,944}
temp	float	$tmp445	%read{859,944} %write{859,944}
temp	int	$tmp446	%read{859,944} %write{859,944}
temp	float	$tmp447	%read{859,944} %write{859,944}
temp	point	$tmp448	%read{859,944} %write{859,944}
temp	float	$tmp449	%read{859,944} %write{859,944}
temp	int	$tmp450	%read{859,944} %write{859,944}
temp	int	$tmp451	%read{2147483647,-1} %write{859,944}
temp	int	$tmp452	%read{2147483647,-1} %write{859,944}
temp	int	$tmp453	%read{2147483647,-1} %write{859,944}
temp	float	$tmp454	%read{947,947} %write{946,946}
temp	int	$tmp455	%read{950,950} %write{949,949}
temp	float	$tmp456	%read{1057,1057} %write{1056,1056}
temp	float	$tmp457	%read{957,957} %write{956,956}
temp	float	$tmp458	%read{956,956} %write{955,955}
temp	float	$tmp459	%read{960,960} %write{959,959}
temp	float	$tmp460	%read{959,959} %write{958,958}
temp	float	$tmp461	%read{963,963} %write{962,962}
temp	float	$tmp462	%read{962,962} %write{961,961}
temp	int	$tmp463	%read{970,1055} %write{970,1055}
temp	int	$tmp464	%read{968,1055} %write{969,1055}
temp	int	$tmp465	%read{970,1055} %write{970,1055}
temp	int	$tmp466	%read{970,1055} %write{970,1055}
temp	int	$tmp467	%read{970,1055} %write{970,1055}
temp	int	$tmp468	%read{970,1055} %write{970,1055}
temp	float	$tmp469	%read{970,1055} %write{970,1055}
temp	float	$tmp470	%read{970,1055} %write{970,1055}
temp	float	$tmp471	%read{970,1055} %write{970,1055}
temp	point	$tmp472	%read{970,1055} %write{970,1055}
temp	float	$tmp473	%read{970,1055} %write{970,1055}
temp	float	$tmp474	%read{970,1055} %write{970,1055}
temp	float	$tmp475	%read{970,1055} %write{970,1055}
temp	point	$tmp476	%read{970,1055} %write{970,1055}
temp	float	$tmp477	%read{970,1055} %write{970,1055}
temp	float	$tmp478	%read{970,1055} %write{970,1055}
temp	float	$tmp479	%read{970,1055} %write{970,1055}
temp	point	$tmp480	%read{970,1055} %write{970,1055}
temp	point	$tmp481	%read{970,1055} %write{970,1055}
temp	float	$tmp482	%read{970,1055} %write{970,1055}
temp	float	$tmp483	%read{970,1055} %write{970,1055}
temp	float	$tmp484	%read{970,1055} %write{970,1055}
temp	float	$tmp485	%read{970,1055} %write{970,1055}
temp	int	$tmp486	%read{970,1055} %write{970,1055}
temp	float	$tmp487	%read{970,1055} %write{970,1055}
temp	float	$tmp488	%read{970,1055} %write{970,1055}
temp	float	$tmp489	%read{970,1055} %write{970,1055}
temp	point	$tmp490	%read{970,1055} %write{970,1055}
temp	point	$tmp491	%read{970,1055} %write{970,1055}
temp	point	$tmp492	%read{970,1055} %write{970,1055}
temp	float	$tmp493	%read{970,1055} %write{970,1055}
temp	int	$tmp494	%read{970,1055} %write{970,1055}
temp	float	$tmp495	%read{970,1055} %write{970,1055}
temp	float	$tmp496	%read{970,1055} %write{970,1055}
temp	point	$tmp497	%read{970,1055} %write{970,1055}
temp	point	$tmp498	%read{970,1055} %write{970,1055}
temp	float	$tmp499	%read{970,1055} %write{970,1055}
temp	int	$tmp500	%read{970,1055} %write{970,1055}
temp	float	$tmp501	%read{970,1055} %write{970,1055}
temp	point	$tmp502	%read{970,1055} %write{970,1055}
temp	float	$tmp503	%read{970,1055} %write{970,1055}
temp	int	$tmp504	%read{970,1055} %write{970,1055}
temp	int	$tmp505	%read{2147483647,-1} %write{970,1055}
temp	int	$tmp506	%read{2147483647,-1} %write{970,1055}
temp	int	$tmp507	%read{2147483647,-1} %write{970,1055}
temp	float	$tmp508	%read{1058,1058} %write{1057,1057}
temp	int	$tmp509	%read{1061,1061} %write{1060,1060}
temp	float	$tmp510	%read{1168,1168} %write{1167,1167}
temp	float	$tmp511	%read{1068,1068} %write{1067,1067}
temp	float	$tmp512	%read{1067,1067} %write{1066,1066}
temp	float	$tmp513	%read{1071,1071} %write{1070,1070}
temp	float	$tmp514	%read{1070,1070} %write{1069,1069}
temp	float	$tmp515	%read{1074,1074} %write{1073,1073}
temp	float	$tmp516	%read{1073,1073} %write{1072,1072}
temp	int	$tmp517	%read{1081,1166} %write{1081,1166}
temp	int	$tmp518	%read{1079,1166} %write{1080,1166}
temp	int	$tmp519	%read{1081,1166} %write{1081,1166}
temp	int	$tmp520	%read{1081,1166} %write{1081,1166}
temp	int	$tmp521	%read{1081,1166} %write{1081,1166}
temp	int	$tmp522	%read{1081,1166} %write{1081,1166}
temp	float	$tmp523	%read{1081,1166} %write{1081,1166}
temp	float	$tmp524	%read{1081,1166} %write{1081,1166}
temp	float	$tmp525	%read{1081,1166} %write{1081,1166}
temp	point	$tmp526	%read{1081,1166} %write{1081,1166}
temp	float	$tmp527	%read{1081,1166} %write{1081,1166}
temp	float	$tmp528	%read{1081,1166} %write{1081,1166}
temp	float	$tmp529	%read{1081,1166} %write{1081,1166}
temp	point	$tmp530	%read{1081,1166} %write{1081,1166}
temp	float	$tmp531	%read{1081,1166} %write{1081,1166}
temp	float	$tmp532	%read{1081,1166} %write{1081,1166}
temp	float	$tmp533	%read{1081,1166} %write{1081,1166}
temp	point	$tmp534	%read{1081,1166} %write{1081,1166}
temp	point	$tmp535	%read{1081,1166} %write{1081,1166}
temp	float	$tmp536	%read{1081,1166} %write{1081,1166}
temp	float	$tmp537	%read{1081,1166} %write{1081,1166}
temp	float	$tmp538	%read{1081,1166} %write{1081,1166}
temp	float	$tmp539	%read{1081,1166} %write{1081,1166}
temp	int	$tmp540	%read{1081,1166} %write{1081,1166}
temp	float	$tmp541	%read{1081,1166} %write{1081,1166}
temp	float	$tmp542	%read{1081,1166} %write{1081,1166}
temp	float	$tmp543	%read{1081,1166} %write{1081,1166}
temp	point	$tmp544	%read{1081,1166} %write{1081,1166}
temp	point	$tmp545	%read{1081,1166} %write{1081,1166}
temp	point	$tmp546	%read{1081,1166} %write{1081,1166}
temp	float	$tmp547	%read{1081,1166} %write{1081,1166}
temp	int	$tmp548	%read{1081,1166} %write{1081,1166}
temp	float	$tmp549	%read{1081,1166} %write{1081,1166}
temp	float	$tmp550	%read{1081,1166} %write{1081,1166}
temp	point	$tmp551	%read{1081,1166} %write{1081,1166}
temp	point	$tmp552	%read{1081,1166} %write{1081,1166}
temp	float	$tmp553	%read{1081,1166} %write{1081,1166}
temp	int	$tmp554	%read{1081,1166} %write{1081,1166}
temp	float	$tmp555	%read{1081,1166} %write{1081,1166}
temp	point	$tmp556	%read{1081,1166} %write{1081,1166}
temp	float	$tmp557	%read{1081,1166} %write{1081,1166}
temp	int	$tmp558	%read{1081,1166} %write{1081,1166}
temp	int	$tmp559	%read{2147483647,-1} %write{1081,1166}
temp	int	$tmp560	%read{2147483647,-1} %write{1081,1166}
temp	int	$tmp561	%read{2147483647,-1} %write{1081,1166}
temp	float	$tmp562	%read{1169,1169} %write{1168,1168}
temp	int	$tmp563	%read{1172,1172} %write{1171,1171}
temp	float	$tmp564	%read{1281,1281} %write{1280,1280}
temp	float	$tmp565	%read{1179,1179} %write{1178,1178}
temp	float	$tmp566	%read{1178,1178} %write{1177,1177}
temp	float	$tmp567	%read{1182,1182} %write{1181,1181}
temp	float	$tmp568	%read{1181,1181} %write{1180,1180}
temp	float	$tmp569	%read{1185,1185} %write{1184,1184}
temp	float	$tmp570	%read{1184,1184} %write{1183,1183}
temp	int	$tmp571	%read{1192,1277} %write{1192,1277}
temp	int	$tmp572	%read{1190,1277} %write{1191,1277}
temp	int	$tmp573	%read{1192,1277} %write{1192,1277}
temp	int	$tmp574	%read{1192,1277} %write{1192,1277}
temp	int	$tmp575	%read{1192,1277} %write{1192,1277}
temp	int	$tmp576	%read{1192,1277} %write{1192,1277}
temp	float	$tmp577	%read{1192,1277} %write{1192,1277}
temp	float	$tmp578	%read{1192,1277} %write{1192,1277}
temp	float	$tmp579	%read{1192,1277} %write{1192,1277}
temp	point	$tmp580	%read{1192,1277} %write{1192,1277}
temp	float	$tmp581	%read{1192,1277} %write{1192,1277}
temp	float	$tmp582	%read{1192,1277} %write{1192,1277}
temp	float	$tmp583	%read{1192,1277} %write{1192,1277}
temp	point	$tmp584	%read{1192,1277} %write{1192,1277}
temp	float	$tmp585	%read{1192,1277} %write{1192,1277}
temp	float	$tmp586	%read{1192,1277} %write{1192,1277}
temp	float	$tmp587	%read{1192,1277} %write{1192,1277}
temp	point	$tmp588	%read{1192,1277} %write{1192,1277}
temp	point	$tmp589	%read{1192,1277} %write{1192,1277}
temp	float	$tmp590	%read{1192,1277} %write{1192,1277}
temp	float	$tmp591	%read{1192,1277} %write{1192,1277}
temp	float	$tmp592	%read{1192,1277} %write{1192,1277}
temp	float	$tmp593	%read{1192,1277} %write{1192,1277}
temp	int	$tmp594	%read{1192,1277} %write{1192,1277}
temp	float	$tmp595	%read{1192,1277} %write{1192,1277}
temp	float	$tmp596	%read{1192,1277} %write{1192,1277}
temp	float	$tmp597	%read{1192,1277} %write{1192,1277}
temp	point	$tmp598	%read{1192,1277} %write{1192,1277}
temp	point	$tmp599	%read{1192,1277} %write{1192,1277}
temp	point	$tmp600	%read{1192,1277} %write{1192,1277}
temp	float	$tmp601	%read{1192,1277} %write{1192,1277}
temp	int	$tmp602	%read{1192,1277} %write{1192,1277}
temp	float	$tmp603	%read{1192,1277} %write{1192,1277}
temp	float	$tmp604	%read{1192,1277} %write{1192,1277}
temp	point	$tmp605	%read{1192,1277} %write{1192,1277}
temp	point	$tmp606	%read{1192,1277} %write{1192,1277}
temp	float	$tmp607	%read{1192,1277} %write{1192,1277}
temp	int	$tmp608	%read{1192,1277} %write{1192,1277}
temp	float	$tmp609	%read{1192,1277} %write{1192,1277}
temp	point	$tmp610	%read{1192,1277} %write{1192,1277}
temp	float	$tmp611	%read{1192,1277} %write{1192,1277}
temp	int	$tmp612	%read{1192,1277} %write{1192,1277}
temp	int	$tmp613	%read{2147483647,-1} %write{1192,1277}
temp	int	$tmp614	%read{2147483647,-1} %write{1192,1277}
temp	int	$tmp615	%read{2147483647,-1} %write{1192,1277}
temp	float	$tmp616	%read{1280,1280} %write{1278,1278}
temp	float	$tmp617	%read{1280,1280} %write{1279,1279}
temp	float	$tmp618	%read{1282,1282} %write{1281,1281}
temp	int	$tmp619	%read{1285,1285} %write{1284,1284}
temp	float	$tmp620	%read{1401,1401} %write{1398,1399}
temp	float	$tmp621	%read{1395,1395} %write{1394,1394}
temp	float	$tmp622	%read{1293,1293} %write{1292,1292}
temp	float	$tmp623	%read{1292,1292} %write{1291,1291}
temp	float	$tmp624	%read{1296,1296} %write{1295,1295}
temp	float	$tmp625	%read{1295,1295} %write{1294,1294}
temp	float	$tmp626	%read{1299,1299} %write{1298,1298}
temp	float	$tmp627	%read{1298,1298} %write{1297,1297}
temp	int	$tmp628	%read{1306,1391} %write{1306,1391}
temp	int	$tmp629	%read{1304,1391} %write{1305,1391}
temp	int	$tmp630	%read{1306,1391} %write{1306,1391}
temp	int	$tmp631	%read{1306,1391} %write{1306,1391}
temp	int	$tmp632	%read{1306,1391} %write{1306,1391}
temp	int	$tmp633	%read{1306,1391} %write{1306,1391}
temp	float	$tmp634	%read{1306,1391} %write{1306,1391}
temp	float	$tmp635	%read{1306,1391} %write{1306,1391}
temp	float	$tmp636	%read{1306,1391} %write{1306,1391}
temp	point	$tmp637	%read{1306,1391} %write{1306,1391}
temp	float	$tmp638	%read{1306,1391} %write{1306,1391}
temp	float	$tmp639	%read{1306,1391} %write{1306,1391}
temp	float	$tmp640	%read{1306,1391} %write{1306,1391}
temp	point	$tmp641	%read{1306,1391} %write{1306,1391}
temp	float	$tmp642	%read{1306,1391} %write{1306,1391}
temp	float	$tmp643	%read{1306,1391} %write{1306,1391}
temp	float	$tmp644	%read{1306,1391} %write{1306,1391}
temp	point	$tmp645	%read{1306,1391} %write{1306,1391}
temp	point	$tmp646	%read{1306,1391} %write{1306,1391}
temp	float	$tmp647	%read{1306,1391} %write{1306,1391}
temp	float	$tmp648	%read{1306,1391} %write{1306,1391}
temp	float	$tmp649	%read{1306,1391} %write{1306,1391}
temp	float	$tmp650	%read{1306,1391} %write{1306,1391}
temp	int	$tmp651	%read{1306,1391} %write{1306,1391}
temp	float	$tmp652	%read{1306,1391} %write{1306,1391}
temp	float	$tmp653	%read{1306,1391} %write{1306,1391}
temp	float	$tmp654	%read{1306,1391} %write{1306,1391}
temp	point	$tmp655	%read{1306,1391} %write{1306,1391}
temp	point	$tmp656	%read{1306,1391} %write{1306,1391}
temp	point	$tmp657	%read{1306,1391} %write{1306,1391}
temp	float	$tmp658	%read{1306,1391} %write{1306,1391}
temp	int	$tmp659	%read{1306,1391} %write{1306,1391}
temp	float	$tmp660	%read{1306,1391} %write{1306,1391}
temp	float	$tmp661	%read{1306,1391} %write{1306,1391}
temp	point	$tmp662	%read{1306,1391} %write{1306,1391}
temp	point	$tmp663	%read{1306,1391} %write{1306,1391}
temp	float	$tmp664	%read{1306,1391} %write{1306,1391}
temp	int	$tmp665	%read{1306,1391} %write{1306,1391}
temp	float	$tmp666	%read{1306,1391} %write{1306,1391}
temp	point	$tmp667	%read{1306,1391} %write{1306,1391}
temp	float	$tmp668	%read{1306,1391} %write{1306,1391}
temp	int	$tmp669	%read{1306,1391} %write{1306,1391}
temp	int	$tmp670	%read{2147483647,-1} %write{1306,1391}
temp	int	$tmp671	%read{2147483647,-1} %write{1306,1391}
temp	int	$tmp672	%read{2147483647,-1} %write{1306,1391}
temp	float	$tmp673	%read{1394,1394} %write{1392,1392}
temp	float	$tmp674	%read{1394,1394} %write{1393,1393}
temp	int	$tmp675	%read{1397,1397} %write{1396,1396}
temp	float	$tmp676	%read{1402,1402} %write{1401,1401}
temp	int	$tmp677	%read{1405,1405} %write{1404,1404}
temp	float	$tmp678	%read{1410,1410} %write{1409,1409}
temp	float	$tmp679	%read{2110,2110} %write{1424,2109}
temp	vector	$tmp681	%read{1419,2107} %write{1411,1411}
temp	int	$tmp682	%read{1414,1414} %write{1413,1413}
temp	int	$tmp683	%read{1418,1418} %write{1417,1417}
temp	int	$tmp684	%read{1422,1422} %write{1421,1421}
temp	int	$tmp685	%read{1423,1423} %write{1422,1422}
temp	int	$tmp686	%read{1429,1429} %write{1428,1428}
temp	float	$tmp687	%read{1536,1536} %write{1535,1535}
temp	float	$tmp688	%read{1436,1436} %write{1435,1435}
temp	float	$tmp689	%read{1435,1435} %write{1434,1434}
temp	float	$tmp690	%read{1439,1439} %write{1438,1438}
temp	float	$tmp691	%read{1438,1438} %write{1437,1437}
temp	float	$tmp692	%read{1442,1442} %write{1441,1441}
temp	float	$tmp693	%read{1441,1441} %write{1440,1440}
temp	int	$tmp694	%read{1449,1534} %write{1449,1534}
temp	int	$tmp695	%read{1447,1534} %write{1448,1534}
temp	int	$tmp696	%read{1449,1534} %write{1449,1534}
temp	int	$tmp697	%read{1449,1534} %write{1449,1534}
temp	int	$tmp698	%read{1449,1534} %write{1449,1534}
temp	int	$tmp699	%read{1449,1534} %write{1449,1534}
temp	float	$tmp700	%read{1449,1534} %write{1449,1534}
temp	float	$tmp701	%read{1449,1534} %write{1449,1534}
temp	float	$tmp702	%read{1449,1534} %write{1449,1534}
temp	point	$tmp703	%read{1449,1534} %write{1449,1534}
temp	float	$tmp704	%read{1449,1534} %write{1449,1534}
temp	float	$tmp705	%read{1449,1534} %write{1449,1534}
temp	float	$tmp706	%read{1449,1534} %write{1449,1534}
temp	point	$tmp707	%read{1449,1534} %write{1449,1534}
temp	float	$tmp708	%read{1449,1534} %write{1449,1534}
temp	float	$tmp709	%read{1449,1534} %write{1449,1534}
temp	float	$tmp710	%read{1449,1534} %write{1449,1534}
temp	point	$tmp711	%read{1449,1534} %write{1449,1534}
temp	point	$tmp712	%read{1449,1534} %write{1449,1534}
temp	float	$tmp713	%read{1449,1534} %write{1449,1534}
temp	float	$tmp714	%read{1449,1534} %write{1449,1534}
temp	float	$tmp715	%read{1449,1534} %write{1449,1534}
temp	float	$tmp716	%read{1449,1534} %write{1449,1534}
temp	int	$tmp717	%read{1449,1534} %write{1449,1534}
temp	float	$tmp718	%read{1449,1534} %write{1449,1534}
temp	float	$tmp719	%read{1449,1534} %write{1449,1534}
temp	float	$tmp720	%read{1449,1534} %write{1449,1534}
temp	point	$tmp721	%read{1449,1534} %write{1449,1534}
temp	point	$tmp722	%read{1449,1534} %write{1449,1534}
temp	point	$tmp723	%read{1449,1534} %write{1449,1534}
temp	float	$tmp724	%read{1449,1534} %write{1449,1534}
temp	int	$tmp725	%read{1449,1534} %write{1449,1534}
temp	float	$tmp726	%read{1449,1534} %write{1449,1534}
temp	float	$tmp727	%read{1449,1534} %write{1449,1534}
temp	point	$tmp728	%read{1449,1534} %write{1449,1534}
temp	point	$tmp729	%read{1449,1534} %write{1449,1534}
temp	float	$tmp730	%read{1449,1534} %write{1449,1534}
temp	int	$tmp731	%read{1449,1534} %write{1449,1534}
temp	float	$tmp732	%read{1449,1534} %write{1449,1534}
temp	point	$tmp733	%read{1449,1534} %write{1449,1534}
temp	float	$tmp734	%read{1449,1534} %write{1449,1534}
temp	int	$tmp735	%read{1449,1534} %write{1449,1534}
temp	int	$tmp736	%read{2147483647,-1} %write{1449,1534}
temp	int	$tmp737	%read{2147483647,-1} %write{1449,1534}
temp	int	$tmp738	%read{2147483647,-1} %write{1449,1534}
temp	float	$tmp739	%read{1537,1537} %write{1536,1536}
temp	int	$tmp740	%read{1540,1540} %write{1539,1539}
temp	float	$tmp741	%read{1647,1647} %write{1646,1646}
temp	float	$tmp742	%read{1547,1547} %write{1546,1546}
temp	float	$tmp743	%read{1546,1546} %write{1545,1545}
temp	float	$tmp744	%read{1550,1550} %write{1549,1549}
temp	float	$tmp745	%read{1549,1549} %write{1548,1548}
temp	float	$tmp746	%read{1553,1553} %write{1552,1552}
temp	float	$tmp747	%read{1552,1552} %write{1551,1551}
temp	int	$tmp748	%read{1560,1645} %write{1560,1645}
temp	int	$tmp749	%read{1558,1645} %write{1559,1645}
temp	int	$tmp750	%read{1560,1645} %write{1560,1645}
temp	int	$tmp751	%read{1560,1645} %write{1560,1645}
temp	int	$tmp752	%read{1560,1645} %write{1560,1645}
temp	int	$tmp753	%read{1560,1645} %write{1560,1645}
temp	float	$tmp754	%read{1560,1645} %write{1560,1645}
temp	float	$tmp755	%read{1560,1645} %write{1560,1645}
temp	float	$tmp756	%read{1560,1645} %write{1560,1645}
temp	point	$tmp757	%read{1560,1645} %write{1560,1645}
temp	float	$tmp758	%read{1560,1645} %write{1560,1645}
temp	float	$tmp759	%read{1560,1645} %write{1560,1645}
temp	float	$tmp760	%read{1560,1645} %write{1560,1645}
temp	point	$tmp761	%read{1560,1645} %write{1560,1645}
temp	float	$tmp762	%read{1560,1645} %write{1560,1645}
temp	float	$tmp763	%read{1560,1645} %write{1560,1645}
temp	float	$tmp764	%read{1560,1645} %write{1560,1645}
temp	point	$tmp765	%read{1560,1645} %write{1560,1645}
temp	point	$tmp766	%read{1560,1645} %write{1560,1645}
temp	float	$tmp767	%read{1560,1645} %write{1560,1645}
temp	float	$tmp768	%read{1560,1645} %write{1560,1645}
temp	float	$tmp769	%read{1560,1645} %write{1560,1645}
temp	float	$tmp770	%read{1560,1645} %write{1560,1645}
temp	int	$tmp771	%read{1560,1645} %write{1560,1645}
temp	float	$tmp772	%read{1560,1645} %write{1560,1645}
temp	float	$tmp773	%read{1560,1645} %write{1560,1645}
temp	float	$tmp774	%read{1560,1645} %write{1560,1645}
temp	point	$tmp775	%read{1560,1645} %write{1560,1645}
temp	point	$tmp776	%read{1560,1645} %write{1560,1645}
temp	point	$tmp777	%read{1560,1645} %write{1560,1645}
temp	float	$tmp778	%read{1560,1645} %write{1560,1645}
temp	int	$tmp779	%read{1560,1645} %write{1560,1645}
temp	float	$tmp780	%read{1560,1645} %write{1560,1645}
temp	float	$tmp781	%read{1560,1645} %write{1560,1645}
temp	point	$tmp782	%read{1560,1645} %write{1560,1645}
temp	point	$tmp783	%read{1560,1645} %write{1560,1645}
temp	float	$tmp784	%read{1560,1645} %write{1560,1645}
temp	int	$tmp785	%read{1560,1645} %write{1560,1645}
temp	float	$tmp786	%read{1560,1645} %write{1560,1645}
temp	point	$tmp787	%read{1560,1645} %write{1560,1645}
temp	float	$tmp788	%read{1560,1645} %write{1560,1645}
temp	int	$tmp789	%read{1560,1645} %write{1560,1645}
temp	int	$tmp790	%read{2147483647,-1} %write{1560,1645}
temp	int	$tmp791	%read{2147483647,-1} %write{1560,1645}
temp	int	$tmp792	%read{2147483647,-1} %write{1560,1645}
temp	float	$tmp793	%read{1648,1648} %write{1647,1647}
temp	int	$tmp794	%read{1651,1651} %write{1650,1650}
temp	float	$tmp795	%read{1758,1758} %write{1757,1757}
temp	float	$tmp796	%read{1658,1658} %write{1657,1657}
temp	float	$tmp797	%read{1657,1657} %write{1656,1656}
temp	float	$tmp798	%read{1661,1661} %write{1660,1660}
temp	float	$tmp799	%read{1660,1660} %write{1659,1659}
temp	float	$tmp800	%read{1664,1664} %write{1663,1663}
temp	float	$tmp801	%read{1663,1663} %write{1662,1662}
temp	int	$tmp802	%read{1671,1756} %write{1671,1756}
temp	int	$tmp803	%read{1669,1756} %write{1670,1756}
temp	int	$tmp804	%read{1671,1756} %write{1671,1756}
temp	int	$tmp805	%read{1671,1756} %write{1671,1756}
temp	int	$tmp806	%read{1671,1756} %write{1671,1756}
temp	int	$tmp807	%read{1671,1756} %write{1671,1756}
temp	float	$tmp808	%read{1671,1756} %write{1671,1756}
temp	float	$tmp809	%read{1671,1756} %write{1671,1756}
temp	float	$tmp810	%read{1671,1756} %write{1671,1756}
temp	point	$tmp811	%read{1671,1756} %write{1671,1756}
temp	float	$tmp812	%read{1671,1756} %write{1671,1756}
temp	float	$tmp813	%read{1671,1756} %write{1671,1756}
temp	float	$tmp814	%read{1671,1756} %write{1671,1756}
temp	point	$tmp815	%read{1671,1756} %write{1671,1756}
temp	float	$tmp816	%read{1671,1756} %write{1671,1756}
temp	float	$tmp817	%read{1671,1756} %write{1671,1756}
temp	float	$tmp818	%read{1671,1756} %write{1671,1756}
temp	point	$tmp819	%read{1671,1756} %write{1671,1756}
temp	point	$tmp820	%read{1671,1756} %write{1671,1756}
temp	float	$tmp821	%read{1671,1756} %write{1671,1756}
temp	float	$tmp822	%read{1671,1756} %write{1671,1756}
temp	float	$tmp823	%read{1671,1756} %write{1671,1756}
temp	float	$tmp824	%read{1671,1756} %write{1671,1756}
temp	int	$tmp825	%read{1671,1756} %write{1671,1756}
temp	float	$tmp826	%read{1671,1756} %write{1671,1756}
temp	float	$tmp827	%read{1671,1756} %write{1671,1756}
temp	float	$tmp828	%read{1671,1756} %write{1671,1756}
temp	point	$tmp829	%read{1671,1756} %write{1671,1756}
temp	point	$tmp830	%read{1671,1756} %write{1671,1756}
temp	point	$tmp831	%read{1671,1756} %write{1671,1756}
temp	float	$tmp832	%read{1671,1756} %write{1671,1756}
temp	int	$tmp833	%read{1671,1756} %write{1671,1756}
temp	float	$tmp834	%read{1671,1756} %write{1671,1756}
temp	float	$tmp835	%read{1671,1756} %write{1671,1756}
temp	point	$tmp836	%read{1671,1756} %write{1671,1756}
temp	point	$tmp837	%read{1671,1756} %write{1671,1756}
temp	float	$tmp838	%read{1671,1756} %write{1671,1756}
temp	int	$tmp839	%read{1671,1756} %write{1671,1756}
temp	float	$tmp840	%read{1671,1756} %write{1671,1756}
temp	point	$tmp841	%read{1671,1756} %write{1671,1756}
temp	float	$tmp842	%read{1671,1756} %write{1671,1756}
temp	int	$tmp843	%read{1671,1756} %write{1671,1756}
temp	int	$tmp844	%read{2147483647,-1} %write{1671,1756}
temp	int	$tmp845	%read{2147483647,-1} %write{1671,1756}
temp	int	$tmp846	%read{2147483647,-1} %write{1671,1756}
temp	float	$tmp847	%read{1759,1759} %write{1758,1758}
temp	int	$tmp848	%read{1762,1762} %write{1761,1761}
temp	float	$tmp849	%read{1869,1869} %write{1868,1868}
temp	float	$tmp850	%read{1769,1769} %write{1768,1768}
temp	float	$tmp851	%read{1768,1768} %write{1767,1767}
temp	float	$tmp852	%read{1772,1772} %write{1771,1771}
temp	float	$tmp853	%read{1771,1771} %write{1770,1770}
temp	float	$tmp854	%read{1775,1775} %write{1774,1774}
temp	float	$tmp855	%read{1774,1774} %write{1773,1773}
temp	int	$tmp856	%read{1782,1867} %write{1782,1867}
temp	int	$tmp857	%read{1780,1867} %write{1781,1867}
temp	int	$tmp858	%read{1782,1867} %write{1782,1867}
temp	int	$tmp859	%read{1782,1867} %write{1782,1867}
temp	int	$tmp860	%read{1782,1867} %write{1782,1867}
temp	int	$tmp861	%read{1782,1867} %write{1782,1867}
temp	float	$tmp862	%read{1782,1867} %write{1782,1867}
temp	float	$tmp863	%read{1782,1867} %write{1782,1867}
temp	float	$tmp864	%read{1782,1867} %write{1782,1867}
temp	point	$tmp865	%read{1782,1867} %write{1782,1867}
temp	float	$tmp866	%read{1782,1867} %write{1782,1867}
temp	float	$tmp867	%read{1782,1867} %write{1782,1867}
temp	float	$tmp868	%read{1782,1867} %write{1782,1867}
temp	point	$tmp869	%read{1782,1867} %write{1782,1867}
temp	float	$tmp870	%read{1782,1867} %write{1782,1867}
temp	float	$tmp871	%read{1782,1867} %write{1782,1867}
temp	float	$tmp872	%read{1782,1867} %write{1782,1867}
temp	point	$tmp873	%read{1782,1867} %write{1782,1867}
temp	point	$tmp874	%read{1782,1867} %write{1782,1867}
temp	float	$tmp875	%read{1782,1867} %write{1782,1867}
temp	float	$tmp876	%read{1782,1867} %write{1782,1867}
temp	float	$tmp877	%read{1782,1867} %write{1782,1867}
temp	float	$tmp878	%read{1782,1867} %write{1782,1867}
temp	int	$tmp879	%read{1782,1867} %write{1782,1867}
temp	float	$tmp880	%read{1782,1867} %write{1782,1867}
temp	float	$tmp881	%read{1782,1867} %write{1782,1867}
temp	float	$tmp882	%read{1782,1867} %write{1782,1867}
temp	point	$tmp883	%read{1782,1867} %write{1782,1867}
temp	point	$tmp884	%read{1782,1867} %write{1782,1867}
temp	point	$tmp885	%read{1782,1867} %write{1782,1867}
temp	float	$tmp886	%read{1782,1867} %write{1782,1867}
temp	int	$tmp887	%read{1782,1867} %write{1782,1867}
temp	float	$tmp888	%read{1782,1867} %write{1782,1867}
temp	float	$tmp889	%read{1782,1867} %write{1782,1867}
temp	point	$tmp890	%read{1782,1867} %write{1782,1867}
temp	point	$tmp891	%read{1782,1867} %write{1782,1867}
temp	float	$tmp892	%read{1782,1867} %write{1782,1867}
temp	int	$tmp893	%read{1782,1867} %write{1782,1867}
temp	float	$tmp894	%read{1782,1867} %write{1782,1867}
temp	point	$tmp895	%read{1782,1867} %write{1782,1867}
temp	float	$tmp896	%read{1782,1867} %write{1782,1867}
temp	int	$tmp897	%read{1782,1867} %write{1782,1867}
temp	int	$tmp898	%read{2147483647,-1} %write{1782,1867}
temp	int	$tmp899	%read{2147483647,-1} %write{1782,1867}
temp	int	$tmp900	%read{2147483647,-1} %write{1782,1867}
temp	float	$tmp901	%read{1870,1870} %write{1869,1869}
temp	int	$tmp902	%read{1873,1873} %write{1872,1872}
temp	float	$tmp903	%read{1982,1982} %write{1981,1981}
temp	float	$tmp904	%read{1880,1880} %write{1879,1879}
temp	float	$tmp905	%read{1879,1879} %write{1878,1878}
temp	float	$tmp906	%read{1883,1883} %write{1882,1882}
temp	float	$tmp907	%read{1882,1882} %write{1881,1881}
temp	float	$tmp908	%read{1886,1886} %write{1885,1885}
temp	float	$tmp909	%read{1885,1885} %write{1884,1884}
temp	int	$tmp910	%read{1893,1978} %write{1893,1978}
temp	int	$tmp911	%read{1891,1978} %write{1892,1978}
temp	int	$tmp912	%read{1893,1978} %write{1893,1978}
temp	int	$tmp913	%read{1893,1978} %write{1893,1978}
temp	int	$tmp914	%read{1893,1978} %write{1893,1978}
temp	int	$tmp915	%read{1893,1978} %write{1893,1978}
temp	float	$tmp916	%read{1893,1978} %write{1893,1978}
temp	float	$tmp917	%read{1893,1978} %write{1893,1978}
temp	float	$tmp918	%read{1893,1978} %write{1893,1978}
temp	point	$tmp919	%read{1893,1978} %write{1893,1978}
temp	float	$tmp920	%read{1893,1978} %write{1893,1978}
temp	float	$tmp921	%read{1893,1978} %write{1893,1978}
temp	float	$tmp922	%read{1893,1978} %write{1893,1978}
temp	point	$tmp923	%read{1893,1978} %write{1893,1978}
temp	float	$tmp924	%read{1893,1978} %write{1893,1978}
temp	float	$tmp925	%read{1893,1978} %write{1893,1978}
temp	float	$tmp926	%read{1893,1978} %write{1893,1978}
temp	point	$tmp927	%read{1893,1978} %write{1893,1978}
temp	point	$tmp928	%read{1893,1978} %write{1893,1978}
temp	float	$tmp929	%read{1893,1978} %write{1893,1978}
temp	float	$tmp930	%read{1893,1978} %write{1893,1978}
temp	float	$tmp931	%read{1893,1978} %write{1893,1978}
temp	float	$tmp932	%read{1893,1978} %write{1893,1978}
temp	int	$tmp933	%read{1893,1978} %write{1893,1978}
temp	float	$tmp934	%read{1893,1978} %write{1893,1978}
temp	float	$tmp935	%read{1893,1978} %write{1893,1978}
temp	float	$tmp936	%read{1893,1978} %write{1893,1978}
temp	point	$tmp937	%read{1893,1978} %write{1893,1978}
temp	point	$tmp938	%read{1893,1978} %write{1893,1978}
temp	point	$tmp939	%read{1893,1978} %write{1893,1978}
temp	float	$tmp940	%read{1893,1978} %write{1893,1978}
temp	int	$tmp941	%read{1893,1978} %write{1893,1978}
temp	float	$tmp942	%read{1893,1978} %write{1893,1978}
temp	float	$tmp943	%read{1893,1978} %write{1893,1978}
temp	point	$tmp944	%read{1893,1978} %write{1893,1978}
temp	point	$tmp945	%read{1893,1978} %write{1893,1978}
temp	float	$tmp946	%read{1893,1978} %write{1893,1978}
temp	int	$tmp947	%read{1893,1978} %write{1893,1978}
temp	float	$tmp948	%read{1893,1978} %write{1893,1978}
temp	point	$tmp949	%read{1893,1978} %write{1893,1978}
temp	float	$tmp950	%read{1893,1978} %write{1893,1978}
temp	int	$tmp951	%read{1893,1978} %write{1893,1978}
temp	int	$tmp952	%read{2147483647,-1} %write{1893,1978}
temp	int	$tmp953	%read{2147483647,-1} %write{1893,1978}
temp	int	$tmp954	%read{2147483647,-1} %write{1893,1978}
temp	float	$tmp955	%read{1981,1981} %write{1979,1979}
temp	float	$tmp956	%read{1981,1981} %write{1980,1980}
temp	float	$tmp957	%read{1983,1983} %write{1982,1982}
temp	int	$tmp958	%read{1986,1986} %write{1985,1985}
temp	float	$tmp959	%read{2102,2102} %write{2099,2100}
temp	float	$tmp960	%read{2096,2096} %write{2095,2095}
temp	float	$tmp961	%read{1994,1994} %write{1993,1993}
temp	float	$tmp962	%read{1993,1993} %write{1992,1992}
temp	float	$tmp963	%read{1997,1997} %write{1996,1996}
temp	float	$tmp964	%read{1996,1996} %write{1995,1995}
temp	float	$tmp965	%read{2000,2000} %write{1999,1999}
temp	float	$tmp966	%read{1999,1999} %write{1998,1998}
temp	int	$tmp967	%read{2007,2092} %write{2007,2092}
temp	int	$tmp968	%read{2005,2092} %write{2006,2092}
temp	int	$tmp969	%read{2007,2092} %write{2007,2092}
temp	int	$tmp970	%read{2007,2092} %write{2007,2092}
temp	int	$tmp971	%read{2007,2092} %write{2007,2092}
temp	int	$tmp972	%read{2007,2092} %write{2007,2092}
temp	float	$tmp973	%read{2007,2092} %write{2007,2092}
temp	float	$tmp974	%read{2007,2092} %write{2007,2092}
temp	float	$tmp975	%read{2007,2092} %write{2007,2092}
temp	point	$tmp976	%read{2007,2092} %write{2007,2092}
temp	float	$tmp977	%read{2007,2092} %write{2007,2092}
temp	float	$tmp978	%read{2007,2092} %write{2007,2092}
temp	float	$tmp979	%read{2007,2092} %write{2007,2092}
temp	point	$tmp980	%read{2007,2092} %write{2007,2092}
temp	float	$tmp981	%read{2007,2092} %write{2007,2092}
temp	float	$tmp982	%read{2007,2092} %write{2007,2092}
temp	float	$tmp983	%read{2007,2092} %write{2007,2092}
temp	point	$tmp984	%read{2007,2092} %write{2007,2092}
temp	point	$tmp985	%read{2007,2092} %write{2007,2092}
temp	float	$tmp986	%read{2007,2092} %write{2007,2092}
temp	float	$tmp987	%read{2007,2092} %write{2007,2092}
temp	float	$tmp988	%read{2007,2092} %write{2007,2092}
temp	float	$tmp989	%read{2007,2092} %write{2007,2092}
temp	int	$tmp990	%read{2007,2092} %write{2007,2092}
temp	float	$tmp991	%read{2007,2092} %write{2007,2092}
temp	float	$tmp992	%read{2007,2092} %write{2007,2092}
temp	float	$tmp993	%read{2007,2092} %write{2007,2092}
temp	point	$tmp994	%read{2007,2092} %write{2007,2092}
temp	point	$tmp995	%read{2007,2092} %write{2007,2092}
temp	point	$tmp996	%read{2007,2092} %write{2007,2092}
temp	float	$tmp997	%read{2007,2092} %write{2007,2092}
temp	int	$tmp998	%read{2007,2092} %write{2007,2092}
temp	float	$tmp999	%read{2007,2092} %write{2007,2092}
temp	float	$tmp1000	%read{2007,2092} %write{2007,2092}
temp	point	$tmp1001	%read{2007,2092} %write{2007,2092}
temp	point	$tmp1002	%read{2007,2092} %write{2007,2092}
temp	float	$tmp1003	%read{2007,2092} %write{2007,2092}
temp	int	$tmp1004	%read{2007,2092} %write{2007,2092}
temp	float	$tmp1005	%read{2007,2092} %write{2007,2092}
temp	point	$tmp1006	%read{2007,2092} %write{2007,2092}
temp	float	$tmp1007	%read{2007,2092} %write{2007,2092}
temp	int	$tmp1008	%read{2007,2092} %write{2007,2092}
temp	int	$tmp1009	%read{2147483647,-1} %write{2007,2092}
temp	int	$tmp1010	%read{2147483647,-1} %write{2007,2092}
temp	int	$tmp1011	%read{2147483647,-1} %write{2007,2092}
temp	float	$tmp1012	%read{2095,2095} %write{2093,2093}
temp	float	$tmp1013	%read{2095,2095} %write{2094,2094}
temp	int	$tmp1014	%read{2098,2098} %write{2097,2097}
temp	float	$tmp1015	%read{2103,2103} %write{2102,2102}
temp	int	$tmp1016	%read{2106,2106} %write{2105,2105}
temp	float	$tmp1017	%read{2111,2111} %write{2110,2110}
const	string	$const42	"noise_turbulence"		%read{2113,5043} %write{2147483647,-1}
const	float	$const43	16		%read{2118,5048} %write{2147483647,-1}
const	string	$const44	"clamp"		%read{2117,5047} %write{2147483647,-1}
temp	float	$tmp1018	%read{2119,2119} %write{2118,2118}
temp	int	$tmp1019	%read{2121,2832} %write{2122,2832}
temp	point	$tmp1020	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1021	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1022	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1023	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1024	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1025	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1026	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1027	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1028	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1029	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1030	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1031	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1032	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1033	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1034	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1035	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1036	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1037	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1038	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1039	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1040	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1041	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1042	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1043	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1044	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1045	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1046	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1047	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1048	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1049	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1050	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1051	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1052	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1053	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1054	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1055	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1056	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1057	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1058	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1059	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1060	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1061	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1062	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1063	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1064	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1065	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1066	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1067	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1068	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1069	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1070	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1071	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1072	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1073	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1074	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1075	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1076	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1077	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1078	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1079	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1080	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1081	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1082	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1083	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1084	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1085	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1086	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1087	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1088	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1089	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1090	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1091	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1092	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1093	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1094	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1095	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1096	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1097	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1098	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1099	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1100	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1101	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1102	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1103	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1104	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1105	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1106	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1107	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1108	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1109	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1110	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1111	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1112	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1113	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1114	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1115	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1116	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1117	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1118	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1119	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1120	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1121	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1122	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1123	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1124	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1125	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1126	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1127	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1128	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1129	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1130	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1131	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1132	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1133	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1134	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1135	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1136	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1137	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1138	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1139	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1140	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1141	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1142	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1143	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1144	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1145	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1146	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1147	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1148	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1149	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1150	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1151	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1152	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1153	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1154	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1155	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1156	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1157	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1158	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1159	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1160	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1161	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1162	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1163	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1164	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1165	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1166	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1167	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1168	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1169	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1170	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1171	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1172	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1173	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1174	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1175	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1176	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1177	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1178	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1179	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1180	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1181	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1182	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1183	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1184	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1185	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1186	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1187	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1188	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1189	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1190	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1191	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1192	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1193	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1194	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1195	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1196	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1197	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1198	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1199	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1200	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1201	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1202	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1203	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1204	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1205	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1206	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1207	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1208	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1209	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1210	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1211	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1212	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1213	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1214	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1215	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1216	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1217	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1218	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1219	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1220	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1221	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1222	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1223	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1224	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1225	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1226	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1227	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1228	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1229	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1230	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1231	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1232	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1233	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1234	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1235	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1236	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1237	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1238	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1239	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1240	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1241	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1242	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1243	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1244	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1245	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1246	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1247	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1248	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1249	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1250	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1251	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1252	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1253	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1254	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1255	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1256	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1257	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1258	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1259	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1260	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1261	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1262	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1263	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1264	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1265	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1266	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1267	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1268	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1269	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1270	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1271	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1272	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1273	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1274	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1275	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1276	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1277	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1278	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1279	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1280	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1281	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1282	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1283	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1284	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1285	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1286	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1287	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1288	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1289	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1290	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1291	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1292	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1293	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1294	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1295	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1296	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1297	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1298	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1299	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1300	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1301	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1302	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1303	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1304	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1305	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1306	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1307	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1308	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1309	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1310	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1311	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1312	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1313	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1314	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1315	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1316	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1317	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1318	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1319	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1320	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1321	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1322	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1323	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1324	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1325	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1326	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1327	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1328	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1329	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1330	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1331	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1332	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1333	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1334	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1335	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1336	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1337	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1338	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1339	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1340	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1341	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1342	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1343	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1344	%read{2123,2832} %write{2123,2832}
temp	point	$tmp1345	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1346	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1347	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1348	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1349	%read{2147483647,-1} %write{2123,2832}
temp	int	$tmp1350	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1351	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1352	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1353	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1354	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1355	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1356	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1357	%read{2123,2832} %write{2123,2832}
temp	float	$tmp1358	%read{2123,2832} %write{2123,2832}
temp	int	$tmp1359	%read{2147483647,-1} %write{2123,2832}
temp	float	$tmp1360	%read{2834,2834} %write{2833,2833}
temp	int	$tmp1361	%read{2836,2836} %write{2835,2835}
temp	point	$tmp1362	%read{2845,3533} %write{2837,2837}
temp	int	$tmp1363	%read{2840,2840} %write{2839,2839}
temp	int	$tmp1364	%read{2844,2844} %write{2843,2843}
temp	int	$tmp1365	%read{2848,2848} %write{2847,2847}
temp	int	$tmp1366	%read{2849,2849} %write{2848,2848}
temp	int	$tmp1367	%read{2855,2855} %write{2854,2854}
temp	float	$tmp1368	%read{2962,2962} %write{2961,2961}
temp	float	$tmp1369	%read{2862,2862} %write{2861,2861}
temp	float	$tmp1370	%read{2861,2861} %write{2860,2860}
temp	float	$tmp1371	%read{2865,2865} %write{2864,2864}
temp	float	$tmp1372	%read{2864,2864} %write{2863,2863}
temp	float	$tmp1373	%read{2868,2868} %write{2867,2867}
temp	float	$tmp1374	%read{2867,2867} %write{2866,2866}
temp	int	$tmp1375	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1376	%read{2873,2960} %write{2874,2960}
temp	int	$tmp1377	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1378	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1379	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1380	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1381	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1382	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1383	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1384	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1385	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1386	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1387	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1388	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1389	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1390	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1391	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1392	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1393	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1394	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1395	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1396	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1397	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1398	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1399	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1400	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1401	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1402	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1403	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1404	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1405	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1406	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1407	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1408	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1409	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1410	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1411	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1412	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1413	%read{2875,2960} %write{2875,2960}
temp	point	$tmp1414	%read{2875,2960} %write{2875,2960}
temp	float	$tmp1415	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1416	%read{2875,2960} %write{2875,2960}
temp	int	$tmp1417	%read{2147483647,-1} %write{2875,2960}
temp	int	$tmp1418	%read{2147483647,-1} %write{2875,2960}
temp	int	$tmp1419	%read{2147483647,-1} %write{2875,2960}
temp	float	$tmp1420	%read{2963,2963} %write{2962,2962}
temp	int	$tmp1421	%read{2966,2966} %write{2965,2965}
temp	float	$tmp1422	%read{3073,3073} %write{3072,3072}
temp	float	$tmp1423	%read{2973,2973} %write{2972,2972}
temp	float	$tmp1424	%read{2972,2972} %write{2971,2971}
temp	float	$tmp1425	%read{2976,2976} %write{2975,2975}
temp	float	$tmp1426	%read{2975,2975} %write{2974,2974}
temp	float	$tmp1427	%read{2979,2979} %write{2978,2978}
temp	float	$tmp1428	%read{2978,2978} %write{2977,2977}
temp	int	$tmp1429	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1430	%read{2984,3071} %write{2985,3071}
temp	int	$tmp1431	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1432	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1433	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1434	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1435	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1436	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1437	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1438	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1439	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1440	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1441	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1442	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1443	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1444	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1445	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1446	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1447	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1448	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1449	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1450	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1451	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1452	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1453	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1454	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1455	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1456	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1457	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1458	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1459	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1460	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1461	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1462	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1463	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1464	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1465	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1466	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1467	%read{2986,3071} %write{2986,3071}
temp	point	$tmp1468	%read{2986,3071} %write{2986,3071}
temp	float	$tmp1469	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1470	%read{2986,3071} %write{2986,3071}
temp	int	$tmp1471	%read{2147483647,-1} %write{2986,3071}
temp	int	$tmp1472	%read{2147483647,-1} %write{2986,3071}
temp	int	$tmp1473	%read{2147483647,-1} %write{2986,3071}
temp	float	$tmp1474	%read{3074,3074} %write{3073,3073}
temp	int	$tmp1475	%read{3077,3077} %write{3076,3076}
temp	float	$tmp1476	%read{3184,3184} %write{3183,3183}
temp	float	$tmp1477	%read{3084,3084} %write{3083,3083}
temp	float	$tmp1478	%read{3083,3083} %write{3082,3082}
temp	float	$tmp1479	%read{3087,3087} %write{3086,3086}
temp	float	$tmp1480	%read{3086,3086} %write{3085,3085}
temp	float	$tmp1481	%read{3090,3090} %write{3089,3089}
temp	float	$tmp1482	%read{3089,3089} %write{3088,3088}
temp	int	$tmp1483	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1484	%read{3095,3182} %write{3096,3182}
temp	int	$tmp1485	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1486	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1487	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1488	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1489	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1490	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1491	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1492	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1493	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1494	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1495	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1496	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1497	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1498	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1499	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1500	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1501	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1502	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1503	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1504	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1505	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1506	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1507	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1508	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1509	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1510	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1511	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1512	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1513	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1514	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1515	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1516	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1517	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1518	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1519	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1520	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1521	%read{3097,3182} %write{3097,3182}
temp	point	$tmp1522	%read{3097,3182} %write{3097,3182}
temp	float	$tmp1523	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1524	%read{3097,3182} %write{3097,3182}
temp	int	$tmp1525	%read{2147483647,-1} %write{3097,3182}
temp	int	$tmp1526	%read{2147483647,-1} %write{3097,3182}
temp	int	$tmp1527	%read{2147483647,-1} %write{3097,3182}
temp	float	$tmp1528	%read{3185,3185} %write{3184,3184}
temp	int	$tmp1529	%read{3188,3188} %write{3187,3187}
temp	float	$tmp1530	%read{3295,3295} %write{3294,3294}
temp	float	$tmp1531	%read{3195,3195} %write{3194,3194}
temp	float	$tmp1532	%read{3194,3194} %write{3193,3193}
temp	float	$tmp1533	%read{3198,3198} %write{3197,3197}
temp	float	$tmp1534	%read{3197,3197} %write{3196,3196}
temp	float	$tmp1535	%read{3201,3201} %write{3200,3200}
temp	float	$tmp1536	%read{3200,3200} %write{3199,3199}
temp	int	$tmp1537	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1538	%read{3206,3293} %write{3207,3293}
temp	int	$tmp1539	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1540	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1541	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1542	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1543	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1544	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1545	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1546	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1547	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1548	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1549	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1550	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1551	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1552	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1553	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1554	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1555	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1556	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1557	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1558	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1559	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1560	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1561	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1562	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1563	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1564	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1565	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1566	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1567	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1568	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1569	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1570	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1571	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1572	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1573	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1574	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1575	%read{3208,3293} %write{3208,3293}
temp	point	$tmp1576	%read{3208,3293} %write{3208,3293}
temp	float	$tmp1577	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1578	%read{3208,3293} %write{3208,3293}
temp	int	$tmp1579	%read{2147483647,-1} %write{3208,3293}
temp	int	$tmp1580	%read{2147483647,-1} %write{3208,3293}
temp	int	$tmp1581	%read{2147483647,-1} %write{3208,3293}
temp	float	$tmp1582	%read{3296,3296} %write{3295,3295}
temp	int	$tmp1583	%read{3299,3299} %write{3298,3298}
temp	float	$tmp1584	%read{3408,3408} %write{3407,3407}
temp	float	$tmp1585	%read{3306,3306} %write{3305,3305}
temp	float	$tmp1586	%read{3305,3305} %write{3304,3304}
temp	float	$tmp1587	%read{3309,3309} %write{3308,3308}
temp	float	$tmp1588	%read{3308,3308} %write{3307,3307}
temp	float	$tmp1589	%read{3312,3312} %write{3311,3311}
temp	float	$tmp1590	%read{3311,3311} %write{3310,3310}
temp	int	$tmp1591	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1592	%read{3317,3404} %write{3318,3404}
temp	int	$tmp1593	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1594	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1595	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1596	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1597	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1598	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1599	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1600	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1601	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1602	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1603	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1604	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1605	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1606	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1607	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1608	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1609	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1610	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1611	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1612	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1613	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1614	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1615	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1616	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1617	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1618	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1619	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1620	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1621	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1622	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1623	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1624	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1625	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1626	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1627	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1628	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1629	%read{3319,3404} %write{3319,3404}
temp	point	$tmp1630	%read{3319,3404} %write{3319,3404}
temp	float	$tmp1631	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1632	%read{3319,3404} %write{3319,3404}
temp	int	$tmp1633	%read{2147483647,-1} %write{3319,3404}
temp	int	$tmp1634	%read{2147483647,-1} %write{3319,3404}
temp	int	$tmp1635	%read{2147483647,-1} %write{3319,3404}
temp	float	$tmp1636	%read{3407,3407} %write{3405,3405}
temp	float	$tmp1637	%read{3407,3407} %write{3406,3406}
temp	float	$tmp1638	%read{3409,3409} %write{3408,3408}
temp	int	$tmp1639	%read{3412,3412} %write{3411,3411}
temp	float	$tmp1640	%read{3528,3528} %write{3525,3526}
temp	float	$tmp1641	%read{3522,3522} %write{3521,3521}
temp	float	$tmp1642	%read{3420,3420} %write{3419,3419}
temp	float	$tmp1643	%read{3419,3419} %write{3418,3418}
temp	float	$tmp1644	%read{3423,3423} %write{3422,3422}
temp	float	$tmp1645	%read{3422,3422} %write{3421,3421}
temp	float	$tmp1646	%read{3426,3426} %write{3425,3425}
temp	float	$tmp1647	%read{3425,3425} %write{3424,3424}
temp	int	$tmp1648	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1649	%read{3431,3518} %write{3432,3518}
temp	int	$tmp1650	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1651	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1652	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1653	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1654	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1655	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1656	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1657	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1658	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1659	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1660	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1661	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1662	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1663	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1664	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1665	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1666	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1667	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1668	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1669	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1670	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1671	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1672	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1673	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1674	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1675	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1676	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1677	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1678	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1679	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1680	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1681	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1682	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1683	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1684	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1685	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1686	%read{3433,3518} %write{3433,3518}
temp	point	$tmp1687	%read{3433,3518} %write{3433,3518}
temp	float	$tmp1688	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1689	%read{3433,3518} %write{3433,3518}
temp	int	$tmp1690	%read{2147483647,-1} %write{3433,3518}
temp	int	$tmp1691	%read{2147483647,-1} %write{3433,3518}
temp	int	$tmp1692	%read{2147483647,-1} %write{3433,3518}
temp	float	$tmp1693	%read{3521,3521} %write{3519,3519}
temp	float	$tmp1694	%read{3521,3521} %write{3520,3520}
temp	int	$tmp1695	%read{3524,3524} %write{3523,3523}
temp	float	$tmp1696	%read{3529,3529} %write{3528,3528}
temp	int	$tmp1697	%read{3532,3532} %write{3531,3531}
temp	float	$tmp1698	%read{3538,3538} %write{3537,3537}
temp	float	$tmp1699	%read{3539,3539} %write{3538,3538}
temp	float	$tmp1700	%read{3541,3541} %write{3540,3540}
temp	int	$tmp1701	%read{3543,3543} %write{3542,3542}
temp	float	$tmp1702	%read{3548,3548} %write{3543,3543}
temp	int	$tmp1703	%read{3545,3545} %write{3544,3544}
temp	int	$tmp1704	%read{3546,3546} %write{3545,3545}
temp	int	$tmp1705	%read{3547,3547} %write{3546,3546}
temp	float	$tmp1706	%read{3548,3548} %write{3547,3547}
temp	float	$tmp1707	%read{3549,3549} %write{3548,3548}
temp	int	$tmp1708	%read{3551,3551} %write{3550,3550}
temp	int	$tmp1709	%read{3552,3552} %write{3551,3551}
temp	float	$tmp1710	%read{3557,3557} %write{3552,3552}
temp	int	$tmp1711	%read{3554,3554} %write{3553,3553}
temp	int	$tmp1712	%read{3555,3555} %write{3554,3554}
temp	int	$tmp1713	%read{3556,3556} %write{3555,3555}
temp	float	$tmp1714	%read{3557,3557} %write{3556,3556}
temp	float	$tmp1715	%read{3558,3558} %write{3557,3557}
temp	float	$tmp1716	%read{3560,3560} %write{3559,3559}
temp	float	$tmp1717	%read{3562,3562} %write{3560,3560}
temp	float	$tmp1718	%read{3562,3562} %write{3561,3561}
temp	int	$tmp1719	%read{3565,3565} %write{3564,3564}
temp	float	$tmp1720	%read{3570,3570} %write{3565,3565}
temp	int	$tmp1721	%read{3567,3567} %write{3566,3566}
temp	int	$tmp1722	%read{3568,3568} %write{3567,3567}
temp	int	$tmp1723	%read{3569,3569} %write{3568,3568}
temp	float	$tmp1724	%read{3570,3570} %write{3569,3569}
temp	float	$tmp1725	%read{3571,3571} %write{3570,3570}
temp	float	$tmp1726	%read{6504,6504} %write{5027,5037}
temp	point	$tmp1727	%read{3588,4302} %write{3577,3577}
temp	float	$tmp1728	%read{3577,3577} %write{3574,3574}
temp	float	$tmp1729	%read{3577,3577} %write{3575,3575}
temp	float	$tmp1730	%read{3577,3577} %write{3576,3576}
temp	float	$tmp1731	%read{3584,3584} %write{3583,3583}
temp	int	$tmp1732	%read{3586,4297} %write{3587,4297}
temp	point	$tmp1733	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1734	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1735	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1736	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1737	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1738	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1739	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1740	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1741	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1742	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1743	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1744	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1745	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1746	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1747	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1748	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1749	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1750	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1751	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1752	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1753	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1754	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1755	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1756	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1757	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1758	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1759	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1760	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1761	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1762	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1763	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1764	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1765	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1766	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1767	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1768	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1769	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1770	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1771	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1772	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1773	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1774	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1775	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1776	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1777	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1778	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1779	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1780	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1781	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1782	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1783	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1784	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1785	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1786	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1787	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1788	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1789	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1790	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp1791	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1792	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1793	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1794	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1795	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1796	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1797	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1798	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1799	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1800	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1801	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1802	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1803	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1804	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1805	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1806	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1807	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1808	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1809	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1810	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1811	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1812	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1813	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1814	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1815	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1816	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1817	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1818	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1819	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1820	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1821	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1822	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1823	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1824	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1825	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1826	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1827	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1828	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1829	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1830	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1831	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1832	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1833	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1834	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1835	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1836	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1837	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1838	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1839	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1840	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1841	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1842	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1843	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1844	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp1845	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1846	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1847	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1848	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1849	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1850	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1851	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1852	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1853	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1854	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1855	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1856	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1857	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1858	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1859	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1860	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1861	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1862	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1863	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1864	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1865	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1866	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1867	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1868	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1869	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1870	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1871	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1872	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1873	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1874	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1875	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1876	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1877	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1878	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1879	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1880	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1881	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1882	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1883	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1884	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1885	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1886	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1887	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1888	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1889	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1890	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1891	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1892	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1893	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1894	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1895	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1896	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1897	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1898	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp1899	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1900	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1901	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1902	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1903	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1904	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1905	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1906	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1907	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1908	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1909	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1910	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1911	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1912	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1913	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1914	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1915	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1916	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1917	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1918	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1919	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1920	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1921	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1922	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1923	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1924	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1925	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1926	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1927	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1928	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1929	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1930	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1931	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1932	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1933	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1934	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1935	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1936	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1937	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1938	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1939	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1940	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1941	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1942	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1943	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1944	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1945	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1946	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1947	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1948	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1949	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1950	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1951	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp1952	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp1953	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1954	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1955	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1956	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1957	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1958	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1959	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1960	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1961	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1962	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1963	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1964	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1965	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1966	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1967	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1968	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1969	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1970	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1971	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1972	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1973	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1974	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1975	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1976	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1977	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1978	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1979	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1980	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1981	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1982	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1983	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1984	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1985	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1986	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1987	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1988	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1989	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1990	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1991	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1992	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1993	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1994	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1995	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1996	%read{3588,4297} %write{3588,4297}
temp	point	$tmp1997	%read{3588,4297} %write{3588,4297}
temp	float	$tmp1998	%read{3588,4297} %write{3588,4297}
temp	int	$tmp1999	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2000	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2001	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2002	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2003	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2004	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp2005	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp2006	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp2007	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2008	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2009	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2010	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2011	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2012	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2013	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2014	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2015	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2016	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2017	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2018	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2019	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2020	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2021	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2022	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2023	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2024	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2025	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2026	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2027	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2028	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2029	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2030	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2031	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2032	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2033	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2034	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2035	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2036	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2037	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2038	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2039	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2040	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2041	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2042	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2043	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2044	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2045	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2046	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2047	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2048	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2049	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2050	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2051	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2052	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2053	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2054	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2055	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2056	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2057	%read{3588,4297} %write{3588,4297}
temp	point	$tmp2058	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2059	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2060	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2061	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp2062	%read{2147483647,-1} %write{3588,4297}
temp	int	$tmp2063	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp2064	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2065	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2066	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2067	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2068	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2069	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2070	%read{3588,4297} %write{3588,4297}
temp	float	$tmp2071	%read{3588,4297} %write{3588,4297}
temp	int	$tmp2072	%read{2147483647,-1} %write{3588,4297}
temp	float	$tmp2073	%read{4299,4299} %write{4298,4298}
temp	int	$tmp2074	%read{4301,4301} %write{4300,4300}
temp	point	$tmp2075	%read{4310,4998} %write{4302,4302}
temp	int	$tmp2076	%read{4305,4305} %write{4304,4304}
temp	int	$tmp2077	%read{4309,4309} %write{4308,4308}
temp	int	$tmp2078	%read{4313,4313} %write{4312,4312}
temp	int	$tmp2079	%read{4314,4314} %write{4313,4313}
temp	int	$tmp2080	%read{4320,4320} %write{4319,4319}
temp	float	$tmp2081	%read{4427,4427} %write{4426,4426}
temp	float	$tmp2082	%read{4327,4327} %write{4326,4326}
temp	float	$tmp2083	%read{4326,4326} %write{4325,4325}
temp	float	$tmp2084	%read{4330,4330} %write{4329,4329}
temp	float	$tmp2085	%read{4329,4329} %write{4328,4328}
temp	float	$tmp2086	%read{4333,4333} %write{4332,4332}
temp	float	$tmp2087	%read{4332,4332} %write{4331,4331}
temp	int	$tmp2088	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2089	%read{4338,4425} %write{4339,4425}
temp	int	$tmp2090	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2091	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2092	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2093	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2094	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2095	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2096	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2097	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2098	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2099	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2100	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2101	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2102	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2103	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2104	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2105	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2106	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2107	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2108	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2109	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2110	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2111	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2112	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2113	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2114	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2115	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2116	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2117	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2118	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2119	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2120	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2121	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2122	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2123	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2124	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2125	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2126	%read{4340,4425} %write{4340,4425}
temp	point	$tmp2127	%read{4340,4425} %write{4340,4425}
temp	float	$tmp2128	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2129	%read{4340,4425} %write{4340,4425}
temp	int	$tmp2130	%read{2147483647,-1} %write{4340,4425}
temp	int	$tmp2131	%read{2147483647,-1} %write{4340,4425}
temp	int	$tmp2132	%read{2147483647,-1} %write{4340,4425}
temp	float	$tmp2133	%read{4428,4428} %write{4427,4427}
temp	int	$tmp2134	%read{4431,4431} %write{4430,4430}
temp	float	$tmp2135	%read{4538,4538} %write{4537,4537}
temp	float	$tmp2136	%read{4438,4438} %write{4437,4437}
temp	float	$tmp2137	%read{4437,4437} %write{4436,4436}
temp	float	$tmp2138	%read{4441,4441} %write{4440,4440}
temp	float	$tmp2139	%read{4440,4440} %write{4439,4439}
temp	float	$tmp2140	%read{4444,4444} %write{4443,4443}
temp	float	$tmp2141	%read{4443,4443} %write{4442,4442}
temp	int	$tmp2142	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2143	%read{4449,4536} %write{4450,4536}
temp	int	$tmp2144	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2145	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2146	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2147	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2148	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2149	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2150	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2151	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2152	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2153	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2154	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2155	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2156	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2157	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2158	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2159	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2160	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2161	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2162	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2163	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2164	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2165	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2166	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2167	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2168	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2169	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2170	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2171	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2172	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2173	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2174	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2175	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2176	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2177	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2178	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2179	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2180	%read{4451,4536} %write{4451,4536}
temp	point	$tmp2181	%read{4451,4536} %write{4451,4536}
temp	float	$tmp2182	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2183	%read{4451,4536} %write{4451,4536}
temp	int	$tmp2184	%read{2147483647,-1} %write{4451,4536}
temp	int	$tmp2185	%read{2147483647,-1} %write{4451,4536}
temp	int	$tmp2186	%read{2147483647,-1} %write{4451,4536}
temp	float	$tmp2187	%read{4539,4539} %write{4538,4538}
temp	int	$tmp2188	%read{4542,4542} %write{4541,4541}
temp	float	$tmp2189	%read{4649,4649} %write{4648,4648}
temp	float	$tmp2190	%read{4549,4549} %write{4548,4548}
temp	float	$tmp2191	%read{4548,4548} %write{4547,4547}
temp	float	$tmp2192	%read{4552,4552} %write{4551,4551}
temp	float	$tmp2193	%read{4551,4551} %write{4550,4550}
temp	float	$tmp2194	%read{4555,4555} %write{4554,4554}
temp	float	$tmp2195	%read{4554,4554} %write{4553,4553}
temp	int	$tmp2196	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2197	%read{4560,4647} %write{4561,4647}
temp	int	$tmp2198	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2199	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2200	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2201	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2202	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2203	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2204	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2205	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2206	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2207	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2208	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2209	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2210	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2211	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2212	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2213	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2214	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2215	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2216	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2217	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2218	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2219	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2220	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2221	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2222	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2223	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2224	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2225	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2226	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2227	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2228	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2229	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2230	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2231	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2232	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2233	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2234	%read{4562,4647} %write{4562,4647}
temp	point	$tmp2235	%read{4562,4647} %write{4562,4647}
temp	float	$tmp2236	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2237	%read{4562,4647} %write{4562,4647}
temp	int	$tmp2238	%read{2147483647,-1} %write{4562,4647}
temp	int	$tmp2239	%read{2147483647,-1} %write{4562,4647}
temp	int	$tmp2240	%read{2147483647,-1} %write{4562,4647}
temp	float	$tmp2241	%read{4650,4650} %write{4649,4649}
temp	int	$tmp2242	%read{4653,4653} %write{4652,4652}
temp	float	$tmp2243	%read{4760,4760} %write{4759,4759}
temp	float	$tmp2244	%read{4660,4660} %write{4659,4659}
temp	float	$tmp2245	%read{4659,4659} %write{4658,4658}
temp	float	$tmp2246	%read{4663,4663} %write{4662,4662}
temp	float	$tmp2247	%read{4662,4662} %write{4661,4661}
temp	float	$tmp2248	%read{4666,4666} %write{4665,4665}
temp	float	$tmp2249	%read{4665,4665} %write{4664,4664}
temp	int	$tmp2250	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2251	%read{4671,4758} %write{4672,4758}
temp	int	$tmp2252	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2253	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2254	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2255	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2256	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2257	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2258	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2259	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2260	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2261	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2262	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2263	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2264	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2265	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2266	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2267	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2268	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2269	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2270	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2271	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2272	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2273	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2274	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2275	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2276	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2277	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2278	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2279	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2280	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2281	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2282	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2283	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2284	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2285	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2286	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2287	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2288	%read{4673,4758} %write{4673,4758}
temp	point	$tmp2289	%read{4673,4758} %write{4673,4758}
temp	float	$tmp2290	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2291	%read{4673,4758} %write{4673,4758}
temp	int	$tmp2292	%read{2147483647,-1} %write{4673,4758}
temp	int	$tmp2293	%read{2147483647,-1} %write{4673,4758}
temp	int	$tmp2294	%read{2147483647,-1} %write{4673,4758}
temp	float	$tmp2295	%read{4761,4761} %write{4760,4760}
temp	int	$tmp2296	%read{4764,4764} %write{4763,4763}
temp	float	$tmp2297	%read{4873,4873} %write{4872,4872}
temp	float	$tmp2298	%read{4771,4771} %write{4770,4770}
temp	float	$tmp2299	%read{4770,4770} %write{4769,4769}
temp	float	$tmp2300	%read{4774,4774} %write{4773,4773}
temp	float	$tmp2301	%read{4773,4773} %write{4772,4772}
temp	float	$tmp2302	%read{4777,4777} %write{4776,4776}
temp	float	$tmp2303	%read{4776,4776} %write{4775,4775}
temp	int	$tmp2304	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2305	%read{4782,4869} %write{4783,4869}
temp	int	$tmp2306	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2307	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2308	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2309	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2310	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2311	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2312	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2313	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2314	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2315	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2316	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2317	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2318	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2319	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2320	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2321	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2322	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2323	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2324	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2325	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2326	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2327	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2328	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2329	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2330	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2331	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2332	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2333	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2334	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2335	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2336	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2337	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2338	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2339	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2340	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2341	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2342	%read{4784,4869} %write{4784,4869}
temp	point	$tmp2343	%read{4784,4869} %write{4784,4869}
temp	float	$tmp2344	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2345	%read{4784,4869} %write{4784,4869}
temp	int	$tmp2346	%read{2147483647,-1} %write{4784,4869}
temp	int	$tmp2347	%read{2147483647,-1} %write{4784,4869}
temp	int	$tmp2348	%read{2147483647,-1} %write{4784,4869}
temp	float	$tmp2349	%read{4872,4872} %write{4870,4870}
temp	float	$tmp2350	%read{4872,4872} %write{4871,4871}
temp	float	$tmp2351	%read{4874,4874} %write{4873,4873}
temp	int	$tmp2352	%read{4877,4877} %write{4876,4876}
temp	float	$tmp2353	%read{4993,4993} %write{4990,4991}
temp	float	$tmp2354	%read{4987,4987} %write{4986,4986}
temp	float	$tmp2355	%read{4885,4885} %write{4884,4884}
temp	float	$tmp2356	%read{4884,4884} %write{4883,4883}
temp	float	$tmp2357	%read{4888,4888} %write{4887,4887}
temp	float	$tmp2358	%read{4887,4887} %write{4886,4886}
temp	float	$tmp2359	%read{4891,4891} %write{4890,4890}
temp	float	$tmp2360	%read{4890,4890} %write{4889,4889}
temp	int	$tmp2361	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2362	%read{4896,4983} %write{4897,4983}
temp	int	$tmp2363	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2364	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2365	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2366	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2367	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2368	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2369	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2370	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2371	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2372	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2373	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2374	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2375	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2376	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2377	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2378	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2379	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2380	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2381	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2382	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2383	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2384	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2385	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2386	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2387	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2388	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2389	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2390	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2391	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2392	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2393	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2394	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2395	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2396	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2397	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2398	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2399	%read{4898,4983} %write{4898,4983}
temp	point	$tmp2400	%read{4898,4983} %write{4898,4983}
temp	float	$tmp2401	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2402	%read{4898,4983} %write{4898,4983}
temp	int	$tmp2403	%read{2147483647,-1} %write{4898,4983}
temp	int	$tmp2404	%read{2147483647,-1} %write{4898,4983}
temp	int	$tmp2405	%read{2147483647,-1} %write{4898,4983}
temp	float	$tmp2406	%read{4986,4986} %write{4984,4984}
temp	float	$tmp2407	%read{4986,4986} %write{4985,4985}
temp	int	$tmp2408	%read{4989,4989} %write{4988,4988}
temp	float	$tmp2409	%read{4994,4994} %write{4993,4993}
temp	int	$tmp2410	%read{4997,4997} %write{4996,4996}
temp	float	$tmp2411	%read{5003,5003} %write{5002,5002}
temp	float	$tmp2412	%read{5004,5004} %write{5003,5003}
temp	float	$tmp2413	%read{5006,5006} %write{5005,5005}
temp	int	$tmp2414	%read{5008,5008} %write{5007,5007}
temp	float	$tmp2415	%read{5013,5013} %write{5008,5008}
temp	int	$tmp2416	%read{5010,5010} %write{5009,5009}
temp	int	$tmp2417	%read{5011,5011} %write{5010,5010}
temp	int	$tmp2418	%read{5012,5012} %write{5011,5011}
temp	float	$tmp2419	%read{5013,5013} %write{5012,5012}
temp	float	$tmp2420	%read{5014,5014} %write{5013,5013}
temp	int	$tmp2421	%read{5016,5016} %write{5015,5015}
temp	int	$tmp2422	%read{5017,5017} %write{5016,5016}
temp	float	$tmp2423	%read{5022,5022} %write{5017,5017}
temp	int	$tmp2424	%read{5019,5019} %write{5018,5018}
temp	int	$tmp2425	%read{5020,5020} %write{5019,5019}
temp	int	$tmp2426	%read{5021,5021} %write{5020,5020}
temp	float	$tmp2427	%read{5022,5022} %write{5021,5021}
temp	float	$tmp2428	%read{5023,5023} %write{5022,5022}
temp	float	$tmp2429	%read{5025,5025} %write{5024,5024}
temp	float	$tmp2430	%read{5027,5027} %write{5025,5025}
temp	float	$tmp2431	%read{5027,5027} %write{5026,5026}
temp	int	$tmp2432	%read{5030,5030} %write{5029,5029}
temp	float	$tmp2433	%read{5035,5035} %write{5030,5030}
temp	int	$tmp2434	%read{5032,5032} %write{5031,5031}
temp	int	$tmp2435	%read{5033,5033} %write{5032,5032}
temp	int	$tmp2436	%read{5034,5034} %write{5033,5033}
temp	float	$tmp2437	%read{5035,5035} %write{5034,5034}
temp	float	$tmp2438	%read{5036,5036} %write{5035,5035}
temp	float	$tmp2439	%read{6504,6504} %write{6492,6502}
temp	point	$tmp2440	%read{5053,5767} %write{5042,5042}
temp	float	$tmp2441	%read{5042,5042} %write{5039,5039}
temp	float	$tmp2442	%read{5042,5042} %write{5040,5040}
temp	float	$tmp2443	%read{5042,5042} %write{5041,5041}
temp	float	$tmp2444	%read{5049,5049} %write{5048,5048}
temp	int	$tmp2445	%read{5051,5762} %write{5052,5762}
temp	point	$tmp2446	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2447	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2448	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2449	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2450	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2451	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2452	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2453	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2454	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2455	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2456	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2457	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2458	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2459	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2460	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2461	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2462	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2463	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2464	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2465	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2466	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2467	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2468	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2469	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2470	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2471	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2472	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2473	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2474	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2475	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2476	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2477	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2478	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2479	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2480	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2481	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2482	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2483	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2484	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2485	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2486	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2487	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2488	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2489	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2490	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2491	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2492	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2493	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2494	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2495	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2496	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2497	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2498	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2499	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2500	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2501	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2502	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2503	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2504	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2505	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2506	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2507	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2508	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2509	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2510	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2511	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2512	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2513	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2514	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2515	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2516	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2517	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2518	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2519	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2520	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2521	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2522	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2523	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2524	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2525	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2526	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2527	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2528	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2529	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2530	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2531	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2532	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2533	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2534	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2535	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2536	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2537	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2538	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2539	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2540	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2541	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2542	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2543	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2544	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2545	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2546	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2547	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2548	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2549	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2550	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2551	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2552	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2553	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2554	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2555	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2556	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2557	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2558	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2559	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2560	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2561	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2562	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2563	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2564	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2565	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2566	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2567	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2568	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2569	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2570	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2571	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2572	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2573	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2574	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2575	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2576	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2577	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2578	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2579	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2580	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2581	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2582	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2583	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2584	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2585	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2586	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2587	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2588	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2589	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2590	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2591	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2592	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2593	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2594	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2595	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2596	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2597	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2598	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2599	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2600	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2601	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2602	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2603	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2604	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2605	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2606	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2607	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2608	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2609	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2610	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2611	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2612	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2613	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2614	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2615	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2616	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2617	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2618	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2619	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2620	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2621	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2622	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2623	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2624	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2625	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2626	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2627	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2628	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2629	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2630	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2631	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2632	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2633	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2634	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2635	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2636	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2637	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2638	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2639	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2640	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2641	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2642	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2643	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2644	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2645	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2646	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2647	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2648	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2649	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2650	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2651	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2652	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2653	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2654	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2655	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2656	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2657	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2658	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2659	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2660	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2661	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2662	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2663	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2664	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2665	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2666	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2667	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2668	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2669	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2670	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2671	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2672	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2673	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2674	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2675	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2676	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2677	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2678	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2679	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2680	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2681	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2682	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2683	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2684	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2685	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2686	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2687	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2688	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2689	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2690	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2691	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2692	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2693	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2694	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2695	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2696	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2697	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2698	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2699	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2700	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2701	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2702	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2703	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2704	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2705	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2706	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2707	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2708	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2709	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2710	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2711	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2712	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2713	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2714	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2715	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2716	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2717	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2718	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2719	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2720	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2721	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2722	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2723	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2724	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2725	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2726	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2727	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2728	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2729	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2730	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2731	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2732	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2733	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2734	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2735	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2736	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2737	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2738	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2739	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2740	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2741	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2742	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2743	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2744	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2745	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2746	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2747	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2748	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2749	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2750	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2751	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2752	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2753	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2754	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2755	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2756	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2757	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2758	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2759	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2760	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2761	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2762	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2763	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2764	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2765	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2766	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2767	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2768	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2769	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2770	%read{5053,5762} %write{5053,5762}
temp	point	$tmp2771	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2772	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2773	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2774	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2775	%read{2147483647,-1} %write{5053,5762}
temp	int	$tmp2776	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2777	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2778	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2779	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2780	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2781	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2782	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2783	%read{5053,5762} %write{5053,5762}
temp	float	$tmp2784	%read{5053,5762} %write{5053,5762}
temp	int	$tmp2785	%read{2147483647,-1} %write{5053,5762}
temp	float	$tmp2786	%read{5764,5764} %write{5763,5763}
temp	int	$tmp2787	%read{5766,5766} %write{5765,5765}
temp	point	$tmp2788	%read{5775,6463} %write{5767,5767}
temp	int	$tmp2789	%read{5770,5770} %write{5769,5769}
temp	int	$tmp2790	%read{5774,5774} %write{5773,5773}
temp	int	$tmp2791	%read{5778,5778} %write{5777,5777}
temp	int	$tmp2792	%read{5779,5779} %write{5778,5778}
temp	int	$tmp2793	%read{5785,5785} %write{5784,5784}
temp	float	$tmp2794	%read{5892,5892} %write{5891,5891}
temp	float	$tmp2795	%read{5792,5792} %write{5791,5791}
temp	float	$tmp2796	%read{5791,5791} %write{5790,5790}
temp	float	$tmp2797	%read{5795,5795} %write{5794,5794}
temp	float	$tmp2798	%read{5794,5794} %write{5793,5793}
temp	float	$tmp2799	%read{5798,5798} %write{5797,5797}
temp	float	$tmp2800	%read{5797,5797} %write{5796,5796}
temp	int	$tmp2801	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2802	%read{5803,5890} %write{5804,5890}
temp	int	$tmp2803	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2804	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2805	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2806	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2807	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2808	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2809	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2810	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2811	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2812	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2813	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2814	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2815	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2816	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2817	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2818	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2819	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2820	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2821	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2822	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2823	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2824	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2825	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2826	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2827	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2828	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2829	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2830	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2831	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2832	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2833	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2834	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2835	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2836	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2837	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2838	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2839	%read{5805,5890} %write{5805,5890}
temp	point	$tmp2840	%read{5805,5890} %write{5805,5890}
temp	float	$tmp2841	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2842	%read{5805,5890} %write{5805,5890}
temp	int	$tmp2843	%read{2147483647,-1} %write{5805,5890}
temp	int	$tmp2844	%read{2147483647,-1} %write{5805,5890}
temp	int	$tmp2845	%read{2147483647,-1} %write{5805,5890}
temp	float	$tmp2846	%read{5893,5893} %write{5892,5892}
temp	int	$tmp2847	%read{5896,5896} %write{5895,5895}
temp	float	$tmp2848	%read{6003,6003} %write{6002,6002}
temp	float	$tmp2849	%read{5903,5903} %write{5902,5902}
temp	float	$tmp2850	%read{5902,5902} %write{5901,5901}
temp	float	$tmp2851	%read{5906,5906} %write{5905,5905}
temp	float	$tmp2852	%read{5905,5905} %write{5904,5904}
temp	float	$tmp2853	%read{5909,5909} %write{5908,5908}
temp	float	$tmp2854	%read{5908,5908} %write{5907,5907}
temp	int	$tmp2855	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2856	%read{5914,6001} %write{5915,6001}
temp	int	$tmp2857	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2858	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2859	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2860	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2861	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2862	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2863	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2864	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2865	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2866	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2867	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2868	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2869	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2870	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2871	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2872	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2873	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2874	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2875	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2876	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2877	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2878	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2879	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2880	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2881	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2882	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2883	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2884	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2885	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2886	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2887	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2888	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2889	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2890	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2891	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2892	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2893	%read{5916,6001} %write{5916,6001}
temp	point	$tmp2894	%read{5916,6001} %write{5916,6001}
temp	float	$tmp2895	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2896	%read{5916,6001} %write{5916,6001}
temp	int	$tmp2897	%read{2147483647,-1} %write{5916,6001}
temp	int	$tmp2898	%read{2147483647,-1} %write{5916,6001}
temp	int	$tmp2899	%read{2147483647,-1} %write{5916,6001}
temp	float	$tmp2900	%read{6004,6004} %write{6003,6003}
temp	int	$tmp2901	%read{6007,6007} %write{6006,6006}
temp	float	$tmp2902	%read{6114,6114} %write{6113,6113}
temp	float	$tmp2903	%read{6014,6014} %write{6013,6013}
temp	float	$tmp2904	%read{6013,6013} %write{6012,6012}
temp	float	$tmp2905	%read{6017,6017} %write{6016,6016}
temp	float	$tmp2906	%read{6016,6016} %write{6015,6015}
temp	float	$tmp2907	%read{6020,6020} %write{6019,6019}
temp	float	$tmp2908	%read{6019,6019} %write{6018,6018}
temp	int	$tmp2909	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2910	%read{6025,6112} %write{6026,6112}
temp	int	$tmp2911	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2912	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2913	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2914	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2915	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2916	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2917	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2918	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2919	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2920	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2921	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2922	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2923	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2924	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2925	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2926	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2927	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2928	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2929	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2930	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2931	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2932	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2933	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2934	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2935	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2936	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2937	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2938	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2939	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2940	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2941	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2942	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2943	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2944	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2945	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2946	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2947	%read{6027,6112} %write{6027,6112}
temp	point	$tmp2948	%read{6027,6112} %write{6027,6112}
temp	float	$tmp2949	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2950	%read{6027,6112} %write{6027,6112}
temp	int	$tmp2951	%read{2147483647,-1} %write{6027,6112}
temp	int	$tmp2952	%read{2147483647,-1} %write{6027,6112}
temp	int	$tmp2953	%read{2147483647,-1} %write{6027,6112}
temp	float	$tmp2954	%read{6115,6115} %write{6114,6114}
temp	int	$tmp2955	%read{6118,6118} %write{6117,6117}
temp	float	$tmp2956	%read{6225,6225} %write{6224,6224}
temp	float	$tmp2957	%read{6125,6125} %write{6124,6124}
temp	float	$tmp2958	%read{6124,6124} %write{6123,6123}
temp	float	$tmp2959	%read{6128,6128} %write{6127,6127}
temp	float	$tmp2960	%read{6127,6127} %write{6126,6126}
temp	float	$tmp2961	%read{6131,6131} %write{6130,6130}
temp	float	$tmp2962	%read{6130,6130} %write{6129,6129}
temp	int	$tmp2963	%read{6138,6223} %write{6138,6223}
temp	int	$tmp2964	%read{6136,6223} %write{6137,6223}
temp	int	$tmp2965	%read{6138,6223} %write{6138,6223}
temp	int	$tmp2966	%read{6138,6223} %write{6138,6223}
temp	int	$tmp2967	%read{6138,6223} %write{6138,6223}
temp	int	$tmp2968	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2969	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2970	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2971	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2972	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2973	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2974	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2975	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2976	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2977	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2978	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2979	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2980	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2981	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2982	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2983	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2984	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2985	%read{6138,6223} %write{6138,6223}
temp	int	$tmp2986	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2987	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2988	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2989	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2990	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2991	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2992	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2993	%read{6138,6223} %write{6138,6223}
temp	int	$tmp2994	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2995	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2996	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2997	%read{6138,6223} %write{6138,6223}
temp	point	$tmp2998	%read{6138,6223} %write{6138,6223}
temp	float	$tmp2999	%read{6138,6223} %write{6138,6223}
temp	int	$tmp3000	%read{6138,6223} %write{6138,6223}
temp	float	$tmp3001	%read{6138,6223} %write{6138,6223}
temp	point	$tmp3002	%read{6138,6223} %write{6138,6223}
temp	float	$tmp3003	%read{6138,6223} %write{6138,6223}
temp	int	$tmp3004	%read{6138,6223} %write{6138,6223}
temp	int	$tmp3005	%read{2147483647,-1} %write{6138,6223}
temp	int	$tmp3006	%read{2147483647,-1} %write{6138,6223}
temp	int	$tmp3007	%read{2147483647,-1} %write{6138,6223}
temp	float	$tmp3008	%read{6226,6226} %write{6225,6225}
temp	int	$tmp3009	%read{6229,6229} %write{6228,6228}
temp	float	$tmp3010	%read{6338,6338} %write{6337,6337}
temp	float	$tmp3011	%read{6236,6236} %write{6235,6235}
temp	float	$tmp3012	%read{6235,6235} %write{6234,6234}
temp	float	$tmp3013	%read{6239,6239} %write{6238,6238}
temp	float	$tmp3014	%read{6238,6238} %write{6237,6237}
temp	float	$tmp3015	%read{6242,6242} %write{6241,6241}
temp	float	$tmp3016	%read{6241,6241} %write{6240,6240}
temp	int	$tmp3017	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3018	%read{6247,6334} %write{6248,6334}
temp	int	$tmp3019	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3020	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3021	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3022	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3023	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3024	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3025	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3026	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3027	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3028	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3029	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3030	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3031	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3032	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3033	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3034	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3035	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3036	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3037	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3038	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3039	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3040	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3041	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3042	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3043	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3044	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3045	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3046	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3047	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3048	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3049	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3050	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3051	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3052	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3053	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3054	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3055	%read{6249,6334} %write{6249,6334}
temp	point	$tmp3056	%read{6249,6334} %write{6249,6334}
temp	float	$tmp3057	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3058	%read{6249,6334} %write{6249,6334}
temp	int	$tmp3059	%read{2147483647,-1} %write{6249,6334}
temp	int	$tmp3060	%read{2147483647,-1} %write{6249,6334}
temp	int	$tmp3061	%read{2147483647,-1} %write{6249,6334}
temp	float	$tmp3062	%read{6337,6337} %write{6335,6335}
temp	float	$tmp3063	%read{6337,6337} %write{6336,6336}
temp	float	$tmp3064	%read{6339,6339} %write{6338,6338}
temp	int	$tmp3065	%read{6342,6342} %write{6341,6341}
temp	float	$tmp3066	%read{6458,6458} %write{6455,6456}
temp	float	$tmp3067	%read{6452,6452} %write{6451,6451}
temp	float	$tmp3068	%read{6350,6350} %write{6349,6349}
temp	float	$tmp3069	%read{6349,6349} %write{6348,6348}
temp	float	$tmp3070	%read{6353,6353} %write{6352,6352}
temp	float	$tmp3071	%read{6352,6352} %write{6351,6351}
temp	float	$tmp3072	%read{6356,6356} %write{6355,6355}
temp	float	$tmp3073	%read{6355,6355} %write{6354,6354}
temp	int	$tmp3074	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3075	%read{6361,6448} %write{6362,6448}
temp	int	$tmp3076	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3077	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3078	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3079	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3080	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3081	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3082	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3083	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3084	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3085	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3086	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3087	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3088	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3089	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3090	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3091	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3092	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3093	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3094	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3095	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3096	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3097	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3098	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3099	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3100	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3101	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3102	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3103	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3104	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3105	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3106	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3107	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3108	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3109	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3110	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3111	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3112	%read{6363,6448} %write{6363,6448}
temp	point	$tmp3113	%read{6363,6448} %write{6363,6448}
temp	float	$tmp3114	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3115	%read{6363,6448} %write{6363,6448}
temp	int	$tmp3116	%read{2147483647,-1} %write{6363,6448}
temp	int	$tmp3117	%read{2147483647,-1} %write{6363,6448}
temp	int	$tmp3118	%read{2147483647,-1} %write{6363,6448}
temp	float	$tmp3119	%read{6451,6451} %write{6449,6449}
temp	float	$tmp3120	%read{6451,6451} %write{6450,6450}
temp	int	$tmp3121	%read{6454,6454} %write{6453,6453}
temp	float	$tmp3122	%read{6459,6459} %write{6458,6458}
temp	int	$tmp3123	%read{6462,6462} %write{6461,6461}
temp	float	$tmp3124	%read{6468,6468} %write{6467,6467}
temp	float	$tmp3125	%read{6469,6469} %write{6468,6468}
temp	float	$tmp3126	%read{6471,6471} %write{6470,6470}
temp	int	$tmp3127	%read{6473,6473} %write{6472,6472}
temp	float	$tmp3128	%read{6478,6478} %write{6473,6473}
temp	int	$tmp3129	%read{6475,6475} %write{6474,6474}
temp	int	$tmp3130	%read{6476,6476} %write{6475,6475}
temp	int	$tmp3131	%read{6477,6477} %write{6476,6476}
temp	float	$tmp3132	%read{6478,6478} %write{6477,6477}
temp	float	$tmp3133	%read{6479,6479} %write{6478,6478}
temp	int	$tmp3134	%read{6481,6481} %write{6480,6480}
temp	int	$tmp3135	%read{6482,6482} %write{6481,6481}
temp	float	$tmp3136	%read{6487,6487} %write{6482,6482}
temp	int	$tmp3137	%read{6484,6484} %write{6483,6483}
temp	int	$tmp3138	%read{6485,6485} %write{6484,6484}
temp	int	$tmp3139	%read{6486,6486} %write{6485,6485}
temp	float	$tmp3140	%read{6487,6487} %write{6486,6486}
temp	float	$tmp3141	%read{6488,6488} %write{6487,6487}
temp	float	$tmp3142	%read{6490,6490} %write{6489,6489}
temp	float	$tmp3143	%read{6492,6492} %write{6490,6490}
temp	float	$tmp3144	%read{6492,6492} %write{6491,6491}
temp	int	$tmp3145	%read{6495,6495} %write{6494,6494}
temp	float	$tmp3146	%read{6500,6500} %write{6495,6495}
temp	int	$tmp3147	%read{6497,6497} %write{6496,6496}
temp	int	$tmp3148	%read{6498,6498} %write{6497,6497}
temp	int	$tmp3149	%read{6499,6499} %write{6498,6498}
temp	float	$tmp3150	%read{6500,6500} %write{6499,6499}
temp	float	$tmp3151	%read{6501,6501} %write{6500,6500}
code Vector
# include/node_noise_texture.osl:50
# 	output float Fac = 0.0,
	assign		Vector P 	%filename{"include/node_noise_texture.osl"} %line{50} %argrw{"wr"}
code ___main___
# include/node_noise_texture.osl:54
# 
	assign		p Vector 	%filename{"include/node_noise_texture.osl"} %line{54} %argrw{"wr"}
# include/node_noise_texture.osl:56
# 		p = transform(mapping, p);
	if		use_mapping 4 4 	%line{56} %argrw{"r"}
# include/node_noise_texture.osl:57
# 
	transform	p mapping p 	%line{57} %argrw{"wrr"}
# include/node_noise_texture.osl:59
# 	Fac = noise(p * Scale, Basis, Distortion, Detail, Fac, Color);
	assign		Basis $const1 	%line{59} %argrw{"wr"}
# include/node_noise_texture.osl:60
# }
	mul		$tmp1 p Scale 	%line{60} %argrw{"wrr"}
	functioncall	$const2 6506 	%argrw{"r"}
# include/node_noise_texture.osl:26
# 
	assign		___667_hard $const3 	%line{26} %argrw{"wr"}
# include/node_noise_texture.osl:28
# 		r[0] = noise_basis(p + point(13.5), basis) * distortion;
	neq		$tmp2 Distortion $const4 	%line{28} %argrw{"wrr"}
	if		$tmp2 2113 2113 	%argrw{"r"}
# include/node_noise_texture.osl:29
# 		r[1] = noise_basis(p, basis) * distortion;
	add		$tmp5 $tmp1 $const5 	%line{29} %argrw{"wrr"}
	functioncall	$const6 709 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp6 Basis $const1 	%filename{"include/node_texture.h"} %line{177} %argrw{"wrr"}
	if		$tmp6 27 27 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 26 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp7 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp7 19 20 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp5 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp5 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp8 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp9 $tmp8 $const3 	%argrw{"wrr"}
	if		$tmp9 25 25 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		$tmp3 $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		$tmp3 ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp10 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp10 138 138 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 137 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 135 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 135 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 134 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp13 $tmp5 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp12 $tmp13 	%argrw{"wr"}
	assign		___633_xi $tmp12 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp15 $tmp5 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp14 $tmp15 	%argrw{"wr"}
	assign		___633_yi $tmp14 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp17 $tmp5 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp16 $tmp17 	%argrw{"wr"}
	assign		___633_zi $tmp16 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp19 48 50 132 134 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp18 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp19 ___633_xx $tmp18 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp21 52 54 130 132 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp20 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp21 ___633_yy $tmp20 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp23 56 58 128 130 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp22 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp23 ___633_zz $tmp22 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp24 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp25 ___633_yy 	%argrw{"wr"}
	assign		$tmp26 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp24 $tmp25 $tmp26 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 75 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp28 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp29 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp30 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp27 $tmp28 $tmp29 $tmp30 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp27 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp32 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp33 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp34 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp31 $tmp32 $tmp33 $tmp34 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp31 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp35 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp5 $tmp35 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 79 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp37 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp38 ___633_yy 	%argrw{"wr"}
	assign		$tmp39 ___633_zz 	%argrw{"wr"}
	point		$tmp36 $tmp37 $tmp38 $tmp39 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp36 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp40 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp41 ___639_d $tmp40 	%argrw{"wrr"}
	if		$tmp41 101 128 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp42 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp42 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp43 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp43 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp44 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp44 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp45 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp45 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp46 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp46 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp47 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp47 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp48 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp49 ___639_d $tmp48 	%argrw{"wrr"}
	if		$tmp49 114 128 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp50 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp50 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp51 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp51 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp52 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp52 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp53 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp53 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp54 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp55 ___639_d $tmp54 	%argrw{"wrr"}
	if		$tmp55 123 128 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp56 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp56 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp57 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp57 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp58 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp59 ___639_d $tmp58 	%argrw{"wrr"}
	if		$tmp59 128 128 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp60 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp61 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp62 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp11 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp63 $const13 $tmp11 	%line{147} %argrw{"wrr"}
	sub		$tmp3 $tmp63 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp64 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp64 249 249 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 248 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 246 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 246 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 245 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp67 $tmp5 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp66 $tmp67 	%argrw{"wr"}
	assign		___633_xi $tmp66 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp69 $tmp5 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp68 $tmp69 	%argrw{"wr"}
	assign		___633_yi $tmp68 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp71 $tmp5 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp70 $tmp71 	%argrw{"wr"}
	assign		___633_zi $tmp70 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp73 159 161 243 245 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp72 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp73 ___633_xx $tmp72 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp75 163 165 241 243 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp74 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp75 ___633_yy $tmp74 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp77 167 169 239 241 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp76 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp77 ___633_zz $tmp76 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp78 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp79 ___633_yy 	%argrw{"wr"}
	assign		$tmp80 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp78 $tmp79 $tmp80 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 186 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp82 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp83 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp84 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp81 $tmp82 $tmp83 $tmp84 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp81 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp86 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp87 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp88 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp85 $tmp86 $tmp87 $tmp88 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp85 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp89 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp5 $tmp89 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 190 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp91 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp92 ___633_yy 	%argrw{"wr"}
	assign		$tmp93 ___633_zz 	%argrw{"wr"}
	point		$tmp90 $tmp91 $tmp92 $tmp93 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp90 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp94 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp95 ___639_d $tmp94 	%argrw{"wrr"}
	if		$tmp95 212 239 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp96 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp96 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp97 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp97 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp98 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp98 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp99 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp99 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp100 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp100 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp101 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp101 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp102 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp103 ___639_d $tmp102 	%argrw{"wrr"}
	if		$tmp103 225 239 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp104 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp104 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp105 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp105 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp106 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp106 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp107 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp107 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp108 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp109 ___639_d $tmp108 	%argrw{"wrr"}
	if		$tmp109 234 239 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp110 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp110 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp111 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp111 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp112 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp113 ___639_d $tmp112 	%argrw{"wrr"}
	if		$tmp113 239 239 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp114 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp115 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp116 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp65 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp117 $const13 $tmp65 	%line{148} %argrw{"wrr"}
	sub		$tmp3 $tmp117 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp118 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp118 360 360 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 359 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 357 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 357 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 356 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp121 $tmp5 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp120 $tmp121 	%argrw{"wr"}
	assign		___633_xi $tmp120 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp123 $tmp5 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp122 $tmp123 	%argrw{"wr"}
	assign		___633_yi $tmp122 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp125 $tmp5 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp124 $tmp125 	%argrw{"wr"}
	assign		___633_zi $tmp124 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp127 270 272 354 356 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp126 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp127 ___633_xx $tmp126 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp129 274 276 352 354 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp128 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp129 ___633_yy $tmp128 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp131 278 280 350 352 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp130 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp131 ___633_zz $tmp130 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp132 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp133 ___633_yy 	%argrw{"wr"}
	assign		$tmp134 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp132 $tmp133 $tmp134 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 297 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp136 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp137 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp138 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp135 $tmp136 $tmp137 $tmp138 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp135 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp140 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp141 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp142 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp139 $tmp140 $tmp141 $tmp142 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp139 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp143 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp5 $tmp143 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 301 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp145 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp146 ___633_yy 	%argrw{"wr"}
	assign		$tmp147 ___633_zz 	%argrw{"wr"}
	point		$tmp144 $tmp145 $tmp146 $tmp147 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp144 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp148 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp149 ___639_d $tmp148 	%argrw{"wrr"}
	if		$tmp149 323 350 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp150 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp150 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp151 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp151 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp152 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp152 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp153 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp153 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp154 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp154 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp155 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp155 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp156 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp157 ___639_d $tmp156 	%argrw{"wrr"}
	if		$tmp157 336 350 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp158 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp158 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp159 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp159 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp160 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp160 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp161 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp161 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp162 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp163 ___639_d $tmp162 	%argrw{"wrr"}
	if		$tmp163 345 350 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp164 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp164 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp165 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp165 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp166 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp167 ___639_d $tmp166 	%argrw{"wrr"}
	if		$tmp167 350 350 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp168 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp169 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp170 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp119 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp171 $const13 $tmp119 	%line{149} %argrw{"wrr"}
	sub		$tmp3 $tmp171 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp172 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp172 471 471 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 470 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 468 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 468 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 467 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp175 $tmp5 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp174 $tmp175 	%argrw{"wr"}
	assign		___633_xi $tmp174 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp177 $tmp5 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp176 $tmp177 	%argrw{"wr"}
	assign		___633_yi $tmp176 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp179 $tmp5 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp178 $tmp179 	%argrw{"wr"}
	assign		___633_zi $tmp178 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp181 381 383 465 467 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp180 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp181 ___633_xx $tmp180 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp183 385 387 463 465 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp182 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp183 ___633_yy $tmp182 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp185 389 391 461 463 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp184 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp185 ___633_zz $tmp184 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp186 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp187 ___633_yy 	%argrw{"wr"}
	assign		$tmp188 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp186 $tmp187 $tmp188 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 408 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp190 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp191 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp192 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp189 $tmp190 $tmp191 $tmp192 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp189 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp194 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp195 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp196 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp193 $tmp194 $tmp195 $tmp196 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp193 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp197 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp5 $tmp197 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 412 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp199 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp200 ___633_yy 	%argrw{"wr"}
	assign		$tmp201 ___633_zz 	%argrw{"wr"}
	point		$tmp198 $tmp199 $tmp200 $tmp201 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp198 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp202 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp203 ___639_d $tmp202 	%argrw{"wrr"}
	if		$tmp203 434 461 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp204 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp204 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp205 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp205 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp206 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp206 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp207 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp207 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp208 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp208 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp209 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp209 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp210 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp211 ___639_d $tmp210 	%argrw{"wrr"}
	if		$tmp211 447 461 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp212 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp212 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp213 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp213 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp214 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp214 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp215 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp215 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp216 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp217 ___639_d $tmp216 	%argrw{"wrr"}
	if		$tmp217 456 461 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp218 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp218 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp219 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp219 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp220 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp221 ___639_d $tmp220 	%argrw{"wrr"}
	if		$tmp221 461 461 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp222 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp223 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp224 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp173 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp225 $const13 $tmp173 	%line{150} %argrw{"wrr"}
	sub		$tmp3 $tmp225 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp226 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp226 584 584 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 583 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 581 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 581 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 578 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp229 $tmp5 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp228 $tmp229 	%argrw{"wr"}
	assign		___633_xi $tmp228 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp231 $tmp5 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp230 $tmp231 	%argrw{"wr"}
	assign		___633_yi $tmp230 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp233 $tmp5 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp232 $tmp233 	%argrw{"wr"}
	assign		___633_zi $tmp232 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp235 492 494 576 578 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp234 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp235 ___633_xx $tmp234 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp237 496 498 574 576 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp236 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp237 ___633_yy $tmp236 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp239 500 502 572 574 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp238 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp239 ___633_zz $tmp238 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp240 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp241 ___633_yy 	%argrw{"wr"}
	assign		$tmp242 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp240 $tmp241 $tmp242 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 519 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp244 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp245 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp246 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp243 $tmp244 $tmp245 $tmp246 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp243 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp248 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp249 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp250 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp247 $tmp248 $tmp249 $tmp250 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp247 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp251 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp5 $tmp251 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 523 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp253 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp254 ___633_yy 	%argrw{"wr"}
	assign		$tmp255 ___633_zz 	%argrw{"wr"}
	point		$tmp252 $tmp253 $tmp254 $tmp255 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp252 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp256 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp257 ___639_d $tmp256 	%argrw{"wrr"}
	if		$tmp257 545 572 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp258 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp258 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp259 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp259 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp260 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp260 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp261 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp261 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp262 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp262 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp263 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp263 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp264 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp265 ___639_d $tmp264 	%argrw{"wrr"}
	if		$tmp265 558 572 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp266 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp266 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp267 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp267 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp268 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp268 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp269 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp269 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp270 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp271 ___639_d $tmp270 	%argrw{"wrr"}
	if		$tmp271 567 572 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp272 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp272 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp273 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp273 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp274 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp275 ___639_d $tmp274 	%argrw{"wrr"}
	if		$tmp275 572 572 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp276 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp277 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp278 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp279 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp280 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp227 $tmp279 $tmp280 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp281 $const13 $tmp227 	%line{151} %argrw{"wrr"}
	sub		$tmp3 $tmp281 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp282 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp282 704 704 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 703 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 701 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 695 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 695 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 692 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp286 $tmp5 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp285 $tmp286 	%argrw{"wr"}
	assign		___633_xi $tmp285 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp288 $tmp5 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp287 $tmp288 	%argrw{"wr"}
	assign		___633_yi $tmp287 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp290 $tmp5 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp289 $tmp290 	%argrw{"wr"}
	assign		___633_zi $tmp289 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp292 606 608 690 692 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp291 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp292 ___633_xx $tmp291 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp294 610 612 688 690 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp293 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp294 ___633_yy $tmp293 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp296 614 616 686 688 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp295 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp296 ___633_zz $tmp295 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp297 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp298 ___633_yy 	%argrw{"wr"}
	assign		$tmp299 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp297 $tmp298 $tmp299 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 633 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp301 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp302 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp303 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp300 $tmp301 $tmp302 $tmp303 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp300 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp305 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp306 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp307 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp304 $tmp305 $tmp306 $tmp307 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp304 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp308 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp5 $tmp308 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 637 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp310 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp311 ___633_yy 	%argrw{"wr"}
	assign		$tmp312 ___633_zz 	%argrw{"wr"}
	point		$tmp309 $tmp310 $tmp311 $tmp312 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp309 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp313 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp314 ___639_d $tmp313 	%argrw{"wrr"}
	if		$tmp314 659 686 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp315 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp315 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp316 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp316 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp317 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp317 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp318 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp318 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp319 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp319 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp320 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp320 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp321 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp322 ___639_d $tmp321 	%argrw{"wrr"}
	if		$tmp322 672 686 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp323 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp323 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp324 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp324 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp325 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp325 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp326 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp326 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp327 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp328 ___639_d $tmp327 	%argrw{"wrr"}
	if		$tmp328 681 686 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp329 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp329 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp330 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp330 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp331 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp332 ___639_d $tmp331 	%argrw{"wrr"}
	if		$tmp332 686 686 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp333 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp334 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp335 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp336 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp337 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp284 $tmp336 $tmp337 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp284 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp338 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp338 699 700 	%argrw{"r"}
	assign		$tmp283 $const23 	%argrw{"wr"}
	assign		$tmp283 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp339 $const13 $tmp283 	%line{152} %argrw{"wrr"}
	sub		$tmp3 $tmp339 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp340 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp340 708 708 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	$tmp3 $tmp5 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		$tmp3 $const4 	%line{194} %argrw{"wr"}
# include/node_noise_texture.osl:29
# 		r[1] = noise_basis(p, basis) * distortion;
	mul		$tmp341 $tmp3 Distortion 	%filename{"include/node_noise_texture.osl"} %line{29} %argrw{"wrr"}
	compassign	___667_r $const3 $tmp341 	%argrw{"wrr"}
# include/node_noise_texture.osl:30
# 		r[2] = noise_basis(p - point(13.5), basis) * distortion;
	functioncall	$const6 1409 	%line{30} %argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp343 Basis $const1 	%filename{"include/node_texture.h"} %line{177} %argrw{"wrr"}
	if		$tmp343 727 727 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 726 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp344 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp344 719 720 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp1 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp1 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp345 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp346 $tmp345 $const3 	%argrw{"wrr"}
	if		$tmp346 725 725 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		$tmp342 $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		$tmp342 ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp347 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp347 838 838 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 837 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 835 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 835 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 834 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp350 $tmp1 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp349 $tmp350 	%argrw{"wr"}
	assign		___633_xi $tmp349 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp352 $tmp1 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp351 $tmp352 	%argrw{"wr"}
	assign		___633_yi $tmp351 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp354 $tmp1 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp353 $tmp354 	%argrw{"wr"}
	assign		___633_zi $tmp353 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp356 748 750 832 834 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp355 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp356 ___633_xx $tmp355 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp358 752 754 830 832 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp357 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp358 ___633_yy $tmp357 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp360 756 758 828 830 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp359 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp360 ___633_zz $tmp359 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp361 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp362 ___633_yy 	%argrw{"wr"}
	assign		$tmp363 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp361 $tmp362 $tmp363 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 775 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp365 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp366 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp367 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp364 $tmp365 $tmp366 $tmp367 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp364 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp369 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp370 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp371 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp368 $tmp369 $tmp370 $tmp371 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp368 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp372 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1 $tmp372 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 779 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp374 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp375 ___633_yy 	%argrw{"wr"}
	assign		$tmp376 ___633_zz 	%argrw{"wr"}
	point		$tmp373 $tmp374 $tmp375 $tmp376 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp373 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp377 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp378 ___639_d $tmp377 	%argrw{"wrr"}
	if		$tmp378 801 828 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp379 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp379 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp380 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp380 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp381 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp381 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp382 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp382 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp383 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp383 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp384 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp384 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp385 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp386 ___639_d $tmp385 	%argrw{"wrr"}
	if		$tmp386 814 828 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp387 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp387 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp388 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp388 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp389 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp389 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp390 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp390 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp391 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp392 ___639_d $tmp391 	%argrw{"wrr"}
	if		$tmp392 823 828 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp393 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp393 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp394 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp394 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp395 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp396 ___639_d $tmp395 	%argrw{"wrr"}
	if		$tmp396 828 828 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp397 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp398 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp399 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp348 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp400 $const13 $tmp348 	%line{147} %argrw{"wrr"}
	sub		$tmp342 $tmp400 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp401 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp401 949 949 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 948 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 946 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 946 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 945 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp404 $tmp1 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp403 $tmp404 	%argrw{"wr"}
	assign		___633_xi $tmp403 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp406 $tmp1 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp405 $tmp406 	%argrw{"wr"}
	assign		___633_yi $tmp405 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp408 $tmp1 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp407 $tmp408 	%argrw{"wr"}
	assign		___633_zi $tmp407 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp410 859 861 943 945 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp409 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp410 ___633_xx $tmp409 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp412 863 865 941 943 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp411 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp412 ___633_yy $tmp411 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp414 867 869 939 941 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp413 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp414 ___633_zz $tmp413 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp415 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp416 ___633_yy 	%argrw{"wr"}
	assign		$tmp417 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp415 $tmp416 $tmp417 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 886 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp419 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp420 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp421 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp418 $tmp419 $tmp420 $tmp421 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp418 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp423 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp424 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp425 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp422 $tmp423 $tmp424 $tmp425 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp422 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp426 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1 $tmp426 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 890 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp428 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp429 ___633_yy 	%argrw{"wr"}
	assign		$tmp430 ___633_zz 	%argrw{"wr"}
	point		$tmp427 $tmp428 $tmp429 $tmp430 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp427 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp431 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp432 ___639_d $tmp431 	%argrw{"wrr"}
	if		$tmp432 912 939 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp433 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp433 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp434 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp434 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp435 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp435 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp436 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp436 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp437 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp437 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp438 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp438 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp439 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp440 ___639_d $tmp439 	%argrw{"wrr"}
	if		$tmp440 925 939 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp441 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp441 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp442 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp442 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp443 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp443 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp444 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp444 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp445 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp446 ___639_d $tmp445 	%argrw{"wrr"}
	if		$tmp446 934 939 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp447 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp447 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp448 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp448 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp449 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp450 ___639_d $tmp449 	%argrw{"wrr"}
	if		$tmp450 939 939 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp451 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp452 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp453 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp402 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp454 $const13 $tmp402 	%line{148} %argrw{"wrr"}
	sub		$tmp342 $tmp454 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp455 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp455 1060 1060 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 1059 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 1057 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 1057 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1056 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp458 $tmp1 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp457 $tmp458 	%argrw{"wr"}
	assign		___633_xi $tmp457 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp460 $tmp1 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp459 $tmp460 	%argrw{"wr"}
	assign		___633_yi $tmp459 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp462 $tmp1 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp461 $tmp462 	%argrw{"wr"}
	assign		___633_zi $tmp461 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp464 970 972 1054 1056 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp463 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp464 ___633_xx $tmp463 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp466 974 976 1052 1054 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp465 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp466 ___633_yy $tmp465 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp468 978 980 1050 1052 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp467 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp468 ___633_zz $tmp467 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp469 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp470 ___633_yy 	%argrw{"wr"}
	assign		$tmp471 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp469 $tmp470 $tmp471 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 997 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp473 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp474 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp475 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp472 $tmp473 $tmp474 $tmp475 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp472 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp477 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp478 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp479 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp476 $tmp477 $tmp478 $tmp479 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp476 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp480 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1 $tmp480 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1001 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp482 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp483 ___633_yy 	%argrw{"wr"}
	assign		$tmp484 ___633_zz 	%argrw{"wr"}
	point		$tmp481 $tmp482 $tmp483 $tmp484 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp481 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp485 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp486 ___639_d $tmp485 	%argrw{"wrr"}
	if		$tmp486 1023 1050 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp487 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp487 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp488 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp488 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp489 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp489 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp490 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp490 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp491 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp491 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp492 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp492 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp493 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp494 ___639_d $tmp493 	%argrw{"wrr"}
	if		$tmp494 1036 1050 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp495 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp495 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp496 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp496 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp497 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp497 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp498 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp498 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp499 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp500 ___639_d $tmp499 	%argrw{"wrr"}
	if		$tmp500 1045 1050 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp501 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp501 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp502 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp502 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp503 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp504 ___639_d $tmp503 	%argrw{"wrr"}
	if		$tmp504 1050 1050 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp505 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp506 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp507 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp456 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp508 $const13 $tmp456 	%line{149} %argrw{"wrr"}
	sub		$tmp342 $tmp508 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp509 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp509 1171 1171 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 1170 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 1168 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 1168 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1167 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp512 $tmp1 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp511 $tmp512 	%argrw{"wr"}
	assign		___633_xi $tmp511 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp514 $tmp1 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp513 $tmp514 	%argrw{"wr"}
	assign		___633_yi $tmp513 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp516 $tmp1 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp515 $tmp516 	%argrw{"wr"}
	assign		___633_zi $tmp515 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp518 1081 1083 1165 1167 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp517 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp518 ___633_xx $tmp517 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp520 1085 1087 1163 1165 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp519 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp520 ___633_yy $tmp519 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp522 1089 1091 1161 1163 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp521 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp522 ___633_zz $tmp521 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp523 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp524 ___633_yy 	%argrw{"wr"}
	assign		$tmp525 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp523 $tmp524 $tmp525 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1108 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp527 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp528 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp529 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp526 $tmp527 $tmp528 $tmp529 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp526 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp531 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp532 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp533 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp530 $tmp531 $tmp532 $tmp533 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp530 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp534 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1 $tmp534 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1112 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp536 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp537 ___633_yy 	%argrw{"wr"}
	assign		$tmp538 ___633_zz 	%argrw{"wr"}
	point		$tmp535 $tmp536 $tmp537 $tmp538 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp535 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp539 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp540 ___639_d $tmp539 	%argrw{"wrr"}
	if		$tmp540 1134 1161 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp541 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp541 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp542 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp542 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp543 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp543 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp544 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp544 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp545 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp545 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp546 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp546 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp547 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp548 ___639_d $tmp547 	%argrw{"wrr"}
	if		$tmp548 1147 1161 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp549 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp549 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp550 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp550 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp551 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp551 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp552 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp552 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp553 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp554 ___639_d $tmp553 	%argrw{"wrr"}
	if		$tmp554 1156 1161 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp555 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp555 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp556 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp556 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp557 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp558 ___639_d $tmp557 	%argrw{"wrr"}
	if		$tmp558 1161 1161 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp559 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp560 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp561 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp510 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp562 $const13 $tmp510 	%line{150} %argrw{"wrr"}
	sub		$tmp342 $tmp562 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp563 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp563 1284 1284 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 1283 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 1281 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 1281 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1278 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp566 $tmp1 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp565 $tmp566 	%argrw{"wr"}
	assign		___633_xi $tmp565 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp568 $tmp1 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp567 $tmp568 	%argrw{"wr"}
	assign		___633_yi $tmp567 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp570 $tmp1 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp569 $tmp570 	%argrw{"wr"}
	assign		___633_zi $tmp569 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp572 1192 1194 1276 1278 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp571 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp572 ___633_xx $tmp571 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp574 1196 1198 1274 1276 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp573 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp574 ___633_yy $tmp573 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp576 1200 1202 1272 1274 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp575 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp576 ___633_zz $tmp575 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp577 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp578 ___633_yy 	%argrw{"wr"}
	assign		$tmp579 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp577 $tmp578 $tmp579 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1219 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp581 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp582 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp583 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp580 $tmp581 $tmp582 $tmp583 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp580 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp585 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp586 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp587 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp584 $tmp585 $tmp586 $tmp587 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp584 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp588 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1 $tmp588 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1223 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp590 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp591 ___633_yy 	%argrw{"wr"}
	assign		$tmp592 ___633_zz 	%argrw{"wr"}
	point		$tmp589 $tmp590 $tmp591 $tmp592 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp589 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp593 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp594 ___639_d $tmp593 	%argrw{"wrr"}
	if		$tmp594 1245 1272 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp595 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp595 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp596 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp596 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp597 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp597 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp598 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp598 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp599 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp599 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp600 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp600 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp601 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp602 ___639_d $tmp601 	%argrw{"wrr"}
	if		$tmp602 1258 1272 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp603 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp603 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp604 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp604 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp605 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp605 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp606 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp606 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp607 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp608 ___639_d $tmp607 	%argrw{"wrr"}
	if		$tmp608 1267 1272 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp609 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp609 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp610 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp610 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp611 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp612 ___639_d $tmp611 	%argrw{"wrr"}
	if		$tmp612 1272 1272 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp613 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp614 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp615 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp616 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp617 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp564 $tmp616 $tmp617 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp618 $const13 $tmp564 	%line{151} %argrw{"wrr"}
	sub		$tmp342 $tmp618 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp619 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp619 1404 1404 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 1403 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 1401 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 1395 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 1395 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1392 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp623 $tmp1 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp622 $tmp623 	%argrw{"wr"}
	assign		___633_xi $tmp622 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp625 $tmp1 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp624 $tmp625 	%argrw{"wr"}
	assign		___633_yi $tmp624 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp627 $tmp1 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp626 $tmp627 	%argrw{"wr"}
	assign		___633_zi $tmp626 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp629 1306 1308 1390 1392 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp628 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp629 ___633_xx $tmp628 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp631 1310 1312 1388 1390 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp630 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp631 ___633_yy $tmp630 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp633 1314 1316 1386 1388 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp632 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp633 ___633_zz $tmp632 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp634 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp635 ___633_yy 	%argrw{"wr"}
	assign		$tmp636 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp634 $tmp635 $tmp636 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1333 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp638 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp639 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp640 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp637 $tmp638 $tmp639 $tmp640 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp637 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp642 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp643 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp644 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp641 $tmp642 $tmp643 $tmp644 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp641 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp645 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1 $tmp645 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1337 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp647 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp648 ___633_yy 	%argrw{"wr"}
	assign		$tmp649 ___633_zz 	%argrw{"wr"}
	point		$tmp646 $tmp647 $tmp648 $tmp649 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp646 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp650 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp651 ___639_d $tmp650 	%argrw{"wrr"}
	if		$tmp651 1359 1386 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp652 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp652 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp653 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp653 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp654 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp654 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp655 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp655 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp656 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp656 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp657 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp657 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp658 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp659 ___639_d $tmp658 	%argrw{"wrr"}
	if		$tmp659 1372 1386 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp660 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp660 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp661 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp661 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp662 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp662 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp663 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp663 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp664 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp665 ___639_d $tmp664 	%argrw{"wrr"}
	if		$tmp665 1381 1386 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp666 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp666 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp667 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp667 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp668 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp669 ___639_d $tmp668 	%argrw{"wrr"}
	if		$tmp669 1386 1386 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp670 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp671 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp672 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp673 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp674 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp621 $tmp673 $tmp674 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp621 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp675 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp675 1399 1400 	%argrw{"r"}
	assign		$tmp620 $const23 	%argrw{"wr"}
	assign		$tmp620 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp676 $const13 $tmp620 	%line{152} %argrw{"wrr"}
	sub		$tmp342 $tmp676 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp677 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp677 1408 1408 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	$tmp342 $tmp1 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		$tmp342 $const4 	%line{194} %argrw{"wr"}
# include/node_noise_texture.osl:30
# 		r[2] = noise_basis(p - point(13.5), basis) * distortion;
	mul		$tmp678 $tmp342 Distortion 	%filename{"include/node_noise_texture.osl"} %line{30} %argrw{"wrr"}
	compassign	___667_r $const7 $tmp678 	%argrw{"wrr"}
# include/node_noise_texture.osl:31
# 		
	sub		$tmp681 $tmp1 $const5 	%line{31} %argrw{"wrr"}
	functioncall	$const6 2110 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp682 Basis $const1 	%filename{"include/node_texture.h"} %line{177} %argrw{"wrr"}
	if		$tmp682 1428 1428 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 1427 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp683 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp683 1420 1421 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp681 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp681 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp684 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp685 $tmp684 $const3 	%argrw{"wrr"}
	if		$tmp685 1426 1426 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		$tmp679 $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		$tmp679 ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp686 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp686 1539 1539 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 1538 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 1536 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 1536 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1535 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp689 $tmp681 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp688 $tmp689 	%argrw{"wr"}
	assign		___633_xi $tmp688 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp691 $tmp681 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp690 $tmp691 	%argrw{"wr"}
	assign		___633_yi $tmp690 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp693 $tmp681 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp692 $tmp693 	%argrw{"wr"}
	assign		___633_zi $tmp692 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp695 1449 1451 1533 1535 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp694 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp695 ___633_xx $tmp694 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp697 1453 1455 1531 1533 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp696 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp697 ___633_yy $tmp696 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp699 1457 1459 1529 1531 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp698 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp699 ___633_zz $tmp698 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp700 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp701 ___633_yy 	%argrw{"wr"}
	assign		$tmp702 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp700 $tmp701 $tmp702 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1476 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp704 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp705 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp706 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp703 $tmp704 $tmp705 $tmp706 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp703 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp708 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp709 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp710 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp707 $tmp708 $tmp709 $tmp710 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp707 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp711 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp681 $tmp711 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1480 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp713 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp714 ___633_yy 	%argrw{"wr"}
	assign		$tmp715 ___633_zz 	%argrw{"wr"}
	point		$tmp712 $tmp713 $tmp714 $tmp715 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp712 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp716 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp717 ___639_d $tmp716 	%argrw{"wrr"}
	if		$tmp717 1502 1529 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp718 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp718 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp719 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp719 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp720 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp720 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp721 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp721 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp722 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp722 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp723 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp723 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp724 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp725 ___639_d $tmp724 	%argrw{"wrr"}
	if		$tmp725 1515 1529 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp726 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp726 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp727 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp727 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp728 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp728 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp729 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp729 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp730 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp731 ___639_d $tmp730 	%argrw{"wrr"}
	if		$tmp731 1524 1529 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp732 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp732 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp733 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp733 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp734 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp735 ___639_d $tmp734 	%argrw{"wrr"}
	if		$tmp735 1529 1529 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp736 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp737 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp738 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp687 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp739 $const13 $tmp687 	%line{147} %argrw{"wrr"}
	sub		$tmp679 $tmp739 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp740 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp740 1650 1650 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 1649 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 1647 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 1647 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1646 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp743 $tmp681 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp742 $tmp743 	%argrw{"wr"}
	assign		___633_xi $tmp742 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp745 $tmp681 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp744 $tmp745 	%argrw{"wr"}
	assign		___633_yi $tmp744 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp747 $tmp681 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp746 $tmp747 	%argrw{"wr"}
	assign		___633_zi $tmp746 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp749 1560 1562 1644 1646 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp748 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp749 ___633_xx $tmp748 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp751 1564 1566 1642 1644 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp750 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp751 ___633_yy $tmp750 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp753 1568 1570 1640 1642 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp752 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp753 ___633_zz $tmp752 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp754 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp755 ___633_yy 	%argrw{"wr"}
	assign		$tmp756 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp754 $tmp755 $tmp756 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1587 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp758 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp759 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp760 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp757 $tmp758 $tmp759 $tmp760 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp757 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp762 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp763 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp764 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp761 $tmp762 $tmp763 $tmp764 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp761 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp765 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp681 $tmp765 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1591 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp767 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp768 ___633_yy 	%argrw{"wr"}
	assign		$tmp769 ___633_zz 	%argrw{"wr"}
	point		$tmp766 $tmp767 $tmp768 $tmp769 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp766 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp770 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp771 ___639_d $tmp770 	%argrw{"wrr"}
	if		$tmp771 1613 1640 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp772 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp772 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp773 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp773 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp774 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp774 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp775 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp775 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp776 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp776 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp777 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp777 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp778 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp779 ___639_d $tmp778 	%argrw{"wrr"}
	if		$tmp779 1626 1640 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp780 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp780 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp781 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp781 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp782 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp782 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp783 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp783 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp784 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp785 ___639_d $tmp784 	%argrw{"wrr"}
	if		$tmp785 1635 1640 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp786 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp786 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp787 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp787 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp788 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp789 ___639_d $tmp788 	%argrw{"wrr"}
	if		$tmp789 1640 1640 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp790 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp791 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp792 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp741 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp793 $const13 $tmp741 	%line{148} %argrw{"wrr"}
	sub		$tmp679 $tmp793 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp794 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp794 1761 1761 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 1760 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 1758 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 1758 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1757 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp797 $tmp681 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp796 $tmp797 	%argrw{"wr"}
	assign		___633_xi $tmp796 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp799 $tmp681 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp798 $tmp799 	%argrw{"wr"}
	assign		___633_yi $tmp798 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp801 $tmp681 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp800 $tmp801 	%argrw{"wr"}
	assign		___633_zi $tmp800 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp803 1671 1673 1755 1757 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp802 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp803 ___633_xx $tmp802 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp805 1675 1677 1753 1755 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp804 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp805 ___633_yy $tmp804 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp807 1679 1681 1751 1753 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp806 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp807 ___633_zz $tmp806 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp808 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp809 ___633_yy 	%argrw{"wr"}
	assign		$tmp810 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp808 $tmp809 $tmp810 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1698 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp812 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp813 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp814 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp811 $tmp812 $tmp813 $tmp814 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp811 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp816 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp817 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp818 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp815 $tmp816 $tmp817 $tmp818 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp815 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp819 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp681 $tmp819 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1702 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp821 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp822 ___633_yy 	%argrw{"wr"}
	assign		$tmp823 ___633_zz 	%argrw{"wr"}
	point		$tmp820 $tmp821 $tmp822 $tmp823 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp820 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp824 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp825 ___639_d $tmp824 	%argrw{"wrr"}
	if		$tmp825 1724 1751 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp826 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp826 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp827 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp827 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp828 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp828 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp829 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp829 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp830 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp830 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp831 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp831 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp832 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp833 ___639_d $tmp832 	%argrw{"wrr"}
	if		$tmp833 1737 1751 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp834 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp834 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp835 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp835 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp836 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp836 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp837 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp837 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp838 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp839 ___639_d $tmp838 	%argrw{"wrr"}
	if		$tmp839 1746 1751 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp840 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp840 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp841 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp841 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp842 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp843 ___639_d $tmp842 	%argrw{"wrr"}
	if		$tmp843 1751 1751 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp844 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp845 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp846 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp795 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp847 $const13 $tmp795 	%line{149} %argrw{"wrr"}
	sub		$tmp679 $tmp847 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp848 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp848 1872 1872 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 1871 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 1869 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 1869 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1868 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp851 $tmp681 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp850 $tmp851 	%argrw{"wr"}
	assign		___633_xi $tmp850 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp853 $tmp681 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp852 $tmp853 	%argrw{"wr"}
	assign		___633_yi $tmp852 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp855 $tmp681 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp854 $tmp855 	%argrw{"wr"}
	assign		___633_zi $tmp854 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp857 1782 1784 1866 1868 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp856 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp857 ___633_xx $tmp856 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp859 1786 1788 1864 1866 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp858 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp859 ___633_yy $tmp858 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp861 1790 1792 1862 1864 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp860 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp861 ___633_zz $tmp860 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp862 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp863 ___633_yy 	%argrw{"wr"}
	assign		$tmp864 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp862 $tmp863 $tmp864 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1809 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp866 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp867 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp868 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp865 $tmp866 $tmp867 $tmp868 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp865 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp870 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp871 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp872 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp869 $tmp870 $tmp871 $tmp872 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp869 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp873 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp681 $tmp873 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1813 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp875 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp876 ___633_yy 	%argrw{"wr"}
	assign		$tmp877 ___633_zz 	%argrw{"wr"}
	point		$tmp874 $tmp875 $tmp876 $tmp877 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp874 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp878 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp879 ___639_d $tmp878 	%argrw{"wrr"}
	if		$tmp879 1835 1862 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp880 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp880 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp881 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp881 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp882 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp882 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp883 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp883 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp884 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp884 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp885 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp885 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp886 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp887 ___639_d $tmp886 	%argrw{"wrr"}
	if		$tmp887 1848 1862 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp888 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp888 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp889 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp889 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp890 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp890 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp891 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp891 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp892 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp893 ___639_d $tmp892 	%argrw{"wrr"}
	if		$tmp893 1857 1862 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp894 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp894 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp895 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp895 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp896 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp897 ___639_d $tmp896 	%argrw{"wrr"}
	if		$tmp897 1862 1862 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp898 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp899 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp900 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp849 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp901 $const13 $tmp849 	%line{150} %argrw{"wrr"}
	sub		$tmp679 $tmp901 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp902 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp902 1985 1985 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 1984 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 1982 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 1982 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 1979 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp905 $tmp681 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp904 $tmp905 	%argrw{"wr"}
	assign		___633_xi $tmp904 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp907 $tmp681 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp906 $tmp907 	%argrw{"wr"}
	assign		___633_yi $tmp906 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp909 $tmp681 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp908 $tmp909 	%argrw{"wr"}
	assign		___633_zi $tmp908 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp911 1893 1895 1977 1979 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp910 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp911 ___633_xx $tmp910 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp913 1897 1899 1975 1977 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp912 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp913 ___633_yy $tmp912 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp915 1901 1903 1973 1975 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp914 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp915 ___633_zz $tmp914 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp916 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp917 ___633_yy 	%argrw{"wr"}
	assign		$tmp918 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp916 $tmp917 $tmp918 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 1920 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp920 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp921 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp922 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp919 $tmp920 $tmp921 $tmp922 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp919 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp924 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp925 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp926 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp923 $tmp924 $tmp925 $tmp926 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp923 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp927 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp681 $tmp927 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 1924 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp929 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp930 ___633_yy 	%argrw{"wr"}
	assign		$tmp931 ___633_zz 	%argrw{"wr"}
	point		$tmp928 $tmp929 $tmp930 $tmp931 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp928 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp932 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp933 ___639_d $tmp932 	%argrw{"wrr"}
	if		$tmp933 1946 1973 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp934 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp934 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp935 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp935 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp936 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp936 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp937 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp937 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp938 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp938 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp939 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp939 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp940 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp941 ___639_d $tmp940 	%argrw{"wrr"}
	if		$tmp941 1959 1973 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp942 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp942 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp943 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp943 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp944 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp944 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp945 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp945 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp946 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp947 ___639_d $tmp946 	%argrw{"wrr"}
	if		$tmp947 1968 1973 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp948 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp948 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp949 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp949 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp950 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp951 ___639_d $tmp950 	%argrw{"wrr"}
	if		$tmp951 1973 1973 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp952 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp953 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp954 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp955 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp956 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp903 $tmp955 $tmp956 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp957 $const13 $tmp903 	%line{151} %argrw{"wrr"}
	sub		$tmp679 $tmp957 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp958 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp958 2105 2105 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 2104 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 2102 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 2096 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 2096 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2093 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp962 $tmp681 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp961 $tmp962 	%argrw{"wr"}
	assign		___633_xi $tmp961 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp964 $tmp681 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp963 $tmp964 	%argrw{"wr"}
	assign		___633_yi $tmp963 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp966 $tmp681 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp965 $tmp966 	%argrw{"wr"}
	assign		___633_zi $tmp965 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp968 2007 2009 2091 2093 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp967 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp968 ___633_xx $tmp967 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp970 2011 2013 2089 2091 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp969 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp970 ___633_yy $tmp969 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp972 2015 2017 2087 2089 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp971 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp972 ___633_zz $tmp971 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp973 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp974 ___633_yy 	%argrw{"wr"}
	assign		$tmp975 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp973 $tmp974 $tmp975 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2034 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp977 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp978 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp979 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp976 $tmp977 $tmp978 $tmp979 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp976 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp981 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp982 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp983 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp980 $tmp981 $tmp982 $tmp983 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp980 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp984 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp681 $tmp984 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2038 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp986 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp987 ___633_yy 	%argrw{"wr"}
	assign		$tmp988 ___633_zz 	%argrw{"wr"}
	point		$tmp985 $tmp986 $tmp987 $tmp988 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp985 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp989 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp990 ___639_d $tmp989 	%argrw{"wrr"}
	if		$tmp990 2060 2087 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp991 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp991 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp992 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp992 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp993 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp993 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp994 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp994 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp995 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp995 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp996 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp996 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp997 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp998 ___639_d $tmp997 	%argrw{"wrr"}
	if		$tmp998 2073 2087 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp999 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp999 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1000 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1000 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1001 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1001 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1002 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1002 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1003 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1004 ___639_d $tmp1003 	%argrw{"wrr"}
	if		$tmp1004 2082 2087 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1005 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1005 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1006 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1006 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1007 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1008 ___639_d $tmp1007 	%argrw{"wrr"}
	if		$tmp1008 2087 2087 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1009 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1010 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1011 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp1012 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp1013 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp960 $tmp1012 $tmp1013 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp960 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp1014 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp1014 2100 2101 	%argrw{"r"}
	assign		$tmp959 $const23 	%argrw{"wr"}
	assign		$tmp959 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp1015 $const13 $tmp959 	%line{152} %argrw{"wrr"}
	sub		$tmp679 $tmp1015 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp1016 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp1016 2109 2109 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	$tmp679 $tmp681 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		$tmp679 $const4 	%line{194} %argrw{"wr"}
# include/node_noise_texture.osl:31
# 		
	mul		$tmp1017 $tmp679 Distortion 	%filename{"include/node_noise_texture.osl"} %line{31} %argrw{"wrr"}
	compassign	___667_r $const18 $tmp1017 	%argrw{"wrr"}
# include/node_noise_texture.osl:33
# 	}
	add		$tmp1 $tmp1 ___667_r 	%line{33} %argrw{"wrr"}
# include/node_noise_texture.osl:36
# 	
	functioncall	$const42 3574 	%line{36} %argrw{"r"}
# include/node_texture.h:209
# 	float fscale = 1.0;
	assign		___661_fscale $const23 	%filename{"include/node_texture.h"} %line{209} %argrw{"wr"}
# include/node_texture.h:210
# 	float amp = 1.0;
	assign		___661_amp $const23 	%line{210} %argrw{"wr"}
# include/node_texture.h:211
# 	float sum = 0.0;
	assign		___661_sum $const4 	%line{211} %argrw{"wr"}
# include/node_texture.h:214
# 	float octaves = clamp(details, 0.0, 16.0);
	functioncall	$const44 2120 	%line{214} %argrw{"r"}
# include/stdosl.h:144
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1018 Detail $const43 	%filename{"include/stdosl.h"} %line{144} %argrw{"wrr"}
	max		___661_octaves $tmp1018 $const4 	%argrw{"wrr"}
# include/node_texture.h:215
# 	n = (int)octaves;
	assign		___661_n ___661_octaves 	%filename{"include/node_texture.h"} %line{215} %argrw{"wr"}
# include/node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	for		$tmp1019 2123 2124 2831 2833 	%line{217} %argrw{"r"}
	assign		___661_i $const3 	%argrw{"wr"}
	le		$tmp1019 ___661_i ___661_n 	%argrw{"wrr"}
# include/node_texture.h:218
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp1020 ___661_fscale $tmp1 	%line{218} %argrw{"wrr"}
	functioncall	$const6 2823 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp1021 Basis $const1 	%line{177} %argrw{"wrr"}
	if		$tmp1021 2141 2141 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 2140 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp1022 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp1022 2133 2134 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp1020 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp1020 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp1023 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp1024 $tmp1023 $const3 	%argrw{"wrr"}
	if		$tmp1024 2139 2139 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		___663_t $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		___663_t ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp1025 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp1025 2252 2252 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 2251 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 2249 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 2249 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2248 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1028 $tmp1020 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1027 $tmp1028 	%argrw{"wr"}
	assign		___633_xi $tmp1027 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1030 $tmp1020 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1029 $tmp1030 	%argrw{"wr"}
	assign		___633_yi $tmp1029 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1032 $tmp1020 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1031 $tmp1032 	%argrw{"wr"}
	assign		___633_zi $tmp1031 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1034 2162 2164 2246 2248 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1033 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1034 ___633_xx $tmp1033 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1036 2166 2168 2244 2246 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1035 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1036 ___633_yy $tmp1035 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1038 2170 2172 2242 2244 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1037 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1038 ___633_zz $tmp1037 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1039 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1040 ___633_yy 	%argrw{"wr"}
	assign		$tmp1041 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1039 $tmp1040 $tmp1041 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2189 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1043 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1044 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1045 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1042 $tmp1043 $tmp1044 $tmp1045 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1042 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1047 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1048 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1049 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1046 $tmp1047 $tmp1048 $tmp1049 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1046 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1050 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1020 $tmp1050 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2193 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1052 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1053 ___633_yy 	%argrw{"wr"}
	assign		$tmp1054 ___633_zz 	%argrw{"wr"}
	point		$tmp1051 $tmp1052 $tmp1053 $tmp1054 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1051 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1055 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1056 ___639_d $tmp1055 	%argrw{"wrr"}
	if		$tmp1056 2215 2242 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1057 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1057 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1058 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1058 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1059 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1059 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1060 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1060 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1061 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1061 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1062 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1062 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1063 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1064 ___639_d $tmp1063 	%argrw{"wrr"}
	if		$tmp1064 2228 2242 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1065 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1065 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1066 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1066 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1067 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1067 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1068 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1068 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1069 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1070 ___639_d $tmp1069 	%argrw{"wrr"}
	if		$tmp1070 2237 2242 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1071 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1071 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1072 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1072 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1073 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1074 ___639_d $tmp1073 	%argrw{"wrr"}
	if		$tmp1074 2242 2242 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1075 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1076 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1077 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1026 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp1078 $const13 $tmp1026 	%line{147} %argrw{"wrr"}
	sub		___663_t $tmp1078 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp1079 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp1079 2363 2363 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 2362 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 2360 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 2360 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2359 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1082 $tmp1020 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1081 $tmp1082 	%argrw{"wr"}
	assign		___633_xi $tmp1081 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1084 $tmp1020 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1083 $tmp1084 	%argrw{"wr"}
	assign		___633_yi $tmp1083 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1086 $tmp1020 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1085 $tmp1086 	%argrw{"wr"}
	assign		___633_zi $tmp1085 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1088 2273 2275 2357 2359 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1087 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1088 ___633_xx $tmp1087 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1090 2277 2279 2355 2357 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1089 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1090 ___633_yy $tmp1089 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1092 2281 2283 2353 2355 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1091 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1092 ___633_zz $tmp1091 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1093 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1094 ___633_yy 	%argrw{"wr"}
	assign		$tmp1095 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1093 $tmp1094 $tmp1095 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2300 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1097 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1098 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1099 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1096 $tmp1097 $tmp1098 $tmp1099 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1096 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1101 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1102 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1103 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1100 $tmp1101 $tmp1102 $tmp1103 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1100 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1104 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1020 $tmp1104 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2304 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1106 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1107 ___633_yy 	%argrw{"wr"}
	assign		$tmp1108 ___633_zz 	%argrw{"wr"}
	point		$tmp1105 $tmp1106 $tmp1107 $tmp1108 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1105 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1109 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1110 ___639_d $tmp1109 	%argrw{"wrr"}
	if		$tmp1110 2326 2353 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1111 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1111 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1112 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1112 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1113 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1113 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1114 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1114 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1115 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1115 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1116 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1116 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1117 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1118 ___639_d $tmp1117 	%argrw{"wrr"}
	if		$tmp1118 2339 2353 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1119 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1119 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1120 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1120 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1121 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1121 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1122 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1122 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1123 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1124 ___639_d $tmp1123 	%argrw{"wrr"}
	if		$tmp1124 2348 2353 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1125 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1125 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1126 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1126 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1127 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1128 ___639_d $tmp1127 	%argrw{"wrr"}
	if		$tmp1128 2353 2353 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1129 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1130 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1131 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1080 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp1132 $const13 $tmp1080 	%line{148} %argrw{"wrr"}
	sub		___663_t $tmp1132 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp1133 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp1133 2474 2474 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 2473 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 2471 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 2471 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2470 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1136 $tmp1020 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1135 $tmp1136 	%argrw{"wr"}
	assign		___633_xi $tmp1135 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1138 $tmp1020 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1137 $tmp1138 	%argrw{"wr"}
	assign		___633_yi $tmp1137 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1140 $tmp1020 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1139 $tmp1140 	%argrw{"wr"}
	assign		___633_zi $tmp1139 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1142 2384 2386 2468 2470 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1141 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1142 ___633_xx $tmp1141 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1144 2388 2390 2466 2468 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1143 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1144 ___633_yy $tmp1143 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1146 2392 2394 2464 2466 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1145 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1146 ___633_zz $tmp1145 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1147 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1148 ___633_yy 	%argrw{"wr"}
	assign		$tmp1149 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1147 $tmp1148 $tmp1149 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2411 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1151 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1152 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1153 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1150 $tmp1151 $tmp1152 $tmp1153 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1150 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1155 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1156 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1157 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1154 $tmp1155 $tmp1156 $tmp1157 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1154 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1158 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1020 $tmp1158 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2415 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1160 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1161 ___633_yy 	%argrw{"wr"}
	assign		$tmp1162 ___633_zz 	%argrw{"wr"}
	point		$tmp1159 $tmp1160 $tmp1161 $tmp1162 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1159 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1163 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1164 ___639_d $tmp1163 	%argrw{"wrr"}
	if		$tmp1164 2437 2464 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1165 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1165 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1166 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1166 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1167 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1167 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1168 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1168 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1169 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1169 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1170 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1170 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1171 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1172 ___639_d $tmp1171 	%argrw{"wrr"}
	if		$tmp1172 2450 2464 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1173 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1173 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1174 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1174 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1175 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1175 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1176 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1176 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1177 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1178 ___639_d $tmp1177 	%argrw{"wrr"}
	if		$tmp1178 2459 2464 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1179 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1179 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1180 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1180 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1181 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1182 ___639_d $tmp1181 	%argrw{"wrr"}
	if		$tmp1182 2464 2464 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1183 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1184 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1185 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1134 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp1186 $const13 $tmp1134 	%line{149} %argrw{"wrr"}
	sub		___663_t $tmp1186 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp1187 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp1187 2585 2585 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 2584 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 2582 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 2582 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2581 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1190 $tmp1020 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1189 $tmp1190 	%argrw{"wr"}
	assign		___633_xi $tmp1189 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1192 $tmp1020 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1191 $tmp1192 	%argrw{"wr"}
	assign		___633_yi $tmp1191 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1194 $tmp1020 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1193 $tmp1194 	%argrw{"wr"}
	assign		___633_zi $tmp1193 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1196 2495 2497 2579 2581 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1195 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1196 ___633_xx $tmp1195 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1198 2499 2501 2577 2579 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1197 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1198 ___633_yy $tmp1197 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1200 2503 2505 2575 2577 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1199 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1200 ___633_zz $tmp1199 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1201 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1202 ___633_yy 	%argrw{"wr"}
	assign		$tmp1203 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1201 $tmp1202 $tmp1203 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2522 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1205 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1206 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1207 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1204 $tmp1205 $tmp1206 $tmp1207 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1204 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1209 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1210 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1211 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1208 $tmp1209 $tmp1210 $tmp1211 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1208 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1212 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1020 $tmp1212 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2526 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1214 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1215 ___633_yy 	%argrw{"wr"}
	assign		$tmp1216 ___633_zz 	%argrw{"wr"}
	point		$tmp1213 $tmp1214 $tmp1215 $tmp1216 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1213 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1217 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1218 ___639_d $tmp1217 	%argrw{"wrr"}
	if		$tmp1218 2548 2575 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1219 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1219 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1220 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1220 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1221 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1221 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1222 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1222 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1223 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1223 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1224 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1224 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1225 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1226 ___639_d $tmp1225 	%argrw{"wrr"}
	if		$tmp1226 2561 2575 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1227 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1227 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1228 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1228 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1229 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1229 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1230 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1230 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1231 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1232 ___639_d $tmp1231 	%argrw{"wrr"}
	if		$tmp1232 2570 2575 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1233 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1233 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1234 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1234 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1235 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1236 ___639_d $tmp1235 	%argrw{"wrr"}
	if		$tmp1236 2575 2575 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1237 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1238 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1239 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1188 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp1240 $const13 $tmp1188 	%line{150} %argrw{"wrr"}
	sub		___663_t $tmp1240 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp1241 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp1241 2698 2698 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 2697 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 2695 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 2695 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2692 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1244 $tmp1020 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1243 $tmp1244 	%argrw{"wr"}
	assign		___633_xi $tmp1243 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1246 $tmp1020 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1245 $tmp1246 	%argrw{"wr"}
	assign		___633_yi $tmp1245 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1248 $tmp1020 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1247 $tmp1248 	%argrw{"wr"}
	assign		___633_zi $tmp1247 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1250 2606 2608 2690 2692 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1249 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1250 ___633_xx $tmp1249 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1252 2610 2612 2688 2690 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1251 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1252 ___633_yy $tmp1251 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1254 2614 2616 2686 2688 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1253 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1254 ___633_zz $tmp1253 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1255 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1256 ___633_yy 	%argrw{"wr"}
	assign		$tmp1257 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1255 $tmp1256 $tmp1257 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2633 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1259 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1260 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1261 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1258 $tmp1259 $tmp1260 $tmp1261 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1258 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1263 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1264 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1265 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1262 $tmp1263 $tmp1264 $tmp1265 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1262 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1266 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1020 $tmp1266 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2637 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1268 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1269 ___633_yy 	%argrw{"wr"}
	assign		$tmp1270 ___633_zz 	%argrw{"wr"}
	point		$tmp1267 $tmp1268 $tmp1269 $tmp1270 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1267 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1271 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1272 ___639_d $tmp1271 	%argrw{"wrr"}
	if		$tmp1272 2659 2686 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1273 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1273 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1274 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1274 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1275 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp1275 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1276 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1276 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1277 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1277 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1278 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp1278 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1279 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1280 ___639_d $tmp1279 	%argrw{"wrr"}
	if		$tmp1280 2672 2686 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1281 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1281 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1282 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1282 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1283 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1283 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1284 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1284 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1285 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1286 ___639_d $tmp1285 	%argrw{"wrr"}
	if		$tmp1286 2681 2686 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1287 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1287 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1288 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1288 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1289 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1290 ___639_d $tmp1289 	%argrw{"wrr"}
	if		$tmp1290 2686 2686 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1291 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1292 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1293 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp1294 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp1295 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp1242 $tmp1294 $tmp1295 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp1296 $const13 $tmp1242 	%line{151} %argrw{"wrr"}
	sub		___663_t $tmp1296 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp1297 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp1297 2818 2818 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 2817 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 2815 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 2809 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 2809 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2806 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1301 $tmp1020 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1300 $tmp1301 	%argrw{"wr"}
	assign		___633_xi $tmp1300 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1303 $tmp1020 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1302 $tmp1303 	%argrw{"wr"}
	assign		___633_yi $tmp1302 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1305 $tmp1020 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1304 $tmp1305 	%argrw{"wr"}
	assign		___633_zi $tmp1304 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1307 2720 2722 2804 2806 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1306 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1307 ___633_xx $tmp1306 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1309 2724 2726 2802 2804 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1308 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1309 ___633_yy $tmp1308 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1311 2728 2730 2800 2802 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1310 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1311 ___633_zz $tmp1310 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1312 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1313 ___633_yy 	%argrw{"wr"}
	assign		$tmp1314 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1312 $tmp1313 $tmp1314 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2747 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1316 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1317 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1318 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1315 $tmp1316 $tmp1317 $tmp1318 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1315 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1320 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1321 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1322 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1319 $tmp1320 $tmp1321 $tmp1322 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1319 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1323 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1020 $tmp1323 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2751 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1325 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1326 ___633_yy 	%argrw{"wr"}
	assign		$tmp1327 ___633_zz 	%argrw{"wr"}
	point		$tmp1324 $tmp1325 $tmp1326 $tmp1327 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1324 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1328 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1329 ___639_d $tmp1328 	%argrw{"wrr"}
	if		$tmp1329 2773 2800 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1330 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1330 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1331 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1331 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1332 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp1332 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1333 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1333 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1334 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1334 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1335 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp1335 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1336 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1337 ___639_d $tmp1336 	%argrw{"wrr"}
	if		$tmp1337 2786 2800 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1338 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1338 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1339 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1339 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1340 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1340 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1341 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1341 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1342 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1343 ___639_d $tmp1342 	%argrw{"wrr"}
	if		$tmp1343 2795 2800 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1344 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1344 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1345 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1345 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1346 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1347 ___639_d $tmp1346 	%argrw{"wrr"}
	if		$tmp1347 2800 2800 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1348 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1349 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1350 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp1351 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp1352 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp1299 $tmp1351 $tmp1352 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp1299 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp1353 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp1353 2813 2814 	%argrw{"r"}
	assign		$tmp1298 $const23 	%argrw{"wr"}
	assign		$tmp1298 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp1354 $const13 $tmp1298 	%line{152} %argrw{"wrr"}
	sub		___663_t $tmp1354 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp1355 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp1355 2822 2822 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___663_t $tmp1020 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		___663_t $const4 	%line{194} %argrw{"wr"}
# include/node_texture.h:220
# 		if (hard)
	if		___667_hard 2827 2827 	%line{220} %argrw{"r"}
# include/node_texture.h:221
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp1356 $const13 ___663_t 	%line{221} %argrw{"wrr"}
	sub		$tmp1357 $tmp1356 $const23 	%argrw{"wrr"}
	fabs		___663_t $tmp1357 	%argrw{"wr"}
# include/node_texture.h:223
# 		sum += t * amp;
	mul		$tmp1358 ___663_t ___661_amp 	%line{223} %argrw{"wrr"}
	add		___661_sum ___661_sum $tmp1358 	%argrw{"wrr"}
# include/node_texture.h:224
# 		amp *= 0.5;
	mul		___661_amp ___661_amp $const10 	%line{224} %argrw{"wrr"}
# include/node_texture.h:225
# 		fscale *= 2.0;
	mul		___661_fscale ___661_fscale $const13 	%line{225} %argrw{"wrr"}
# include/node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	assign		$tmp1359 ___661_i 	%line{217} %argrw{"wr"}
	add		___661_i ___661_i $const7 	%argrw{"wrr"}
# include/node_texture.h:228
# 	float rmd = octaves - floor(octaves);
	floor		$tmp1360 ___661_octaves 	%line{228} %argrw{"wr"}
	sub		___661_rmd ___661_octaves $tmp1360 	%argrw{"wrr"}
# include/node_texture.h:230
# 	if (rmd != 0.0) {
	neq		$tmp1361 ___661_rmd $const4 	%line{230} %argrw{"wrr"}
	if		$tmp1361 3564 3574 	%argrw{"r"}
# include/node_texture.h:231
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp1362 ___661_fscale $tmp1 	%line{231} %argrw{"wrr"}
	functioncall	$const6 3536 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp1363 Basis $const1 	%line{177} %argrw{"wrr"}
	if		$tmp1363 2854 2854 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 2853 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp1364 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp1364 2846 2847 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp1362 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp1362 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp1365 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp1366 $tmp1365 $const3 	%argrw{"wrr"}
	if		$tmp1366 2852 2852 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		___664_t $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		___664_t ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp1367 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp1367 2965 2965 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 2964 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 2962 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 2962 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 2961 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1370 $tmp1362 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1369 $tmp1370 	%argrw{"wr"}
	assign		___633_xi $tmp1369 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1372 $tmp1362 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1371 $tmp1372 	%argrw{"wr"}
	assign		___633_yi $tmp1371 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1374 $tmp1362 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1373 $tmp1374 	%argrw{"wr"}
	assign		___633_zi $tmp1373 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1376 2875 2877 2959 2961 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1375 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1376 ___633_xx $tmp1375 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1378 2879 2881 2957 2959 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1377 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1378 ___633_yy $tmp1377 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1380 2883 2885 2955 2957 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1379 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1380 ___633_zz $tmp1379 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1381 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1382 ___633_yy 	%argrw{"wr"}
	assign		$tmp1383 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1381 $tmp1382 $tmp1383 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 2902 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1385 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1386 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1387 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1384 $tmp1385 $tmp1386 $tmp1387 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1384 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1389 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1390 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1391 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1388 $tmp1389 $tmp1390 $tmp1391 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1388 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1392 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1362 $tmp1392 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 2906 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1394 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1395 ___633_yy 	%argrw{"wr"}
	assign		$tmp1396 ___633_zz 	%argrw{"wr"}
	point		$tmp1393 $tmp1394 $tmp1395 $tmp1396 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1393 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1397 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1398 ___639_d $tmp1397 	%argrw{"wrr"}
	if		$tmp1398 2928 2955 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1399 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1399 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1400 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1400 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1401 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1401 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1402 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1402 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1403 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1403 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1404 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1404 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1405 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1406 ___639_d $tmp1405 	%argrw{"wrr"}
	if		$tmp1406 2941 2955 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1407 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1407 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1408 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1408 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1409 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1409 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1410 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1410 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1411 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1412 ___639_d $tmp1411 	%argrw{"wrr"}
	if		$tmp1412 2950 2955 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1413 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1413 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1414 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1414 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1415 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1416 ___639_d $tmp1415 	%argrw{"wrr"}
	if		$tmp1416 2955 2955 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1417 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1418 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1419 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1368 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp1420 $const13 $tmp1368 	%line{147} %argrw{"wrr"}
	sub		___664_t $tmp1420 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp1421 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp1421 3076 3076 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 3075 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 3073 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 3073 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3072 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1424 $tmp1362 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1423 $tmp1424 	%argrw{"wr"}
	assign		___633_xi $tmp1423 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1426 $tmp1362 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1425 $tmp1426 	%argrw{"wr"}
	assign		___633_yi $tmp1425 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1428 $tmp1362 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1427 $tmp1428 	%argrw{"wr"}
	assign		___633_zi $tmp1427 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1430 2986 2988 3070 3072 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1429 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1430 ___633_xx $tmp1429 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1432 2990 2992 3068 3070 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1431 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1432 ___633_yy $tmp1431 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1434 2994 2996 3066 3068 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1433 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1434 ___633_zz $tmp1433 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1435 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1436 ___633_yy 	%argrw{"wr"}
	assign		$tmp1437 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1435 $tmp1436 $tmp1437 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3013 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1439 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1440 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1441 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1438 $tmp1439 $tmp1440 $tmp1441 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1438 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1443 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1444 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1445 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1442 $tmp1443 $tmp1444 $tmp1445 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1442 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1446 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1362 $tmp1446 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3017 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1448 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1449 ___633_yy 	%argrw{"wr"}
	assign		$tmp1450 ___633_zz 	%argrw{"wr"}
	point		$tmp1447 $tmp1448 $tmp1449 $tmp1450 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1447 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1451 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1452 ___639_d $tmp1451 	%argrw{"wrr"}
	if		$tmp1452 3039 3066 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1453 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1453 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1454 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1454 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1455 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1455 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1456 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1456 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1457 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1457 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1458 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1458 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1459 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1460 ___639_d $tmp1459 	%argrw{"wrr"}
	if		$tmp1460 3052 3066 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1461 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1461 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1462 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1462 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1463 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1463 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1464 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1464 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1465 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1466 ___639_d $tmp1465 	%argrw{"wrr"}
	if		$tmp1466 3061 3066 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1467 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1467 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1468 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1468 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1469 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1470 ___639_d $tmp1469 	%argrw{"wrr"}
	if		$tmp1470 3066 3066 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1471 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1472 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1473 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1422 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp1474 $const13 $tmp1422 	%line{148} %argrw{"wrr"}
	sub		___664_t $tmp1474 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp1475 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp1475 3187 3187 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 3186 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 3184 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 3184 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3183 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1478 $tmp1362 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1477 $tmp1478 	%argrw{"wr"}
	assign		___633_xi $tmp1477 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1480 $tmp1362 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1479 $tmp1480 	%argrw{"wr"}
	assign		___633_yi $tmp1479 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1482 $tmp1362 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1481 $tmp1482 	%argrw{"wr"}
	assign		___633_zi $tmp1481 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1484 3097 3099 3181 3183 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1483 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1484 ___633_xx $tmp1483 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1486 3101 3103 3179 3181 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1485 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1486 ___633_yy $tmp1485 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1488 3105 3107 3177 3179 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1487 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1488 ___633_zz $tmp1487 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1489 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1490 ___633_yy 	%argrw{"wr"}
	assign		$tmp1491 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1489 $tmp1490 $tmp1491 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3124 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1493 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1494 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1495 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1492 $tmp1493 $tmp1494 $tmp1495 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1492 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1497 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1498 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1499 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1496 $tmp1497 $tmp1498 $tmp1499 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1496 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1500 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1362 $tmp1500 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3128 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1502 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1503 ___633_yy 	%argrw{"wr"}
	assign		$tmp1504 ___633_zz 	%argrw{"wr"}
	point		$tmp1501 $tmp1502 $tmp1503 $tmp1504 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1501 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1505 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1506 ___639_d $tmp1505 	%argrw{"wrr"}
	if		$tmp1506 3150 3177 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1507 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1507 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1508 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1508 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1509 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1509 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1510 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1510 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1511 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1511 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1512 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1512 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1513 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1514 ___639_d $tmp1513 	%argrw{"wrr"}
	if		$tmp1514 3163 3177 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1515 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1515 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1516 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1516 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1517 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1517 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1518 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1518 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1519 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1520 ___639_d $tmp1519 	%argrw{"wrr"}
	if		$tmp1520 3172 3177 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1521 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1521 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1522 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1522 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1523 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1524 ___639_d $tmp1523 	%argrw{"wrr"}
	if		$tmp1524 3177 3177 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1525 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1526 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1527 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1476 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp1528 $const13 $tmp1476 	%line{149} %argrw{"wrr"}
	sub		___664_t $tmp1528 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp1529 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp1529 3298 3298 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 3297 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 3295 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 3295 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3294 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1532 $tmp1362 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1531 $tmp1532 	%argrw{"wr"}
	assign		___633_xi $tmp1531 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1534 $tmp1362 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1533 $tmp1534 	%argrw{"wr"}
	assign		___633_yi $tmp1533 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1536 $tmp1362 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1535 $tmp1536 	%argrw{"wr"}
	assign		___633_zi $tmp1535 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1538 3208 3210 3292 3294 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1537 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1538 ___633_xx $tmp1537 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1540 3212 3214 3290 3292 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1539 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1540 ___633_yy $tmp1539 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1542 3216 3218 3288 3290 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1541 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1542 ___633_zz $tmp1541 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1543 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1544 ___633_yy 	%argrw{"wr"}
	assign		$tmp1545 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1543 $tmp1544 $tmp1545 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3235 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1547 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1548 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1549 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1546 $tmp1547 $tmp1548 $tmp1549 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1546 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1551 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1552 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1553 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1550 $tmp1551 $tmp1552 $tmp1553 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1550 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1554 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1362 $tmp1554 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3239 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1556 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1557 ___633_yy 	%argrw{"wr"}
	assign		$tmp1558 ___633_zz 	%argrw{"wr"}
	point		$tmp1555 $tmp1556 $tmp1557 $tmp1558 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1555 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1559 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1560 ___639_d $tmp1559 	%argrw{"wrr"}
	if		$tmp1560 3261 3288 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1561 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1561 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1562 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1562 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1563 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1563 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1564 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1564 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1565 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1565 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1566 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1566 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1567 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1568 ___639_d $tmp1567 	%argrw{"wrr"}
	if		$tmp1568 3274 3288 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1569 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1569 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1570 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1570 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1571 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1571 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1572 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1572 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1573 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1574 ___639_d $tmp1573 	%argrw{"wrr"}
	if		$tmp1574 3283 3288 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1575 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1575 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1576 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1576 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1577 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1578 ___639_d $tmp1577 	%argrw{"wrr"}
	if		$tmp1578 3288 3288 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1579 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1580 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1581 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1530 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp1582 $const13 $tmp1530 	%line{150} %argrw{"wrr"}
	sub		___664_t $tmp1582 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp1583 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp1583 3411 3411 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 3410 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 3408 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 3408 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3405 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1586 $tmp1362 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1585 $tmp1586 	%argrw{"wr"}
	assign		___633_xi $tmp1585 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1588 $tmp1362 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1587 $tmp1588 	%argrw{"wr"}
	assign		___633_yi $tmp1587 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1590 $tmp1362 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1589 $tmp1590 	%argrw{"wr"}
	assign		___633_zi $tmp1589 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1592 3319 3321 3403 3405 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1591 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1592 ___633_xx $tmp1591 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1594 3323 3325 3401 3403 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1593 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1594 ___633_yy $tmp1593 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1596 3327 3329 3399 3401 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1595 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1596 ___633_zz $tmp1595 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1597 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1598 ___633_yy 	%argrw{"wr"}
	assign		$tmp1599 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1597 $tmp1598 $tmp1599 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3346 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1601 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1602 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1603 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1600 $tmp1601 $tmp1602 $tmp1603 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1600 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1605 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1606 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1607 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1604 $tmp1605 $tmp1606 $tmp1607 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1604 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1608 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1362 $tmp1608 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3350 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1610 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1611 ___633_yy 	%argrw{"wr"}
	assign		$tmp1612 ___633_zz 	%argrw{"wr"}
	point		$tmp1609 $tmp1610 $tmp1611 $tmp1612 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1609 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1613 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1614 ___639_d $tmp1613 	%argrw{"wrr"}
	if		$tmp1614 3372 3399 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1615 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1615 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1616 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1616 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1617 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp1617 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1618 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1618 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1619 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1619 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1620 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp1620 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1621 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1622 ___639_d $tmp1621 	%argrw{"wrr"}
	if		$tmp1622 3385 3399 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1623 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1623 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1624 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1624 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1625 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1625 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1626 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1626 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1627 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1628 ___639_d $tmp1627 	%argrw{"wrr"}
	if		$tmp1628 3394 3399 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1629 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1629 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1630 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1630 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1631 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1632 ___639_d $tmp1631 	%argrw{"wrr"}
	if		$tmp1632 3399 3399 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1633 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1634 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1635 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp1636 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp1637 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp1584 $tmp1636 $tmp1637 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp1638 $const13 $tmp1584 	%line{151} %argrw{"wrr"}
	sub		___664_t $tmp1638 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp1639 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp1639 3531 3531 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 3530 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 3528 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 3522 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 3522 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3519 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1643 $tmp1362 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1642 $tmp1643 	%argrw{"wr"}
	assign		___633_xi $tmp1642 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1645 $tmp1362 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1644 $tmp1645 	%argrw{"wr"}
	assign		___633_yi $tmp1644 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1647 $tmp1362 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1646 $tmp1647 	%argrw{"wr"}
	assign		___633_zi $tmp1646 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1649 3433 3435 3517 3519 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1648 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1649 ___633_xx $tmp1648 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1651 3437 3439 3515 3517 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1650 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1651 ___633_yy $tmp1650 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1653 3441 3443 3513 3515 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1652 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1653 ___633_zz $tmp1652 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1654 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1655 ___633_yy 	%argrw{"wr"}
	assign		$tmp1656 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1654 $tmp1655 $tmp1656 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3460 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1658 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1659 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1660 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1657 $tmp1658 $tmp1659 $tmp1660 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1657 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1662 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1663 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1664 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1661 $tmp1662 $tmp1663 $tmp1664 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1661 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1665 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1362 $tmp1665 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3464 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1667 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1668 ___633_yy 	%argrw{"wr"}
	assign		$tmp1669 ___633_zz 	%argrw{"wr"}
	point		$tmp1666 $tmp1667 $tmp1668 $tmp1669 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1666 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1670 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1671 ___639_d $tmp1670 	%argrw{"wrr"}
	if		$tmp1671 3486 3513 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1672 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1672 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1673 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1673 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1674 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp1674 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1675 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1675 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1676 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1676 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1677 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp1677 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1678 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1679 ___639_d $tmp1678 	%argrw{"wrr"}
	if		$tmp1679 3499 3513 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1680 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1680 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1681 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1681 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1682 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1682 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1683 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1683 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1684 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1685 ___639_d $tmp1684 	%argrw{"wrr"}
	if		$tmp1685 3508 3513 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1686 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1686 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1687 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1687 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1688 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1689 ___639_d $tmp1688 	%argrw{"wrr"}
	if		$tmp1689 3513 3513 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1690 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1691 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1692 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp1693 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp1694 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp1641 $tmp1693 $tmp1694 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp1641 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp1695 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp1695 3526 3527 	%argrw{"r"}
	assign		$tmp1640 $const23 	%argrw{"wr"}
	assign		$tmp1640 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp1696 $const13 $tmp1640 	%line{152} %argrw{"wrr"}
	sub		___664_t $tmp1696 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp1697 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp1697 3535 3535 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___664_t $tmp1362 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		___664_t $const4 	%line{194} %argrw{"wr"}
# include/node_texture.h:233
# 		if (hard)
	if		___667_hard 3540 3540 	%line{233} %argrw{"r"}
# include/node_texture.h:234
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp1698 $const13 ___664_t 	%line{234} %argrw{"wrr"}
	sub		$tmp1699 $tmp1698 $const23 	%argrw{"wrr"}
	fabs		___664_t $tmp1699 	%argrw{"wr"}
# include/node_texture.h:236
# 		float sum2 = sum + t * amp;
	mul		$tmp1700 ___664_t ___661_amp 	%line{236} %argrw{"wrr"}
	add		___664_sum2 ___661_sum $tmp1700 	%argrw{"wrr"}
# include/node_texture.h:238
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp1701 $const7 ___661_n 	%line{238} %argrw{"wrr"}
	assign		$tmp1702 $tmp1701 	%argrw{"wr"}
	add		$tmp1703 ___661_n $const7 	%argrw{"wrr"}
	shl		$tmp1704 $const7 $tmp1703 	%argrw{"wrr"}
	sub		$tmp1705 $tmp1704 $const7 	%argrw{"wrr"}
	assign		$tmp1706 $tmp1705 	%argrw{"wr"}
	div		$tmp1707 $tmp1702 $tmp1706 	%argrw{"wrr"}
	mul		___661_sum ___661_sum $tmp1707 	%argrw{"wrr"}
# include/node_texture.h:239
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp1708 ___661_n $const7 	%line{239} %argrw{"wrr"}
	shl		$tmp1709 $const7 $tmp1708 	%argrw{"wrr"}
	assign		$tmp1710 $tmp1709 	%argrw{"wr"}
	add		$tmp1711 ___661_n $const18 	%argrw{"wrr"}
	shl		$tmp1712 $const7 $tmp1711 	%argrw{"wrr"}
	sub		$tmp1713 $tmp1712 $const7 	%argrw{"wrr"}
	assign		$tmp1714 $tmp1713 	%argrw{"wr"}
	div		$tmp1715 $tmp1710 $tmp1714 	%argrw{"wrr"}
	mul		___664_sum2 ___664_sum2 $tmp1715 	%argrw{"wrr"}
# include/node_texture.h:241
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp1716 $const23 ___661_rmd 	%line{241} %argrw{"wrr"}
	mul		$tmp1717 $tmp1716 ___661_sum 	%argrw{"wrr"}
	mul		$tmp1718 ___661_rmd ___664_sum2 	%argrw{"wrr"}
	add		Fac $tmp1717 $tmp1718 	%argrw{"wrr"}
	return
# include/node_texture.h:244
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp1719 $const7 ___661_n 	%line{244} %argrw{"wrr"}
	assign		$tmp1720 $tmp1719 	%argrw{"wr"}
	add		$tmp1721 ___661_n $const7 	%argrw{"wrr"}
	shl		$tmp1722 $const7 $tmp1721 	%argrw{"wrr"}
	sub		$tmp1723 $tmp1722 $const7 	%argrw{"wrr"}
	assign		$tmp1724 $tmp1723 	%argrw{"wr"}
	div		$tmp1725 $tmp1720 $tmp1724 	%argrw{"wrr"}
	mul		___661_sum ___661_sum $tmp1725 	%argrw{"wrr"}
# include/node_texture.h:245
# 		return sum;
	assign		Fac ___661_sum 	%line{245} %argrw{"wr"}
	return
# include/node_noise_texture.osl:38
# 		noise_turbulence(point(p[1], p[2], p[0]), basis, detail, hard));
	compref		$tmp1728 $tmp1 $const7 	%filename{"include/node_noise_texture.osl"} %line{38} %argrw{"wrr"}
	compref		$tmp1729 $tmp1 $const3 	%argrw{"wrr"}
	compref		$tmp1730 $tmp1 $const18 	%argrw{"wrr"}
	point		$tmp1727 $tmp1728 $tmp1729 $tmp1730 	%argrw{"wrrr"}
	functioncall	$const42 5039 	%argrw{"r"}
# include/node_texture.h:209
# 	float fscale = 1.0;
	assign		___661_fscale $const23 	%filename{"include/node_texture.h"} %line{209} %argrw{"wr"}
# include/node_texture.h:210
# 	float amp = 1.0;
	assign		___661_amp $const23 	%line{210} %argrw{"wr"}
# include/node_texture.h:211
# 	float sum = 0.0;
	assign		___661_sum $const4 	%line{211} %argrw{"wr"}
# include/node_texture.h:214
# 	float octaves = clamp(details, 0.0, 16.0);
	functioncall	$const44 3585 	%line{214} %argrw{"r"}
# include/stdosl.h:144
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1731 Detail $const43 	%filename{"include/stdosl.h"} %line{144} %argrw{"wrr"}
	max		___661_octaves $tmp1731 $const4 	%argrw{"wrr"}
# include/node_texture.h:215
# 	n = (int)octaves;
	assign		___661_n ___661_octaves 	%filename{"include/node_texture.h"} %line{215} %argrw{"wr"}
# include/node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	for		$tmp1732 3588 3589 4296 4298 	%line{217} %argrw{"r"}
	assign		___661_i $const3 	%argrw{"wr"}
	le		$tmp1732 ___661_i ___661_n 	%argrw{"wrr"}
# include/node_texture.h:218
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp1733 ___661_fscale $tmp1727 	%line{218} %argrw{"wrr"}
	functioncall	$const6 4288 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp1734 Basis $const1 	%line{177} %argrw{"wrr"}
	if		$tmp1734 3606 3606 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 3605 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp1735 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp1735 3598 3599 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp1733 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp1733 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp1736 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp1737 $tmp1736 $const3 	%argrw{"wrr"}
	if		$tmp1737 3604 3604 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		___663_t $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		___663_t ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp1738 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp1738 3717 3717 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 3716 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 3714 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 3714 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3713 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1741 $tmp1733 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1740 $tmp1741 	%argrw{"wr"}
	assign		___633_xi $tmp1740 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1743 $tmp1733 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1742 $tmp1743 	%argrw{"wr"}
	assign		___633_yi $tmp1742 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1745 $tmp1733 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1744 $tmp1745 	%argrw{"wr"}
	assign		___633_zi $tmp1744 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1747 3627 3629 3711 3713 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1746 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1747 ___633_xx $tmp1746 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1749 3631 3633 3709 3711 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1748 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1749 ___633_yy $tmp1748 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1751 3635 3637 3707 3709 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1750 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1751 ___633_zz $tmp1750 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1752 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1753 ___633_yy 	%argrw{"wr"}
	assign		$tmp1754 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1752 $tmp1753 $tmp1754 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3654 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1756 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1757 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1758 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1755 $tmp1756 $tmp1757 $tmp1758 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1755 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1760 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1761 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1762 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1759 $tmp1760 $tmp1761 $tmp1762 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1759 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1763 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1733 $tmp1763 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3658 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1765 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1766 ___633_yy 	%argrw{"wr"}
	assign		$tmp1767 ___633_zz 	%argrw{"wr"}
	point		$tmp1764 $tmp1765 $tmp1766 $tmp1767 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1764 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1768 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1769 ___639_d $tmp1768 	%argrw{"wrr"}
	if		$tmp1769 3680 3707 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1770 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1770 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1771 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1771 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1772 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1772 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1773 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1773 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1774 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1774 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1775 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1775 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1776 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1777 ___639_d $tmp1776 	%argrw{"wrr"}
	if		$tmp1777 3693 3707 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1778 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1778 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1779 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1779 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1780 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1780 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1781 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1781 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1782 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1783 ___639_d $tmp1782 	%argrw{"wrr"}
	if		$tmp1783 3702 3707 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1784 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1784 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1785 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1785 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1786 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1787 ___639_d $tmp1786 	%argrw{"wrr"}
	if		$tmp1787 3707 3707 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1788 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1789 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1790 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1739 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp1791 $const13 $tmp1739 	%line{147} %argrw{"wrr"}
	sub		___663_t $tmp1791 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp1792 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp1792 3828 3828 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 3827 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 3825 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 3825 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3824 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1795 $tmp1733 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1794 $tmp1795 	%argrw{"wr"}
	assign		___633_xi $tmp1794 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1797 $tmp1733 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1796 $tmp1797 	%argrw{"wr"}
	assign		___633_yi $tmp1796 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1799 $tmp1733 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1798 $tmp1799 	%argrw{"wr"}
	assign		___633_zi $tmp1798 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1801 3738 3740 3822 3824 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1800 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1801 ___633_xx $tmp1800 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1803 3742 3744 3820 3822 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1802 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1803 ___633_yy $tmp1802 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1805 3746 3748 3818 3820 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1804 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1805 ___633_zz $tmp1804 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1806 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1807 ___633_yy 	%argrw{"wr"}
	assign		$tmp1808 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1806 $tmp1807 $tmp1808 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3765 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1810 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1811 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1812 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1809 $tmp1810 $tmp1811 $tmp1812 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1809 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1814 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1815 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1816 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1813 $tmp1814 $tmp1815 $tmp1816 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1813 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1817 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1733 $tmp1817 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3769 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1819 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1820 ___633_yy 	%argrw{"wr"}
	assign		$tmp1821 ___633_zz 	%argrw{"wr"}
	point		$tmp1818 $tmp1819 $tmp1820 $tmp1821 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1818 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1822 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1823 ___639_d $tmp1822 	%argrw{"wrr"}
	if		$tmp1823 3791 3818 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1824 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1824 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1825 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1825 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1826 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1826 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1827 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1827 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1828 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1828 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1829 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1829 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1830 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1831 ___639_d $tmp1830 	%argrw{"wrr"}
	if		$tmp1831 3804 3818 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1832 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1832 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1833 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1833 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1834 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1834 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1835 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1835 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1836 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1837 ___639_d $tmp1836 	%argrw{"wrr"}
	if		$tmp1837 3813 3818 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1838 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1838 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1839 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1839 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1840 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1841 ___639_d $tmp1840 	%argrw{"wrr"}
	if		$tmp1841 3818 3818 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1842 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1843 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1844 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1793 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp1845 $const13 $tmp1793 	%line{148} %argrw{"wrr"}
	sub		___663_t $tmp1845 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp1846 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp1846 3939 3939 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 3938 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 3936 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 3936 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 3935 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1849 $tmp1733 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1848 $tmp1849 	%argrw{"wr"}
	assign		___633_xi $tmp1848 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1851 $tmp1733 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1850 $tmp1851 	%argrw{"wr"}
	assign		___633_yi $tmp1850 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1853 $tmp1733 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1852 $tmp1853 	%argrw{"wr"}
	assign		___633_zi $tmp1852 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1855 3849 3851 3933 3935 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1854 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1855 ___633_xx $tmp1854 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1857 3853 3855 3931 3933 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1856 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1857 ___633_yy $tmp1856 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1859 3857 3859 3929 3931 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1858 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1859 ___633_zz $tmp1858 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1860 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1861 ___633_yy 	%argrw{"wr"}
	assign		$tmp1862 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1860 $tmp1861 $tmp1862 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3876 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1864 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1865 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1866 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1863 $tmp1864 $tmp1865 $tmp1866 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1863 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1868 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1869 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1870 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1867 $tmp1868 $tmp1869 $tmp1870 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1867 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1871 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1733 $tmp1871 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3880 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1873 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1874 ___633_yy 	%argrw{"wr"}
	assign		$tmp1875 ___633_zz 	%argrw{"wr"}
	point		$tmp1872 $tmp1873 $tmp1874 $tmp1875 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1872 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1876 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1877 ___639_d $tmp1876 	%argrw{"wrr"}
	if		$tmp1877 3902 3929 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1878 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1878 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1879 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1879 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1880 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1880 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1881 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1881 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1882 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1882 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1883 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1883 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1884 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1885 ___639_d $tmp1884 	%argrw{"wrr"}
	if		$tmp1885 3915 3929 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1886 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1886 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1887 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1887 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1888 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1888 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1889 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1889 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1890 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1891 ___639_d $tmp1890 	%argrw{"wrr"}
	if		$tmp1891 3924 3929 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1892 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1892 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1893 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1893 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1894 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1895 ___639_d $tmp1894 	%argrw{"wrr"}
	if		$tmp1895 3929 3929 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1896 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1897 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1898 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1847 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp1899 $const13 $tmp1847 	%line{149} %argrw{"wrr"}
	sub		___663_t $tmp1899 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp1900 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp1900 4050 4050 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 4049 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 4047 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 4047 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4046 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1903 $tmp1733 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1902 $tmp1903 	%argrw{"wr"}
	assign		___633_xi $tmp1902 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1905 $tmp1733 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1904 $tmp1905 	%argrw{"wr"}
	assign		___633_yi $tmp1904 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1907 $tmp1733 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1906 $tmp1907 	%argrw{"wr"}
	assign		___633_zi $tmp1906 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1909 3960 3962 4044 4046 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1908 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1909 ___633_xx $tmp1908 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1911 3964 3966 4042 4044 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1910 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1911 ___633_yy $tmp1910 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1913 3968 3970 4040 4042 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1912 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1913 ___633_zz $tmp1912 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1914 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1915 ___633_yy 	%argrw{"wr"}
	assign		$tmp1916 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1914 $tmp1915 $tmp1916 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 3987 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1918 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1919 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1920 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1917 $tmp1918 $tmp1919 $tmp1920 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1917 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1922 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1923 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1924 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1921 $tmp1922 $tmp1923 $tmp1924 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1921 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1925 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1733 $tmp1925 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 3991 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1927 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1928 ___633_yy 	%argrw{"wr"}
	assign		$tmp1929 ___633_zz 	%argrw{"wr"}
	point		$tmp1926 $tmp1927 $tmp1928 $tmp1929 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1926 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1930 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1931 ___639_d $tmp1930 	%argrw{"wrr"}
	if		$tmp1931 4013 4040 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1932 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1932 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1933 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1933 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1934 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp1934 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1935 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1935 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1936 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1936 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1937 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp1937 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1938 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1939 ___639_d $tmp1938 	%argrw{"wrr"}
	if		$tmp1939 4026 4040 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1940 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1940 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1941 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp1941 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1942 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1942 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1943 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp1943 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1944 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1945 ___639_d $tmp1944 	%argrw{"wrr"}
	if		$tmp1945 4035 4040 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp1946 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp1946 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp1947 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp1947 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp1948 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp1949 ___639_d $tmp1948 	%argrw{"wrr"}
	if		$tmp1949 4040 4040 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp1950 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp1951 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp1952 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp1901 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp1953 $const13 $tmp1901 	%line{150} %argrw{"wrr"}
	sub		___663_t $tmp1953 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp1954 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp1954 4163 4163 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 4162 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 4160 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 4160 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4157 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp1957 $tmp1733 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp1956 $tmp1957 	%argrw{"wr"}
	assign		___633_xi $tmp1956 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp1959 $tmp1733 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp1958 $tmp1959 	%argrw{"wr"}
	assign		___633_yi $tmp1958 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp1961 $tmp1733 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp1960 $tmp1961 	%argrw{"wr"}
	assign		___633_zi $tmp1960 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp1963 4071 4073 4155 4157 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp1962 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp1963 ___633_xx $tmp1962 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp1965 4075 4077 4153 4155 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp1964 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp1965 ___633_yy $tmp1964 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp1967 4079 4081 4151 4153 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp1966 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp1967 ___633_zz $tmp1966 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp1968 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp1969 ___633_yy 	%argrw{"wr"}
	assign		$tmp1970 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp1968 $tmp1969 $tmp1970 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4098 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp1972 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp1973 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp1974 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp1971 $tmp1972 $tmp1973 $tmp1974 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp1971 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp1976 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp1977 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp1978 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp1975 $tmp1976 $tmp1977 $tmp1978 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp1975 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp1979 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1733 $tmp1979 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4102 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp1981 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp1982 ___633_yy 	%argrw{"wr"}
	assign		$tmp1983 ___633_zz 	%argrw{"wr"}
	point		$tmp1980 $tmp1981 $tmp1982 $tmp1983 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp1980 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp1984 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp1985 ___639_d $tmp1984 	%argrw{"wrr"}
	if		$tmp1985 4124 4151 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp1986 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1986 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp1987 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1987 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp1988 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp1988 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp1989 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1989 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp1990 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1990 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp1991 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp1991 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp1992 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp1993 ___639_d $tmp1992 	%argrw{"wrr"}
	if		$tmp1993 4137 4151 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp1994 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp1994 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp1995 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp1995 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp1996 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp1996 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp1997 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp1997 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp1998 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp1999 ___639_d $tmp1998 	%argrw{"wrr"}
	if		$tmp1999 4146 4151 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2000 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2000 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2001 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2001 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2002 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2003 ___639_d $tmp2002 	%argrw{"wrr"}
	if		$tmp2003 4151 4151 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2004 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2005 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2006 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp2007 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp2008 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp1955 $tmp2007 $tmp2008 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp2009 $const13 $tmp1955 	%line{151} %argrw{"wrr"}
	sub		___663_t $tmp2009 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp2010 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp2010 4283 4283 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 4282 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 4280 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 4274 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 4274 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4271 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2014 $tmp1733 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2013 $tmp2014 	%argrw{"wr"}
	assign		___633_xi $tmp2013 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2016 $tmp1733 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2015 $tmp2016 	%argrw{"wr"}
	assign		___633_yi $tmp2015 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2018 $tmp1733 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2017 $tmp2018 	%argrw{"wr"}
	assign		___633_zi $tmp2017 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2020 4185 4187 4269 4271 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2019 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2020 ___633_xx $tmp2019 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2022 4189 4191 4267 4269 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2021 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2022 ___633_yy $tmp2021 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2024 4193 4195 4265 4267 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2023 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2024 ___633_zz $tmp2023 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2025 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2026 ___633_yy 	%argrw{"wr"}
	assign		$tmp2027 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2025 $tmp2026 $tmp2027 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4212 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2029 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2030 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2031 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2028 $tmp2029 $tmp2030 $tmp2031 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2028 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2033 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2034 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2035 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2032 $tmp2033 $tmp2034 $tmp2035 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2032 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2036 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp1733 $tmp2036 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4216 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2038 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2039 ___633_yy 	%argrw{"wr"}
	assign		$tmp2040 ___633_zz 	%argrw{"wr"}
	point		$tmp2037 $tmp2038 $tmp2039 $tmp2040 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2037 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2041 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2042 ___639_d $tmp2041 	%argrw{"wrr"}
	if		$tmp2042 4238 4265 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2043 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2043 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2044 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2044 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2045 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp2045 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2046 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2046 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2047 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2047 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2048 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp2048 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2049 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2050 ___639_d $tmp2049 	%argrw{"wrr"}
	if		$tmp2050 4251 4265 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2051 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2051 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2052 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2052 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2053 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2053 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2054 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2054 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2055 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2056 ___639_d $tmp2055 	%argrw{"wrr"}
	if		$tmp2056 4260 4265 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2057 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2057 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2058 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2058 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2059 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2060 ___639_d $tmp2059 	%argrw{"wrr"}
	if		$tmp2060 4265 4265 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2061 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2062 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2063 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp2064 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp2065 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp2012 $tmp2064 $tmp2065 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp2012 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp2066 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp2066 4278 4279 	%argrw{"r"}
	assign		$tmp2011 $const23 	%argrw{"wr"}
	assign		$tmp2011 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp2067 $const13 $tmp2011 	%line{152} %argrw{"wrr"}
	sub		___663_t $tmp2067 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp2068 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp2068 4287 4287 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___663_t $tmp1733 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		___663_t $const4 	%line{194} %argrw{"wr"}
# include/node_texture.h:220
# 		if (hard)
	if		___667_hard 4292 4292 	%line{220} %argrw{"r"}
# include/node_texture.h:221
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp2069 $const13 ___663_t 	%line{221} %argrw{"wrr"}
	sub		$tmp2070 $tmp2069 $const23 	%argrw{"wrr"}
	fabs		___663_t $tmp2070 	%argrw{"wr"}
# include/node_texture.h:223
# 		sum += t * amp;
	mul		$tmp2071 ___663_t ___661_amp 	%line{223} %argrw{"wrr"}
	add		___661_sum ___661_sum $tmp2071 	%argrw{"wrr"}
# include/node_texture.h:224
# 		amp *= 0.5;
	mul		___661_amp ___661_amp $const10 	%line{224} %argrw{"wrr"}
# include/node_texture.h:225
# 		fscale *= 2.0;
	mul		___661_fscale ___661_fscale $const13 	%line{225} %argrw{"wrr"}
# include/node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	assign		$tmp2072 ___661_i 	%line{217} %argrw{"wr"}
	add		___661_i ___661_i $const7 	%argrw{"wrr"}
# include/node_texture.h:228
# 	float rmd = octaves - floor(octaves);
	floor		$tmp2073 ___661_octaves 	%line{228} %argrw{"wr"}
	sub		___661_rmd ___661_octaves $tmp2073 	%argrw{"wrr"}
# include/node_texture.h:230
# 	if (rmd != 0.0) {
	neq		$tmp2074 ___661_rmd $const4 	%line{230} %argrw{"wrr"}
	if		$tmp2074 5029 5039 	%argrw{"r"}
# include/node_texture.h:231
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp2075 ___661_fscale $tmp1727 	%line{231} %argrw{"wrr"}
	functioncall	$const6 5001 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp2076 Basis $const1 	%line{177} %argrw{"wrr"}
	if		$tmp2076 4319 4319 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 4318 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp2077 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp2077 4311 4312 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp2075 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp2075 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp2078 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp2079 $tmp2078 $const3 	%argrw{"wrr"}
	if		$tmp2079 4317 4317 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		___664_t $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		___664_t ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp2080 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp2080 4430 4430 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 4429 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 4427 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 4427 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4426 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2083 $tmp2075 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2082 $tmp2083 	%argrw{"wr"}
	assign		___633_xi $tmp2082 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2085 $tmp2075 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2084 $tmp2085 	%argrw{"wr"}
	assign		___633_yi $tmp2084 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2087 $tmp2075 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2086 $tmp2087 	%argrw{"wr"}
	assign		___633_zi $tmp2086 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2089 4340 4342 4424 4426 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2088 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2089 ___633_xx $tmp2088 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2091 4344 4346 4422 4424 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2090 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2091 ___633_yy $tmp2090 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2093 4348 4350 4420 4422 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2092 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2093 ___633_zz $tmp2092 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2094 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2095 ___633_yy 	%argrw{"wr"}
	assign		$tmp2096 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2094 $tmp2095 $tmp2096 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4367 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2098 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2099 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2100 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2097 $tmp2098 $tmp2099 $tmp2100 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2097 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2102 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2103 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2104 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2101 $tmp2102 $tmp2103 $tmp2104 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2101 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2105 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2075 $tmp2105 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4371 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2107 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2108 ___633_yy 	%argrw{"wr"}
	assign		$tmp2109 ___633_zz 	%argrw{"wr"}
	point		$tmp2106 $tmp2107 $tmp2108 $tmp2109 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2106 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2110 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2111 ___639_d $tmp2110 	%argrw{"wrr"}
	if		$tmp2111 4393 4420 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2112 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2112 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2113 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2113 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2114 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2114 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2115 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2115 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2116 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2116 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2117 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2117 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2118 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2119 ___639_d $tmp2118 	%argrw{"wrr"}
	if		$tmp2119 4406 4420 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2120 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2120 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2121 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2121 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2122 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2122 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2123 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2123 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2124 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2125 ___639_d $tmp2124 	%argrw{"wrr"}
	if		$tmp2125 4415 4420 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2126 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2126 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2127 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2127 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2128 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2129 ___639_d $tmp2128 	%argrw{"wrr"}
	if		$tmp2129 4420 4420 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2130 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2131 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2132 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2081 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp2133 $const13 $tmp2081 	%line{147} %argrw{"wrr"}
	sub		___664_t $tmp2133 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp2134 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp2134 4541 4541 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 4540 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 4538 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 4538 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4537 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2137 $tmp2075 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2136 $tmp2137 	%argrw{"wr"}
	assign		___633_xi $tmp2136 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2139 $tmp2075 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2138 $tmp2139 	%argrw{"wr"}
	assign		___633_yi $tmp2138 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2141 $tmp2075 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2140 $tmp2141 	%argrw{"wr"}
	assign		___633_zi $tmp2140 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2143 4451 4453 4535 4537 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2142 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2143 ___633_xx $tmp2142 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2145 4455 4457 4533 4535 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2144 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2145 ___633_yy $tmp2144 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2147 4459 4461 4531 4533 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2146 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2147 ___633_zz $tmp2146 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2148 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2149 ___633_yy 	%argrw{"wr"}
	assign		$tmp2150 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2148 $tmp2149 $tmp2150 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4478 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2152 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2153 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2154 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2151 $tmp2152 $tmp2153 $tmp2154 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2151 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2156 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2157 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2158 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2155 $tmp2156 $tmp2157 $tmp2158 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2155 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2159 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2075 $tmp2159 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4482 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2161 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2162 ___633_yy 	%argrw{"wr"}
	assign		$tmp2163 ___633_zz 	%argrw{"wr"}
	point		$tmp2160 $tmp2161 $tmp2162 $tmp2163 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2160 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2164 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2165 ___639_d $tmp2164 	%argrw{"wrr"}
	if		$tmp2165 4504 4531 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2166 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2166 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2167 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2167 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2168 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2168 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2169 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2169 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2170 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2170 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2171 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2171 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2172 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2173 ___639_d $tmp2172 	%argrw{"wrr"}
	if		$tmp2173 4517 4531 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2174 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2174 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2175 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2175 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2176 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2176 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2177 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2177 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2178 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2179 ___639_d $tmp2178 	%argrw{"wrr"}
	if		$tmp2179 4526 4531 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2180 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2180 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2181 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2181 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2182 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2183 ___639_d $tmp2182 	%argrw{"wrr"}
	if		$tmp2183 4531 4531 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2184 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2185 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2186 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2135 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp2187 $const13 $tmp2135 	%line{148} %argrw{"wrr"}
	sub		___664_t $tmp2187 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp2188 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp2188 4652 4652 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 4651 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 4649 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 4649 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4648 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2191 $tmp2075 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2190 $tmp2191 	%argrw{"wr"}
	assign		___633_xi $tmp2190 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2193 $tmp2075 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2192 $tmp2193 	%argrw{"wr"}
	assign		___633_yi $tmp2192 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2195 $tmp2075 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2194 $tmp2195 	%argrw{"wr"}
	assign		___633_zi $tmp2194 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2197 4562 4564 4646 4648 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2196 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2197 ___633_xx $tmp2196 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2199 4566 4568 4644 4646 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2198 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2199 ___633_yy $tmp2198 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2201 4570 4572 4642 4644 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2200 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2201 ___633_zz $tmp2200 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2202 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2203 ___633_yy 	%argrw{"wr"}
	assign		$tmp2204 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2202 $tmp2203 $tmp2204 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4589 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2206 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2207 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2208 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2205 $tmp2206 $tmp2207 $tmp2208 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2205 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2210 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2211 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2212 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2209 $tmp2210 $tmp2211 $tmp2212 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2209 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2213 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2075 $tmp2213 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4593 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2215 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2216 ___633_yy 	%argrw{"wr"}
	assign		$tmp2217 ___633_zz 	%argrw{"wr"}
	point		$tmp2214 $tmp2215 $tmp2216 $tmp2217 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2214 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2218 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2219 ___639_d $tmp2218 	%argrw{"wrr"}
	if		$tmp2219 4615 4642 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2220 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2220 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2221 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2221 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2222 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2222 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2223 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2223 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2224 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2224 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2225 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2225 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2226 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2227 ___639_d $tmp2226 	%argrw{"wrr"}
	if		$tmp2227 4628 4642 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2228 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2228 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2229 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2229 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2230 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2230 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2231 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2231 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2232 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2233 ___639_d $tmp2232 	%argrw{"wrr"}
	if		$tmp2233 4637 4642 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2234 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2234 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2235 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2235 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2236 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2237 ___639_d $tmp2236 	%argrw{"wrr"}
	if		$tmp2237 4642 4642 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2238 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2239 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2240 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2189 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp2241 $const13 $tmp2189 	%line{149} %argrw{"wrr"}
	sub		___664_t $tmp2241 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp2242 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp2242 4763 4763 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 4762 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 4760 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 4760 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4759 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2245 $tmp2075 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2244 $tmp2245 	%argrw{"wr"}
	assign		___633_xi $tmp2244 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2247 $tmp2075 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2246 $tmp2247 	%argrw{"wr"}
	assign		___633_yi $tmp2246 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2249 $tmp2075 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2248 $tmp2249 	%argrw{"wr"}
	assign		___633_zi $tmp2248 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2251 4673 4675 4757 4759 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2250 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2251 ___633_xx $tmp2250 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2253 4677 4679 4755 4757 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2252 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2253 ___633_yy $tmp2252 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2255 4681 4683 4753 4755 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2254 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2255 ___633_zz $tmp2254 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2256 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2257 ___633_yy 	%argrw{"wr"}
	assign		$tmp2258 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2256 $tmp2257 $tmp2258 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4700 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2260 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2261 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2262 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2259 $tmp2260 $tmp2261 $tmp2262 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2259 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2264 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2265 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2266 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2263 $tmp2264 $tmp2265 $tmp2266 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2263 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2267 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2075 $tmp2267 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4704 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2269 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2270 ___633_yy 	%argrw{"wr"}
	assign		$tmp2271 ___633_zz 	%argrw{"wr"}
	point		$tmp2268 $tmp2269 $tmp2270 $tmp2271 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2268 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2272 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2273 ___639_d $tmp2272 	%argrw{"wrr"}
	if		$tmp2273 4726 4753 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2274 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2274 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2275 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2275 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2276 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2276 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2277 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2277 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2278 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2278 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2279 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2279 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2280 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2281 ___639_d $tmp2280 	%argrw{"wrr"}
	if		$tmp2281 4739 4753 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2282 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2282 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2283 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2283 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2284 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2284 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2285 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2285 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2286 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2287 ___639_d $tmp2286 	%argrw{"wrr"}
	if		$tmp2287 4748 4753 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2288 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2288 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2289 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2289 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2290 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2291 ___639_d $tmp2290 	%argrw{"wrr"}
	if		$tmp2291 4753 4753 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2292 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2293 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2294 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2243 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp2295 $const13 $tmp2243 	%line{150} %argrw{"wrr"}
	sub		___664_t $tmp2295 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp2296 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp2296 4876 4876 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 4875 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 4873 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 4873 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4870 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2299 $tmp2075 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2298 $tmp2299 	%argrw{"wr"}
	assign		___633_xi $tmp2298 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2301 $tmp2075 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2300 $tmp2301 	%argrw{"wr"}
	assign		___633_yi $tmp2300 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2303 $tmp2075 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2302 $tmp2303 	%argrw{"wr"}
	assign		___633_zi $tmp2302 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2305 4784 4786 4868 4870 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2304 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2305 ___633_xx $tmp2304 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2307 4788 4790 4866 4868 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2306 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2307 ___633_yy $tmp2306 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2309 4792 4794 4864 4866 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2308 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2309 ___633_zz $tmp2308 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2310 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2311 ___633_yy 	%argrw{"wr"}
	assign		$tmp2312 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2310 $tmp2311 $tmp2312 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4811 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2314 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2315 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2316 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2313 $tmp2314 $tmp2315 $tmp2316 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2313 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2318 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2319 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2320 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2317 $tmp2318 $tmp2319 $tmp2320 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2317 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2321 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2075 $tmp2321 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4815 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2323 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2324 ___633_yy 	%argrw{"wr"}
	assign		$tmp2325 ___633_zz 	%argrw{"wr"}
	point		$tmp2322 $tmp2323 $tmp2324 $tmp2325 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2322 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2326 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2327 ___639_d $tmp2326 	%argrw{"wrr"}
	if		$tmp2327 4837 4864 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2328 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2328 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2329 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2329 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2330 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp2330 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2331 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2331 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2332 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2332 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2333 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp2333 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2334 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2335 ___639_d $tmp2334 	%argrw{"wrr"}
	if		$tmp2335 4850 4864 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2336 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2336 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2337 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2337 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2338 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2338 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2339 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2339 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2340 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2341 ___639_d $tmp2340 	%argrw{"wrr"}
	if		$tmp2341 4859 4864 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2342 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2342 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2343 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2343 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2344 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2345 ___639_d $tmp2344 	%argrw{"wrr"}
	if		$tmp2345 4864 4864 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2346 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2347 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2348 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp2349 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp2350 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp2297 $tmp2349 $tmp2350 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp2351 $const13 $tmp2297 	%line{151} %argrw{"wrr"}
	sub		___664_t $tmp2351 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp2352 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp2352 4996 4996 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 4995 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 4993 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 4987 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 4987 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 4984 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2356 $tmp2075 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2355 $tmp2356 	%argrw{"wr"}
	assign		___633_xi $tmp2355 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2358 $tmp2075 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2357 $tmp2358 	%argrw{"wr"}
	assign		___633_yi $tmp2357 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2360 $tmp2075 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2359 $tmp2360 	%argrw{"wr"}
	assign		___633_zi $tmp2359 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2362 4898 4900 4982 4984 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2361 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2362 ___633_xx $tmp2361 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2364 4902 4904 4980 4982 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2363 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2364 ___633_yy $tmp2363 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2366 4906 4908 4978 4980 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2365 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2366 ___633_zz $tmp2365 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2367 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2368 ___633_yy 	%argrw{"wr"}
	assign		$tmp2369 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2367 $tmp2368 $tmp2369 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 4925 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2371 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2372 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2373 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2370 $tmp2371 $tmp2372 $tmp2373 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2370 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2375 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2376 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2377 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2374 $tmp2375 $tmp2376 $tmp2377 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2374 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2378 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2075 $tmp2378 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 4929 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2380 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2381 ___633_yy 	%argrw{"wr"}
	assign		$tmp2382 ___633_zz 	%argrw{"wr"}
	point		$tmp2379 $tmp2380 $tmp2381 $tmp2382 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2379 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2383 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2384 ___639_d $tmp2383 	%argrw{"wrr"}
	if		$tmp2384 4951 4978 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2385 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2385 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2386 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2386 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2387 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp2387 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2388 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2388 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2389 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2389 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2390 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp2390 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2391 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2392 ___639_d $tmp2391 	%argrw{"wrr"}
	if		$tmp2392 4964 4978 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2393 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2393 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2394 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2394 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2395 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2395 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2396 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2396 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2397 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2398 ___639_d $tmp2397 	%argrw{"wrr"}
	if		$tmp2398 4973 4978 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2399 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2399 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2400 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2400 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2401 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2402 ___639_d $tmp2401 	%argrw{"wrr"}
	if		$tmp2402 4978 4978 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2403 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2404 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2405 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp2406 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp2407 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp2354 $tmp2406 $tmp2407 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp2354 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp2408 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp2408 4991 4992 	%argrw{"r"}
	assign		$tmp2353 $const23 	%argrw{"wr"}
	assign		$tmp2353 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp2409 $const13 $tmp2353 	%line{152} %argrw{"wrr"}
	sub		___664_t $tmp2409 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp2410 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp2410 5000 5000 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___664_t $tmp2075 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		___664_t $const4 	%line{194} %argrw{"wr"}
# include/node_texture.h:233
# 		if (hard)
	if		___667_hard 5005 5005 	%line{233} %argrw{"r"}
# include/node_texture.h:234
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp2411 $const13 ___664_t 	%line{234} %argrw{"wrr"}
	sub		$tmp2412 $tmp2411 $const23 	%argrw{"wrr"}
	fabs		___664_t $tmp2412 	%argrw{"wr"}
# include/node_texture.h:236
# 		float sum2 = sum + t * amp;
	mul		$tmp2413 ___664_t ___661_amp 	%line{236} %argrw{"wrr"}
	add		___664_sum2 ___661_sum $tmp2413 	%argrw{"wrr"}
# include/node_texture.h:238
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp2414 $const7 ___661_n 	%line{238} %argrw{"wrr"}
	assign		$tmp2415 $tmp2414 	%argrw{"wr"}
	add		$tmp2416 ___661_n $const7 	%argrw{"wrr"}
	shl		$tmp2417 $const7 $tmp2416 	%argrw{"wrr"}
	sub		$tmp2418 $tmp2417 $const7 	%argrw{"wrr"}
	assign		$tmp2419 $tmp2418 	%argrw{"wr"}
	div		$tmp2420 $tmp2415 $tmp2419 	%argrw{"wrr"}
	mul		___661_sum ___661_sum $tmp2420 	%argrw{"wrr"}
# include/node_texture.h:239
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp2421 ___661_n $const7 	%line{239} %argrw{"wrr"}
	shl		$tmp2422 $const7 $tmp2421 	%argrw{"wrr"}
	assign		$tmp2423 $tmp2422 	%argrw{"wr"}
	add		$tmp2424 ___661_n $const18 	%argrw{"wrr"}
	shl		$tmp2425 $const7 $tmp2424 	%argrw{"wrr"}
	sub		$tmp2426 $tmp2425 $const7 	%argrw{"wrr"}
	assign		$tmp2427 $tmp2426 	%argrw{"wr"}
	div		$tmp2428 $tmp2423 $tmp2427 	%argrw{"wrr"}
	mul		___664_sum2 ___664_sum2 $tmp2428 	%argrw{"wrr"}
# include/node_texture.h:241
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp2429 $const23 ___661_rmd 	%line{241} %argrw{"wrr"}
	mul		$tmp2430 $tmp2429 ___661_sum 	%argrw{"wrr"}
	mul		$tmp2431 ___661_rmd ___664_sum2 	%argrw{"wrr"}
	add		$tmp1726 $tmp2430 $tmp2431 	%argrw{"wrr"}
	return
# include/node_texture.h:244
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp2432 $const7 ___661_n 	%line{244} %argrw{"wrr"}
	assign		$tmp2433 $tmp2432 	%argrw{"wr"}
	add		$tmp2434 ___661_n $const7 	%argrw{"wrr"}
	shl		$tmp2435 $const7 $tmp2434 	%argrw{"wrr"}
	sub		$tmp2436 $tmp2435 $const7 	%argrw{"wrr"}
	assign		$tmp2437 $tmp2436 	%argrw{"wr"}
	div		$tmp2438 $tmp2433 $tmp2437 	%argrw{"wrr"}
	mul		___661_sum ___661_sum $tmp2438 	%argrw{"wrr"}
# include/node_texture.h:245
# 		return sum;
	assign		$tmp1726 ___661_sum 	%line{245} %argrw{"wr"}
	return
# include/node_noise_texture.osl:39
# 
	compref		$tmp2441 $tmp1 $const7 	%filename{"include/node_noise_texture.osl"} %line{39} %argrw{"wrr"}
	compref		$tmp2442 $tmp1 $const18 	%argrw{"wrr"}
	compref		$tmp2443 $tmp1 $const3 	%argrw{"wrr"}
	point		$tmp2440 $tmp2441 $tmp2442 $tmp2443 	%argrw{"wrrr"}
	functioncall	$const42 6504 	%argrw{"r"}
# include/node_texture.h:209
# 	float fscale = 1.0;
	assign		___661_fscale $const23 	%filename{"include/node_texture.h"} %line{209} %argrw{"wr"}
# include/node_texture.h:210
# 	float amp = 1.0;
	assign		___661_amp $const23 	%line{210} %argrw{"wr"}
# include/node_texture.h:211
# 	float sum = 0.0;
	assign		___661_sum $const4 	%line{211} %argrw{"wr"}
# include/node_texture.h:214
# 	float octaves = clamp(details, 0.0, 16.0);
	functioncall	$const44 5050 	%line{214} %argrw{"r"}
# include/stdosl.h:144
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2444 Detail $const43 	%filename{"include/stdosl.h"} %line{144} %argrw{"wrr"}
	max		___661_octaves $tmp2444 $const4 	%argrw{"wrr"}
# include/node_texture.h:215
# 	n = (int)octaves;
	assign		___661_n ___661_octaves 	%filename{"include/node_texture.h"} %line{215} %argrw{"wr"}
# include/node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	for		$tmp2445 5053 5054 5761 5763 	%line{217} %argrw{"r"}
	assign		___661_i $const3 	%argrw{"wr"}
	le		$tmp2445 ___661_i ___661_n 	%argrw{"wrr"}
# include/node_texture.h:218
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp2446 ___661_fscale $tmp2440 	%line{218} %argrw{"wrr"}
	functioncall	$const6 5753 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp2447 Basis $const1 	%line{177} %argrw{"wrr"}
	if		$tmp2447 5071 5071 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 5070 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp2448 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp2448 5063 5064 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp2446 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp2446 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp2449 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp2450 $tmp2449 $const3 	%argrw{"wrr"}
	if		$tmp2450 5069 5069 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		___663_t $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		___663_t ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp2451 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp2451 5182 5182 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 5181 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 5179 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 5179 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5178 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2454 $tmp2446 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2453 $tmp2454 	%argrw{"wr"}
	assign		___633_xi $tmp2453 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2456 $tmp2446 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2455 $tmp2456 	%argrw{"wr"}
	assign		___633_yi $tmp2455 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2458 $tmp2446 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2457 $tmp2458 	%argrw{"wr"}
	assign		___633_zi $tmp2457 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2460 5092 5094 5176 5178 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2459 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2460 ___633_xx $tmp2459 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2462 5096 5098 5174 5176 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2461 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2462 ___633_yy $tmp2461 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2464 5100 5102 5172 5174 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2463 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2464 ___633_zz $tmp2463 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2465 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2466 ___633_yy 	%argrw{"wr"}
	assign		$tmp2467 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2465 $tmp2466 $tmp2467 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5119 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2469 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2470 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2471 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2468 $tmp2469 $tmp2470 $tmp2471 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2468 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2473 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2474 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2475 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2472 $tmp2473 $tmp2474 $tmp2475 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2472 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2476 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2446 $tmp2476 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5123 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2478 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2479 ___633_yy 	%argrw{"wr"}
	assign		$tmp2480 ___633_zz 	%argrw{"wr"}
	point		$tmp2477 $tmp2478 $tmp2479 $tmp2480 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2477 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2481 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2482 ___639_d $tmp2481 	%argrw{"wrr"}
	if		$tmp2482 5145 5172 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2483 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2483 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2484 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2484 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2485 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2485 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2486 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2486 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2487 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2487 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2488 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2488 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2489 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2490 ___639_d $tmp2489 	%argrw{"wrr"}
	if		$tmp2490 5158 5172 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2491 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2491 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2492 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2492 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2493 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2493 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2494 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2494 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2495 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2496 ___639_d $tmp2495 	%argrw{"wrr"}
	if		$tmp2496 5167 5172 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2497 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2497 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2498 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2498 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2499 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2500 ___639_d $tmp2499 	%argrw{"wrr"}
	if		$tmp2500 5172 5172 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2501 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2502 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2503 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2452 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp2504 $const13 $tmp2452 	%line{147} %argrw{"wrr"}
	sub		___663_t $tmp2504 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp2505 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp2505 5293 5293 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 5292 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 5290 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 5290 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5289 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2508 $tmp2446 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2507 $tmp2508 	%argrw{"wr"}
	assign		___633_xi $tmp2507 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2510 $tmp2446 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2509 $tmp2510 	%argrw{"wr"}
	assign		___633_yi $tmp2509 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2512 $tmp2446 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2511 $tmp2512 	%argrw{"wr"}
	assign		___633_zi $tmp2511 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2514 5203 5205 5287 5289 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2513 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2514 ___633_xx $tmp2513 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2516 5207 5209 5285 5287 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2515 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2516 ___633_yy $tmp2515 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2518 5211 5213 5283 5285 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2517 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2518 ___633_zz $tmp2517 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2519 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2520 ___633_yy 	%argrw{"wr"}
	assign		$tmp2521 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2519 $tmp2520 $tmp2521 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5230 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2523 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2524 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2525 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2522 $tmp2523 $tmp2524 $tmp2525 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2522 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2527 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2528 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2529 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2526 $tmp2527 $tmp2528 $tmp2529 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2526 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2530 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2446 $tmp2530 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5234 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2532 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2533 ___633_yy 	%argrw{"wr"}
	assign		$tmp2534 ___633_zz 	%argrw{"wr"}
	point		$tmp2531 $tmp2532 $tmp2533 $tmp2534 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2531 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2535 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2536 ___639_d $tmp2535 	%argrw{"wrr"}
	if		$tmp2536 5256 5283 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2537 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2537 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2538 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2538 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2539 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2539 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2540 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2540 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2541 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2541 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2542 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2542 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2543 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2544 ___639_d $tmp2543 	%argrw{"wrr"}
	if		$tmp2544 5269 5283 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2545 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2545 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2546 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2546 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2547 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2547 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2548 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2548 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2549 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2550 ___639_d $tmp2549 	%argrw{"wrr"}
	if		$tmp2550 5278 5283 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2551 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2551 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2552 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2552 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2553 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2554 ___639_d $tmp2553 	%argrw{"wrr"}
	if		$tmp2554 5283 5283 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2555 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2556 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2557 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2506 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp2558 $const13 $tmp2506 	%line{148} %argrw{"wrr"}
	sub		___663_t $tmp2558 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp2559 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp2559 5404 5404 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 5403 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 5401 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 5401 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5400 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2562 $tmp2446 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2561 $tmp2562 	%argrw{"wr"}
	assign		___633_xi $tmp2561 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2564 $tmp2446 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2563 $tmp2564 	%argrw{"wr"}
	assign		___633_yi $tmp2563 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2566 $tmp2446 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2565 $tmp2566 	%argrw{"wr"}
	assign		___633_zi $tmp2565 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2568 5314 5316 5398 5400 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2567 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2568 ___633_xx $tmp2567 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2570 5318 5320 5396 5398 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2569 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2570 ___633_yy $tmp2569 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2572 5322 5324 5394 5396 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2571 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2572 ___633_zz $tmp2571 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2573 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2574 ___633_yy 	%argrw{"wr"}
	assign		$tmp2575 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2573 $tmp2574 $tmp2575 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5341 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2577 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2578 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2579 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2576 $tmp2577 $tmp2578 $tmp2579 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2576 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2581 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2582 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2583 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2580 $tmp2581 $tmp2582 $tmp2583 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2580 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2584 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2446 $tmp2584 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5345 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2586 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2587 ___633_yy 	%argrw{"wr"}
	assign		$tmp2588 ___633_zz 	%argrw{"wr"}
	point		$tmp2585 $tmp2586 $tmp2587 $tmp2588 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2585 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2589 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2590 ___639_d $tmp2589 	%argrw{"wrr"}
	if		$tmp2590 5367 5394 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2591 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2591 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2592 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2592 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2593 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2593 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2594 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2594 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2595 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2595 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2596 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2596 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2597 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2598 ___639_d $tmp2597 	%argrw{"wrr"}
	if		$tmp2598 5380 5394 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2599 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2599 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2600 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2600 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2601 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2601 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2602 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2602 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2603 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2604 ___639_d $tmp2603 	%argrw{"wrr"}
	if		$tmp2604 5389 5394 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2605 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2605 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2606 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2606 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2607 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2608 ___639_d $tmp2607 	%argrw{"wrr"}
	if		$tmp2608 5394 5394 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2609 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2610 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2611 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2560 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp2612 $const13 $tmp2560 	%line{149} %argrw{"wrr"}
	sub		___663_t $tmp2612 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp2613 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp2613 5515 5515 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 5514 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 5512 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 5512 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5511 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2616 $tmp2446 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2615 $tmp2616 	%argrw{"wr"}
	assign		___633_xi $tmp2615 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2618 $tmp2446 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2617 $tmp2618 	%argrw{"wr"}
	assign		___633_yi $tmp2617 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2620 $tmp2446 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2619 $tmp2620 	%argrw{"wr"}
	assign		___633_zi $tmp2619 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2622 5425 5427 5509 5511 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2621 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2622 ___633_xx $tmp2621 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2624 5429 5431 5507 5509 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2623 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2624 ___633_yy $tmp2623 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2626 5433 5435 5505 5507 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2625 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2626 ___633_zz $tmp2625 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2627 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2628 ___633_yy 	%argrw{"wr"}
	assign		$tmp2629 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2627 $tmp2628 $tmp2629 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5452 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2631 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2632 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2633 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2630 $tmp2631 $tmp2632 $tmp2633 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2630 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2635 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2636 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2637 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2634 $tmp2635 $tmp2636 $tmp2637 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2634 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2638 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2446 $tmp2638 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5456 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2640 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2641 ___633_yy 	%argrw{"wr"}
	assign		$tmp2642 ___633_zz 	%argrw{"wr"}
	point		$tmp2639 $tmp2640 $tmp2641 $tmp2642 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2639 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2643 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2644 ___639_d $tmp2643 	%argrw{"wrr"}
	if		$tmp2644 5478 5505 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2645 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2645 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2646 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2646 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2647 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2647 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2648 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2648 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2649 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2649 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2650 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2650 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2651 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2652 ___639_d $tmp2651 	%argrw{"wrr"}
	if		$tmp2652 5491 5505 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2653 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2653 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2654 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2654 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2655 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2655 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2656 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2656 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2657 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2658 ___639_d $tmp2657 	%argrw{"wrr"}
	if		$tmp2658 5500 5505 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2659 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2659 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2660 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2660 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2661 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2662 ___639_d $tmp2661 	%argrw{"wrr"}
	if		$tmp2662 5505 5505 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2663 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2664 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2665 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2614 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp2666 $const13 $tmp2614 	%line{150} %argrw{"wrr"}
	sub		___663_t $tmp2666 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp2667 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp2667 5628 5628 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 5627 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 5625 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 5625 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5622 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2670 $tmp2446 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2669 $tmp2670 	%argrw{"wr"}
	assign		___633_xi $tmp2669 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2672 $tmp2446 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2671 $tmp2672 	%argrw{"wr"}
	assign		___633_yi $tmp2671 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2674 $tmp2446 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2673 $tmp2674 	%argrw{"wr"}
	assign		___633_zi $tmp2673 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2676 5536 5538 5620 5622 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2675 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2676 ___633_xx $tmp2675 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2678 5540 5542 5618 5620 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2677 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2678 ___633_yy $tmp2677 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2680 5544 5546 5616 5618 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2679 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2680 ___633_zz $tmp2679 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2681 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2682 ___633_yy 	%argrw{"wr"}
	assign		$tmp2683 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2681 $tmp2682 $tmp2683 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5563 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2685 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2686 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2687 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2684 $tmp2685 $tmp2686 $tmp2687 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2684 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2689 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2690 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2691 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2688 $tmp2689 $tmp2690 $tmp2691 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2688 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2692 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2446 $tmp2692 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5567 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2694 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2695 ___633_yy 	%argrw{"wr"}
	assign		$tmp2696 ___633_zz 	%argrw{"wr"}
	point		$tmp2693 $tmp2694 $tmp2695 $tmp2696 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2693 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2697 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2698 ___639_d $tmp2697 	%argrw{"wrr"}
	if		$tmp2698 5589 5616 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2699 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2699 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2700 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2700 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2701 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp2701 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2702 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2702 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2703 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2703 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2704 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp2704 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2705 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2706 ___639_d $tmp2705 	%argrw{"wrr"}
	if		$tmp2706 5602 5616 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2707 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2707 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2708 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2708 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2709 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2709 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2710 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2710 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2711 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2712 ___639_d $tmp2711 	%argrw{"wrr"}
	if		$tmp2712 5611 5616 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2713 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2713 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2714 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2714 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2715 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2716 ___639_d $tmp2715 	%argrw{"wrr"}
	if		$tmp2716 5616 5616 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2717 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2718 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2719 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp2720 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp2721 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp2668 $tmp2720 $tmp2721 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp2722 $const13 $tmp2668 	%line{151} %argrw{"wrr"}
	sub		___663_t $tmp2722 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp2723 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp2723 5748 5748 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 5747 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 5745 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 5739 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 5739 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5736 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2727 $tmp2446 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2726 $tmp2727 	%argrw{"wr"}
	assign		___633_xi $tmp2726 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2729 $tmp2446 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2728 $tmp2729 	%argrw{"wr"}
	assign		___633_yi $tmp2728 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2731 $tmp2446 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2730 $tmp2731 	%argrw{"wr"}
	assign		___633_zi $tmp2730 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2733 5650 5652 5734 5736 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2732 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2733 ___633_xx $tmp2732 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2735 5654 5656 5732 5734 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2734 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2735 ___633_yy $tmp2734 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2737 5658 5660 5730 5732 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2736 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2737 ___633_zz $tmp2736 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2738 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2739 ___633_yy 	%argrw{"wr"}
	assign		$tmp2740 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2738 $tmp2739 $tmp2740 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5677 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2742 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2743 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2744 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2741 $tmp2742 $tmp2743 $tmp2744 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2741 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2746 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2747 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2748 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2745 $tmp2746 $tmp2747 $tmp2748 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2745 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2749 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2446 $tmp2749 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5681 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2751 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2752 ___633_yy 	%argrw{"wr"}
	assign		$tmp2753 ___633_zz 	%argrw{"wr"}
	point		$tmp2750 $tmp2751 $tmp2752 $tmp2753 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2750 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2754 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2755 ___639_d $tmp2754 	%argrw{"wrr"}
	if		$tmp2755 5703 5730 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2756 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2756 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2757 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2757 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2758 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp2758 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2759 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2759 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2760 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2760 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2761 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp2761 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2762 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2763 ___639_d $tmp2762 	%argrw{"wrr"}
	if		$tmp2763 5716 5730 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2764 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2764 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2765 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp2765 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2766 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2766 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2767 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp2767 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2768 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2769 ___639_d $tmp2768 	%argrw{"wrr"}
	if		$tmp2769 5725 5730 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2770 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp2770 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2771 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp2771 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2772 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2773 ___639_d $tmp2772 	%argrw{"wrr"}
	if		$tmp2773 5730 5730 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2774 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2775 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2776 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp2777 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp2778 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp2725 $tmp2777 $tmp2778 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp2725 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp2779 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp2779 5743 5744 	%argrw{"r"}
	assign		$tmp2724 $const23 	%argrw{"wr"}
	assign		$tmp2724 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp2780 $const13 $tmp2724 	%line{152} %argrw{"wrr"}
	sub		___663_t $tmp2780 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp2781 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp2781 5752 5752 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___663_t $tmp2446 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		___663_t $const4 	%line{194} %argrw{"wr"}
# include/node_texture.h:220
# 		if (hard)
	if		___667_hard 5757 5757 	%line{220} %argrw{"r"}
# include/node_texture.h:221
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp2782 $const13 ___663_t 	%line{221} %argrw{"wrr"}
	sub		$tmp2783 $tmp2782 $const23 	%argrw{"wrr"}
	fabs		___663_t $tmp2783 	%argrw{"wr"}
# include/node_texture.h:223
# 		sum += t * amp;
	mul		$tmp2784 ___663_t ___661_amp 	%line{223} %argrw{"wrr"}
	add		___661_sum ___661_sum $tmp2784 	%argrw{"wrr"}
# include/node_texture.h:224
# 		amp *= 0.5;
	mul		___661_amp ___661_amp $const10 	%line{224} %argrw{"wrr"}
# include/node_texture.h:225
# 		fscale *= 2.0;
	mul		___661_fscale ___661_fscale $const13 	%line{225} %argrw{"wrr"}
# include/node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	assign		$tmp2785 ___661_i 	%line{217} %argrw{"wr"}
	add		___661_i ___661_i $const7 	%argrw{"wrr"}
# include/node_texture.h:228
# 	float rmd = octaves - floor(octaves);
	floor		$tmp2786 ___661_octaves 	%line{228} %argrw{"wr"}
	sub		___661_rmd ___661_octaves $tmp2786 	%argrw{"wrr"}
# include/node_texture.h:230
# 	if (rmd != 0.0) {
	neq		$tmp2787 ___661_rmd $const4 	%line{230} %argrw{"wrr"}
	if		$tmp2787 6494 6504 	%argrw{"r"}
# include/node_texture.h:231
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp2788 ___661_fscale $tmp2440 	%line{231} %argrw{"wrr"}
	functioncall	$const6 6466 	%argrw{"r"}
# include/node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp2789 Basis $const1 	%line{177} %argrw{"wrr"}
	if		$tmp2789 5784 5784 	%argrw{"r"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const8 5783 	%line{178} %argrw{"r"}
# include/node_texture.h:158
# 	float f = 0.0;
	assign		___658_f $const4 	%line{158} %argrw{"wr"}
# include/node_texture.h:161
# 	if (type == 0)
	eq		$tmp2790 $const7 $const3 	%line{161} %argrw{"wrr"}
	if		$tmp2790 5776 5777 	%argrw{"r"}
# include/node_texture.h:162
# 		f = noise("perlin", p);
	noise		___658_f $const9 $tmp2788 	%line{162} %argrw{"wrr"}
# include/node_texture.h:166
# 		f = noise(p);
	noise		___658_f $tmp2788 	%line{166} %argrw{"wr"}
# include/node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp2791 ___658_f 	%line{169} %argrw{"wr"}
	eq		$tmp2792 $tmp2791 $const3 	%argrw{"wrr"}
	if		$tmp2792 5782 5782 	%argrw{"r"}
# include/node_texture.h:170
# 		return 0.5;
	assign		___664_t $const10 	%line{170} %argrw{"wr"}
	return
# include/node_texture.h:172
# 	return f;
	assign		___664_t ___658_f 	%line{172} %argrw{"wr"}
# include/node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# include/node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp2793 Basis $const11 	%line{179} %argrw{"wrr"}
	if		$tmp2793 5895 5895 	%argrw{"r"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const12 5894 	%line{180} %argrw{"r"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const14 5892 	%line{147} %argrw{"r"}
# include/node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const15 5892 	%line{134} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 5891 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2796 $tmp2788 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2795 $tmp2796 	%argrw{"wr"}
	assign		___633_xi $tmp2795 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2798 $tmp2788 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2797 $tmp2798 	%argrw{"wr"}
	assign		___633_yi $tmp2797 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2800 $tmp2788 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2799 $tmp2800 	%argrw{"wr"}
	assign		___633_zi $tmp2799 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2802 5805 5807 5889 5891 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2801 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2802 ___633_xx $tmp2801 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2804 5809 5811 5887 5889 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2803 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2804 ___633_yy $tmp2803 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2806 5813 5815 5885 5887 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2805 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2806 ___633_zz $tmp2805 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2807 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2808 ___633_yy 	%argrw{"wr"}
	assign		$tmp2809 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2807 $tmp2808 $tmp2809 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5832 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2811 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2812 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2813 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2810 $tmp2811 $tmp2812 $tmp2813 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2810 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2815 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2816 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2817 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2814 $tmp2815 $tmp2816 $tmp2817 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2814 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2818 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2788 $tmp2818 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5836 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2820 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2821 ___633_yy 	%argrw{"wr"}
	assign		$tmp2822 ___633_zz 	%argrw{"wr"}
	point		$tmp2819 $tmp2820 $tmp2821 $tmp2822 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2819 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2823 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2824 ___639_d $tmp2823 	%argrw{"wrr"}
	if		$tmp2824 5858 5885 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2825 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2825 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2826 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2826 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2827 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2827 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2828 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2828 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2829 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2829 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2830 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2830 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2831 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2832 ___639_d $tmp2831 	%argrw{"wrr"}
	if		$tmp2832 5871 5885 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2833 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2833 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2834 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2834 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2835 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2835 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2836 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2836 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2837 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2838 ___639_d $tmp2837 	%argrw{"wrr"}
	if		$tmp2838 5880 5885 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2839 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2839 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2840 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2840 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2841 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2842 ___639_d $tmp2841 	%argrw{"wrr"}
	if		$tmp2842 5885 5885 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2843 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2844 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2845 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2794 ___644_da $const3 	%line{121} %argrw{"wrr"}
# include/node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp2846 $const13 $tmp2794 	%line{147} %argrw{"wrr"}
	sub		___664_t $tmp2846 $const23 	%argrw{"wrr"}
# include/node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# include/node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp2847 Basis $const24 	%line{181} %argrw{"wrr"}
	if		$tmp2847 6006 6006 	%argrw{"r"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const25 6005 	%line{182} %argrw{"r"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const26 6003 	%line{148} %argrw{"r"}
# include/node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const15 6003 	%line{135} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6002 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2850 $tmp2788 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2849 $tmp2850 	%argrw{"wr"}
	assign		___633_xi $tmp2849 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2852 $tmp2788 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2851 $tmp2852 	%argrw{"wr"}
	assign		___633_yi $tmp2851 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2854 $tmp2788 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2853 $tmp2854 	%argrw{"wr"}
	assign		___633_zi $tmp2853 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2856 5916 5918 6000 6002 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2855 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2856 ___633_xx $tmp2855 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2858 5920 5922 5998 6000 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2857 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2858 ___633_yy $tmp2857 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2860 5924 5926 5996 5998 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2859 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2860 ___633_zz $tmp2859 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2861 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2862 ___633_yy 	%argrw{"wr"}
	assign		$tmp2863 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2861 $tmp2862 $tmp2863 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 5943 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2865 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2866 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2867 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2864 $tmp2865 $tmp2866 $tmp2867 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2864 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2869 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2870 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2871 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2868 $tmp2869 $tmp2870 $tmp2871 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2868 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2872 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2788 $tmp2872 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 5947 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2874 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2875 ___633_yy 	%argrw{"wr"}
	assign		$tmp2876 ___633_zz 	%argrw{"wr"}
	point		$tmp2873 $tmp2874 $tmp2875 $tmp2876 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2873 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2877 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2878 ___639_d $tmp2877 	%argrw{"wrr"}
	if		$tmp2878 5969 5996 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2879 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2879 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2880 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2880 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2881 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2881 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2882 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2882 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2883 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2883 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2884 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2884 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2885 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2886 ___639_d $tmp2885 	%argrw{"wrr"}
	if		$tmp2886 5982 5996 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2887 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2887 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2888 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2888 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2889 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2889 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2890 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2890 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2891 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2892 ___639_d $tmp2891 	%argrw{"wrr"}
	if		$tmp2892 5991 5996 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2893 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2893 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2894 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2894 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2895 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2896 ___639_d $tmp2895 	%argrw{"wrr"}
	if		$tmp2896 5996 5996 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2897 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2898 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2899 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2848 ___644_da $const7 	%line{121} %argrw{"wrr"}
# include/node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp2900 $const13 $tmp2848 	%line{148} %argrw{"wrr"}
	sub		___664_t $tmp2900 $const23 	%argrw{"wrr"}
# include/node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# include/node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp2901 Basis $const27 	%line{183} %argrw{"wrr"}
	if		$tmp2901 6117 6117 	%argrw{"r"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const28 6116 	%line{184} %argrw{"r"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const29 6114 	%line{149} %argrw{"r"}
# include/node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const15 6114 	%line{136} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6113 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2904 $tmp2788 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2903 $tmp2904 	%argrw{"wr"}
	assign		___633_xi $tmp2903 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2906 $tmp2788 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2905 $tmp2906 	%argrw{"wr"}
	assign		___633_yi $tmp2905 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2908 $tmp2788 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2907 $tmp2908 	%argrw{"wr"}
	assign		___633_zi $tmp2907 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2910 6027 6029 6111 6113 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2909 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2910 ___633_xx $tmp2909 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2912 6031 6033 6109 6111 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2911 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2912 ___633_yy $tmp2911 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2914 6035 6037 6107 6109 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2913 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2914 ___633_zz $tmp2913 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2915 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2916 ___633_yy 	%argrw{"wr"}
	assign		$tmp2917 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2915 $tmp2916 $tmp2917 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6054 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2919 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2920 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2921 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2918 $tmp2919 $tmp2920 $tmp2921 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2918 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2923 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2924 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2925 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2922 $tmp2923 $tmp2924 $tmp2925 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2922 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2926 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2788 $tmp2926 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6058 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2928 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2929 ___633_yy 	%argrw{"wr"}
	assign		$tmp2930 ___633_zz 	%argrw{"wr"}
	point		$tmp2927 $tmp2928 $tmp2929 $tmp2930 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2927 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2931 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2932 ___639_d $tmp2931 	%argrw{"wrr"}
	if		$tmp2932 6080 6107 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2933 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2933 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2934 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2934 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2935 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2935 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2936 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2936 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2937 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2937 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2938 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2938 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2939 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2940 ___639_d $tmp2939 	%argrw{"wrr"}
	if		$tmp2940 6093 6107 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2941 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2941 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2942 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2942 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2943 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2943 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2944 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2944 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2945 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp2946 ___639_d $tmp2945 	%argrw{"wrr"}
	if		$tmp2946 6102 6107 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp2947 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2947 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp2948 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2948 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp2949 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp2950 ___639_d $tmp2949 	%argrw{"wrr"}
	if		$tmp2950 6107 6107 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp2951 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp2952 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp2953 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2902 ___644_da $const18 	%line{121} %argrw{"wrr"}
# include/node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp2954 $const13 $tmp2902 	%line{149} %argrw{"wrr"}
	sub		___664_t $tmp2954 $const23 	%argrw{"wrr"}
# include/node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# include/node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp2955 Basis $const30 	%line{185} %argrw{"wrr"}
	if		$tmp2955 6228 6228 	%argrw{"r"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const31 6227 	%line{186} %argrw{"r"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const32 6225 	%line{150} %argrw{"r"}
# include/node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const15 6225 	%line{137} %argrw{"r"}
# include/node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6224 	%line{119} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp2958 $tmp2788 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp2957 $tmp2958 	%argrw{"wr"}
	assign		___633_xi $tmp2957 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp2960 $tmp2788 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp2959 $tmp2960 	%argrw{"wr"}
	assign		___633_yi $tmp2959 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp2962 $tmp2788 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp2961 $tmp2962 	%argrw{"wr"}
	assign		___633_zi $tmp2961 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___644_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___644_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___644_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___644_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp2964 6138 6140 6222 6224 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp2963 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp2964 ___633_xx $tmp2963 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp2966 6142 6144 6220 6222 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp2965 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp2966 ___633_yy $tmp2965 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp2968 6146 6148 6218 6220 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp2967 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp2968 ___633_zz $tmp2967 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp2969 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp2970 ___633_yy 	%argrw{"wr"}
	assign		$tmp2971 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp2969 $tmp2970 $tmp2971 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6165 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp2973 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp2974 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp2975 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp2972 $tmp2973 $tmp2974 $tmp2975 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp2972 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp2977 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp2978 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp2979 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp2976 $tmp2977 $tmp2978 $tmp2979 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp2976 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp2980 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2788 $tmp2980 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6169 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp2982 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp2983 ___633_yy 	%argrw{"wr"}
	assign		$tmp2984 ___633_zz 	%argrw{"wr"}
	point		$tmp2981 $tmp2982 $tmp2983 $tmp2984 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp2981 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp2985 ___644_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp2986 ___639_d $tmp2985 	%argrw{"wrr"}
	if		$tmp2986 6191 6218 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp2987 ___644_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2987 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp2988 ___644_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2988 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp2989 ___644_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___644_da $const7 $tmp2989 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___644_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp2990 ___644_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2990 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp2991 ___644_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2991 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp2992 ___644_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___644_pa $const7 $tmp2992 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___644_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp2993 ___644_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp2994 ___639_d $tmp2993 	%argrw{"wrr"}
	if		$tmp2994 6204 6218 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp2995 ___644_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp2995 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp2996 ___644_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___644_da $const18 $tmp2996 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___644_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp2997 ___644_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp2997 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp2998 ___644_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___644_pa $const18 $tmp2998 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___644_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp2999 ___644_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp3000 ___639_d $tmp2999 	%argrw{"wrr"}
	if		$tmp3000 6213 6218 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp3001 ___644_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___644_da $const20 $tmp3001 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___644_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp3002 ___644_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___644_pa $const20 $tmp3002 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___644_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp3003 ___644_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp3004 ___639_d $tmp3003 	%argrw{"wrr"}
	if		$tmp3004 6218 6218 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___644_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___644_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3005 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3006 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3007 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:121
# 	return da[n];
	aref		$tmp2956 ___644_da $const20 	%line{121} %argrw{"wrr"}
# include/node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp3008 $const13 $tmp2956 	%line{150} %argrw{"wrr"}
	sub		___664_t $tmp3008 $const23 	%argrw{"wrr"}
# include/node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# include/node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp3009 Basis $const33 	%line{187} %argrw{"wrr"}
	if		$tmp3009 6341 6341 	%argrw{"r"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const34 6340 	%line{188} %argrw{"r"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const35 6338 	%line{151} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 6338 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6335 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp3012 $tmp2788 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp3011 $tmp3012 	%argrw{"wr"}
	assign		___633_xi $tmp3011 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp3014 $tmp2788 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp3013 $tmp3014 	%argrw{"wr"}
	assign		___633_yi $tmp3013 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp3016 $tmp2788 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp3015 $tmp3016 	%argrw{"wr"}
	assign		___633_zi $tmp3015 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3018 6249 6251 6333 6335 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp3017 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp3018 ___633_xx $tmp3017 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3020 6253 6255 6331 6333 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp3019 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp3020 ___633_yy $tmp3019 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3022 6257 6259 6329 6331 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp3021 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp3022 ___633_zz $tmp3021 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp3023 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp3024 ___633_yy 	%argrw{"wr"}
	assign		$tmp3025 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp3023 $tmp3024 $tmp3025 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6276 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3027 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp3028 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp3029 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp3026 $tmp3027 $tmp3028 $tmp3029 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp3026 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3031 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp3032 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp3033 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp3030 $tmp3031 $tmp3032 $tmp3033 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp3030 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp3034 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2788 $tmp3034 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6280 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp3036 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp3037 ___633_yy 	%argrw{"wr"}
	assign		$tmp3038 ___633_zz 	%argrw{"wr"}
	point		$tmp3035 $tmp3036 $tmp3037 $tmp3038 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp3035 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp3039 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp3040 ___639_d $tmp3039 	%argrw{"wrr"}
	if		$tmp3040 6302 6329 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp3041 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp3041 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp3042 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp3042 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp3043 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp3043 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp3044 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp3044 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp3045 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp3045 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp3046 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp3046 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp3047 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp3048 ___639_d $tmp3047 	%argrw{"wrr"}
	if		$tmp3048 6315 6329 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp3049 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp3049 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp3050 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp3050 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp3051 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp3051 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp3052 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp3052 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp3053 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp3054 ___639_d $tmp3053 	%argrw{"wrr"}
	if		$tmp3054 6324 6329 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp3055 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp3055 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp3056 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp3056 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp3057 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp3058 ___639_d $tmp3057 	%argrw{"wrr"}
	if		$tmp3058 6329 6329 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3059 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3060 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3061 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp3062 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp3063 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp3010 $tmp3062 $tmp3063 	%argrw{"wrr"}
# include/node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp3064 $const13 $tmp3010 	%line{151} %argrw{"wrr"}
	sub		___664_t $tmp3064 $const23 	%argrw{"wrr"}
# include/node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# include/node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp3065 Basis $const37 	%line{189} %argrw{"wrr"}
	if		$tmp3065 6461 6461 	%argrw{"r"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const38 6460 	%line{190} %argrw{"r"}
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const39 6458 	%line{152} %argrw{"r"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const35 6452 	%line{143} %argrw{"r"}
# include/node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const36 6452 	%line{138} %argrw{"r"}
# include/node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const17 6449 	%line{129} %argrw{"r"}
# include/node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp3069 $tmp2788 $const3 	%line{59} %argrw{"wrr"}
	floor		$tmp3068 $tmp3069 	%argrw{"wr"}
	assign		___633_xi $tmp3068 	%argrw{"wr"}
# include/node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp3071 $tmp2788 $const7 	%line{60} %argrw{"wrr"}
	floor		$tmp3070 $tmp3071 	%argrw{"wr"}
	assign		___633_yi $tmp3070 	%argrw{"wr"}
# include/node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp3073 $tmp2788 $const18 	%line{61} %argrw{"wrr"}
	floor		$tmp3072 $tmp3073 	%argrw{"wr"}
	assign		___633_zi $tmp3072 	%argrw{"wr"}
# include/node_texture.h:63
# 	da[0] = 1e10;
	aassign		___645_da $const3 $const19 	%line{63} %argrw{"wrr"}
# include/node_texture.h:64
# 	da[1] = 1e10;
	aassign		___645_da $const7 $const19 	%line{64} %argrw{"wrr"}
# include/node_texture.h:65
# 	da[2] = 1e10;
	aassign		___645_da $const18 $const19 	%line{65} %argrw{"wrr"}
# include/node_texture.h:66
# 	da[3] = 1e10;
	aassign		___645_da $const20 $const19 	%line{66} %argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp3075 6363 6365 6447 6449 	%line{68} %argrw{"r"}
	sub		___633_xx ___633_xi $const7 	%argrw{"wrr"}
	add		$tmp3074 ___633_xi $const7 	%argrw{"wrr"}
	le		$tmp3075 ___633_xx $tmp3074 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp3077 6367 6369 6445 6447 	%line{69} %argrw{"r"}
	sub		___633_yy ___633_yi $const7 	%argrw{"wrr"}
	add		$tmp3076 ___633_yi $const7 	%argrw{"wrr"}
	le		$tmp3077 ___633_yy $tmp3076 	%argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp3079 6371 6373 6443 6445 	%line{70} %argrw{"r"}
	sub		___633_zz ___633_zi $const7 	%argrw{"wrr"}
	add		$tmp3078 ___633_zi $const7 	%argrw{"wrr"}
	le		$tmp3079 ___633_zz $tmp3078 	%argrw{"wrr"}
# include/node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp3080 ___633_xx 	%line{71} %argrw{"wr"}
	assign		$tmp3081 ___633_yy 	%argrw{"wr"}
	assign		$tmp3082 ___633_zz 	%argrw{"wr"}
	point		___639_ip $tmp3080 $tmp3081 $tmp3082 	%argrw{"wrrr"}
# include/node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const21 6390 	%line{72} %argrw{"r"}
# include/node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___632_r ___639_ip 	%line{47} %argrw{"wr"}
# include/node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp3084 ___639_ip $const7 	%line{48} %argrw{"wrr"}
	compref		$tmp3085 ___639_ip $const3 	%argrw{"wrr"}
	compref		$tmp3086 ___639_ip $const18 	%argrw{"wrr"}
	point		$tmp3083 $tmp3084 $tmp3085 $tmp3086 	%argrw{"wrrr"}
	cellnoise	___632_g $tmp3083 	%argrw{"wr"}
# include/node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp3088 ___639_ip $const7 	%line{49} %argrw{"wrr"}
	compref		$tmp3089 ___639_ip $const18 	%argrw{"wrr"}
	compref		$tmp3090 ___639_ip $const3 	%argrw{"wrr"}
	point		$tmp3087 $tmp3088 $tmp3089 $tmp3090 	%argrw{"wrrr"}
	cellnoise	___632_b $tmp3087 	%argrw{"wr"}
# include/node_texture.h:51
# 	return color(r, g, b);
	color		___639_vp ___632_r ___632_g ___632_b 	%line{51} %argrw{"wrrr"}
# include/node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp3091 ___639_vp ___639_ip 	%line{73} %argrw{"wrr"}
	sub		___639_pd $tmp2788 $tmp3091 	%argrw{"wrr"}
# include/node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const22 6394 	%line{74} %argrw{"r"}
# include/node_texture.h:24
# 		return dot(d, d);
	dot		___639_d ___639_pd ___639_pd 	%line{24} %argrw{"wrr"}
# include/node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp3093 ___633_xx 	%line{76} %argrw{"wr"}
	assign		$tmp3094 ___633_yy 	%argrw{"wr"}
	assign		$tmp3095 ___633_zz 	%argrw{"wr"}
	point		$tmp3092 $tmp3093 $tmp3094 $tmp3095 	%argrw{"wrrr"}
	add		___639_vp ___639_vp $tmp3092 	%argrw{"wrr"}
# include/node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp3096 ___645_da $const3 	%line{78} %argrw{"wrr"}
	lt		$tmp3097 ___639_d $tmp3096 	%argrw{"wrr"}
	if		$tmp3097 6416 6443 	%argrw{"r"}
# include/node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp3098 ___645_da $const18 	%line{79} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp3098 	%argrw{"wrr"}
# include/node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp3099 ___645_da $const7 	%line{80} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp3099 	%argrw{"wrr"}
# include/node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp3100 ___645_da $const3 	%line{81} %argrw{"wrr"}
	aassign		___645_da $const7 $tmp3100 	%argrw{"wrr"}
# include/node_texture.h:82
# 					da[0] = d;
	aassign		___645_da $const3 ___639_d 	%line{82} %argrw{"wrr"}
# include/node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp3101 ___645_pa $const18 	%line{84} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp3101 	%argrw{"wrr"}
# include/node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp3102 ___645_pa $const7 	%line{85} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp3102 	%argrw{"wrr"}
# include/node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp3103 ___645_pa $const3 	%line{86} %argrw{"wrr"}
	aassign		___645_pa $const7 $tmp3103 	%argrw{"wrr"}
# include/node_texture.h:87
# 					pa[0] = vp;
	aassign		___645_pa $const3 ___639_vp 	%line{87} %argrw{"wrr"}
# include/node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp3104 ___645_da $const7 	%line{89} %argrw{"wrr"}
	lt		$tmp3105 ___639_d $tmp3104 	%argrw{"wrr"}
	if		$tmp3105 6429 6443 	%argrw{"r"}
# include/node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp3106 ___645_da $const18 	%line{90} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp3106 	%argrw{"wrr"}
# include/node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp3107 ___645_da $const7 	%line{91} %argrw{"wrr"}
	aassign		___645_da $const18 $tmp3107 	%argrw{"wrr"}
# include/node_texture.h:92
# 					da[1] = d;
	aassign		___645_da $const7 ___639_d 	%line{92} %argrw{"wrr"}
# include/node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp3108 ___645_pa $const18 	%line{94} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp3108 	%argrw{"wrr"}
# include/node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp3109 ___645_pa $const7 	%line{95} %argrw{"wrr"}
	aassign		___645_pa $const18 $tmp3109 	%argrw{"wrr"}
# include/node_texture.h:96
# 					pa[1] = vp;
	aassign		___645_pa $const7 ___639_vp 	%line{96} %argrw{"wrr"}
# include/node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp3110 ___645_da $const18 	%line{98} %argrw{"wrr"}
	lt		$tmp3111 ___639_d $tmp3110 	%argrw{"wrr"}
	if		$tmp3111 6438 6443 	%argrw{"r"}
# include/node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp3112 ___645_da $const18 	%line{99} %argrw{"wrr"}
	aassign		___645_da $const20 $tmp3112 	%argrw{"wrr"}
# include/node_texture.h:100
# 					da[2] = d;
	aassign		___645_da $const18 ___639_d 	%line{100} %argrw{"wrr"}
# include/node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp3113 ___645_pa $const18 	%line{102} %argrw{"wrr"}
	aassign		___645_pa $const20 $tmp3113 	%argrw{"wrr"}
# include/node_texture.h:103
# 					pa[2] = vp;
	aassign		___645_pa $const18 ___639_vp 	%line{103} %argrw{"wrr"}
# include/node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp3114 ___645_da $const20 	%line{105} %argrw{"wrr"}
	lt		$tmp3115 ___639_d $tmp3114 	%argrw{"wrr"}
	if		$tmp3115 6443 6443 	%argrw{"r"}
# include/node_texture.h:106
# 					da[3] = d;
	aassign		___645_da $const20 ___639_d 	%line{106} %argrw{"wrr"}
# include/node_texture.h:107
# 					pa[3] = vp;
	aassign		___645_pa $const20 ___639_vp 	%line{107} %argrw{"wrr"}
# include/node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp3116 ___633_zz 	%line{70} %argrw{"wr"}
	add		___633_zz ___633_zz $const7 	%argrw{"wrr"}
# include/node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp3117 ___633_yy 	%line{69} %argrw{"wr"}
	add		___633_yy ___633_yy $const7 	%argrw{"wrr"}
# include/node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp3118 ___633_xx 	%line{68} %argrw{"wr"}
	add		___633_xx ___633_xx $const7 	%argrw{"wrr"}
# include/node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp3119 ___645_da $const7 	%line{131} %argrw{"wrr"}
	aref		$tmp3120 ___645_da $const3 	%argrw{"wrr"}
	sub		$tmp3067 $tmp3119 $tmp3120 	%argrw{"wrr"}
# include/node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___651_t $const40 $tmp3067 	%line{143} %argrw{"wrr"}
# include/node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp3121 ___651_t $const23 	%line{144} %argrw{"wrr"}
	if		$tmp3121 6456 6457 	%argrw{"r"}
	assign		$tmp3066 $const23 	%argrw{"wr"}
	assign		$tmp3066 ___651_t 	%argrw{"wr"}
	return
# include/node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp3122 $const13 $tmp3066 	%line{152} %argrw{"wrr"}
	sub		___664_t $tmp3122 $const23 	%argrw{"wrr"}
# include/node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# include/node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp3123 Basis $const41 	%line{191} %argrw{"wrr"}
	if		$tmp3123 6465 6465 	%argrw{"r"}
# include/node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___664_t $tmp2788 	%line{192} %argrw{"wr"}
	return
# include/node_texture.h:194
# 	return 0.0;
	assign		___664_t $const4 	%line{194} %argrw{"wr"}
# include/node_texture.h:233
# 		if (hard)
	if		___667_hard 6470 6470 	%line{233} %argrw{"r"}
# include/node_texture.h:234
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp3124 $const13 ___664_t 	%line{234} %argrw{"wrr"}
	sub		$tmp3125 $tmp3124 $const23 	%argrw{"wrr"}
	fabs		___664_t $tmp3125 	%argrw{"wr"}
# include/node_texture.h:236
# 		float sum2 = sum + t * amp;
	mul		$tmp3126 ___664_t ___661_amp 	%line{236} %argrw{"wrr"}
	add		___664_sum2 ___661_sum $tmp3126 	%argrw{"wrr"}
# include/node_texture.h:238
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp3127 $const7 ___661_n 	%line{238} %argrw{"wrr"}
	assign		$tmp3128 $tmp3127 	%argrw{"wr"}
	add		$tmp3129 ___661_n $const7 	%argrw{"wrr"}
	shl		$tmp3130 $const7 $tmp3129 	%argrw{"wrr"}
	sub		$tmp3131 $tmp3130 $const7 	%argrw{"wrr"}
	assign		$tmp3132 $tmp3131 	%argrw{"wr"}
	div		$tmp3133 $tmp3128 $tmp3132 	%argrw{"wrr"}
	mul		___661_sum ___661_sum $tmp3133 	%argrw{"wrr"}
# include/node_texture.h:239
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp3134 ___661_n $const7 	%line{239} %argrw{"wrr"}
	shl		$tmp3135 $const7 $tmp3134 	%argrw{"wrr"}
	assign		$tmp3136 $tmp3135 	%argrw{"wr"}
	add		$tmp3137 ___661_n $const18 	%argrw{"wrr"}
	shl		$tmp3138 $const7 $tmp3137 	%argrw{"wrr"}
	sub		$tmp3139 $tmp3138 $const7 	%argrw{"wrr"}
	assign		$tmp3140 $tmp3139 	%argrw{"wr"}
	div		$tmp3141 $tmp3136 $tmp3140 	%argrw{"wrr"}
	mul		___664_sum2 ___664_sum2 $tmp3141 	%argrw{"wrr"}
# include/node_texture.h:241
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp3142 $const23 ___661_rmd 	%line{241} %argrw{"wrr"}
	mul		$tmp3143 $tmp3142 ___661_sum 	%argrw{"wrr"}
	mul		$tmp3144 ___661_rmd ___664_sum2 	%argrw{"wrr"}
	add		$tmp2439 $tmp3143 $tmp3144 	%argrw{"wrr"}
	return
# include/node_texture.h:244
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp3145 $const7 ___661_n 	%line{244} %argrw{"wrr"}
	assign		$tmp3146 $tmp3145 	%argrw{"wr"}
	add		$tmp3147 ___661_n $const7 	%argrw{"wrr"}
	shl		$tmp3148 $const7 $tmp3147 	%argrw{"wrr"}
	sub		$tmp3149 $tmp3148 $const7 	%argrw{"wrr"}
	assign		$tmp3150 $tmp3149 	%argrw{"wr"}
	div		$tmp3151 $tmp3146 $tmp3150 	%argrw{"wrr"}
	mul		___661_sum ___661_sum $tmp3151 	%argrw{"wrr"}
# include/node_texture.h:245
# 		return sum;
	assign		$tmp2439 ___661_sum 	%line{245} %argrw{"wr"}
	return
# include/node_noise_texture.osl:39
# 
	color		Color Fac $tmp1726 $tmp2439 	%filename{"include/node_noise_texture.osl"} %line{39} %argrw{"wrrr"}
# include/node_noise_texture.osl:41
# }
	assign		Fac Fac 	%line{41} %argrw{"wr"}
	end
